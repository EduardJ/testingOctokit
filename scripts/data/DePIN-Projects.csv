name,id,url,category,chain,token,coinGeckoID,description,subcategories,ninja,foundingYear,twitter,discord,telegram,blog,github,linkedin,verified
"Weather Union ",00xbqx,https://www.weatherunion.com/,SENSORS,,,,"Weather Union by Zomato is a crowd-supported weather infrastructure providing real-time weather data through a network of on-ground weather stations, aimed at boosting productivity and aiding research institutes and enterprises.",Environmental,EV3 Sal,,,,,,,,
0G Labs,3klhti,https://0g.ai/,BLOCKCHAIN_INFRA,,,,0G is an infinitely scalable data availability (DA) layer and modular AI blockchain.,,ZZ,,https://twitter.com/0G_labs,,,,,,
0Knowledge,sq9otq,https://0101010011.xyz/,WIRELESS,ETHEREUM,0KN,0-knowledge-network,0KN is a next generation decentralized and incentivized metadata-private mixnet-based anonymous broadcast network with cryptographic security guarantees.,ZK,,,https://twitter.com/0Knowledge_net,,https://t.me/Entry_Portal_0KN,https://medium.com/@0knowledgee,https://github.com/31333337,,
0x0.ai,vqpvwd,https://0x0.ai/,AI,ETHEREUM,0X0,0x0-ai-ai-smart-contract,0x0.ai is an AI for secure smart contract development.,,,,https://twitter.com/0x0audits,1105051738806951976,https://t.me/Portal0x0,https://medium.com/@privacy0x0,https://github.com/0x0exchange,https://www.linkedin.com/company/0x0/,
0xParc,zf9ws4,https://0xparc.org/,NOT_DEPIN,,,,0xPARC supports the next generation of cryptography-enabled applications.,,,,,,,,,,
0xScope,0hgye7,https://www.0xscope.com/,AI,,,,"0xScope is a Web3 AI Data Layer with an established and complete set of standards for collecting, cleaning, and managing relevant on- and off-chain data specifically adapted for Web3 AI training.",,,,https://twitter.com/ScopeProtocol,,,,,,
0xVPN,4p96w0,https://0xvpn.org/,WIRELESS,ETHEREUM,VPN,,0xVPN is a Decentralized P2P VPN Network that allows users to browse the web securely and privately without any restrictions using a distributed P2P network.,VPN,ZZ,,https://twitter.com/0xVPN_org,,,,,,
1000Houses,2ly60i,https://www.1kh.org/,NOT_DEPIN,,,,"1000Houses is a tokenizing platform for real estate rent, connecting investors and tenants in a streamlined marketplace.",RWA,,,https://twitter.com/#!/Mitch_Stephen,,,https://1000houses.com/blog/,,https://www.linkedin.com/in/mitch-stephen-5a83156/,
2appy,s3mmvo,https://www.2appy.it/,NOT_DEPIN,,,,Digitize your communications in just a few clicks. The VoIP switchboard that saves you money in call management.,,,,,,,,,,
2DAI,cv1vse,https://dapp.2dai.io/,AI,ETHEREUM,2DAI,2dai-io,2DAI is an innovative AIaaS platform that combines multiple neural engines and leverages cutting-edge cloud technology to empower creative professionals to generate unique visuals and develop AI-powered solutions.,,ZZ,,,,,,,,
30sec,e1rwdv,https://30sec.net/#/,SENSORS,BINANCE,YET,,"30sec is a watch-to-earn app that incentivizes users to actively watch ads, enabling companies to spread brand advertisements efficiently and cost-effectively.",Advertising,ZZ,,https://twitter.com/30sec_yet,,,,,,
369 AI,lkgvvp,https://three69ai.com/,AI,ETHEREUM,369,,369 AI is a high-performance blockchain for AI applications.,,,,https://twitter.com/Three69AI,,https://t.me/Three69AI,,,,
3DOS,5dho62,https://3dos.io/,BLOCKCHAIN_INFRA,,,,3DOS is building a decentralized manufacturing network on Web 3.0 using NFTs as a licensing tool.,Manufacturing,,,https://twitter.com/3DOSNetwork,1065763640105521232,,,,https://www.linkedin.com/company/3dosio/,
3Dpass,b7kmt6,https://3dpass.org/,BLOCKCHAIN_INFRA,NATIVE,P3D,3dpass,"3DPass is a Layer 1 blockchain platform for the tokenization of objects, Proof of Scan protocol based on recognition, useful smart contracts, and dApps.","L1/L2, RWA",EV3 Sal,,https://twitter.com/3Dpass_official,,,,,,
3NUM,f5qe2h,https://www.3num.co/,WIRELESS,,,,3Num connects mobile subscribers for secure communication.,,,,https://twitter.com/3numdao,953486199799025704,,https://medium.com/@3NUMDAO,https://github.com/3numdao,https://www.linkedin.com/company/3numdao/,
3TV,jcp53v,https://3tv.chat/,NOT_DEPIN,,,,3TV.chat is a live-streaming app for creators and communities.,,,,https://twitter.com/3tv_chat,,,,,,
4everland,0tmpgv,https://www.4everland.org/,COMPUTE,,,,"4everland is a decentralized cloud provider integrating storage, computing, and networking resources.",Storage,ZZ,,https://twitter.com/4everland_org,852482727164117022,,,,https://au.linkedin.com/company/4everlandorg,
6079,v4u52z,https://6079.ai/,AI,,,,6079.ai is an open and distributed protocol for AI inference.,,ZZ,,https://twitter.com/6079ai,,,,,,
AANN.ai,ut3zdh,https://aann.ai/,NOT_DEPIN,,AN,,"AANN.ai Lab is the creator of a next-generation AI-powered social Authenticity Network ""AN"" which is designed to help users elevate, grow, and monetize their online social authenticity.",,ZZ,,https://twitter.com/aann_ai,,,,,,
Abacus.AI,ydunf2,https://abacus.ai/,AI,,,,Abacus.AI is an AI-assisted data science platform to build ML systems and AI agents at scale.,Agents,ZZ,,https://twitter.com/abacusai,,,,,,
Access,i4tcnw,https://www.accessprotocol.co/,NOT_DEPIN,SOLANA,ACS,access-protocol,ACCESS Protocol lays the foundation for digital content monetization using a web3 wallet.,,,,,1001837380044587118,,,,,
Acorn,a0dbki,https://acorn.eco/#/,BLOCKCHAIN_INFRA,NATIVE,ACN,acorn-protocol,Acorn Protocol is a data ecosystem that rewards users for contributing and monetizing data value in a vibrant way.,,,,https://twitter.com/AcornProtocol,,,,https://mobile.twitter.com/AcornProtocol/status/1706843598581358812,https://www.linkedin.com/company/acorn,
Acurast,o2w9zn,https://acurast.com/,COMPUTE,NATIVE,ACU,acurast,"Acurast is a decentralized and serverless cloud platform with a trustless, verifiable, and confidential computing environment leveraging mobile hardware to disrupt traditional server infrastructure.",,ZZ,,http://x.com/Acurast,,https://t.me/acurastnetwork,https://acurast.medium.com/,https://github.com/Acurast,,
Acxyn,ktxx7q,https://www.acxyn.xyz/,BLOCKCHAIN_INFRA,,,,Acxyn is a web3 company that aims to revolutionize the gaming industry as the world's first IP tokenization platform.,Gaming,,,https://twitter.com/Acxynteam,,,,,http://www.linkedin.com/company/acxyn,
Adapt,ct8tqp,https://www.adaptframework.solutions/,COMPUTE,,,,"Adapt is a developer framework for full-stack decentralized software development, focusing on peer-to-peer data sharing and decentralization of non-blockchain components of web3 dApps.",,,,,979396568597799012,,,,,
Addresso,a0a6d7,https://www.addresso.com/,NOT_DEPIN,,,,"Addresso is the address book app for the next era of the web, helping users store and organize wallet and smart contract addresses simply, intuitively, and privately.",,EV3 Sal,,,,,,,,
AdHash,p6m3rb,https://adhash.com/,BLOCKCHAIN_INFRA,,,,"AdHash is a self-hosted advertising platform that allows publishers and advertisers to serve ads, manage campaigns, and collect performance data on-premise.",Advertising,,,,,https://t.me/adhashprotocol,,https://github.com/AdHashProtocol,https://www.linkedin.com/company/adhashprotocol/,
Adot,iuet6b,https://www.a.xyz/,NOT_DEPIN,,,,"Adot is a decentralized Web3 search engine that redefines how data is collected, organized, and delivered. It sorts, aggregates, and indexes data from both on-chain and off-chain sources, allowing users to create personalized search functionalities.",,ZZ,,https://twitter.com/Adot_web3,,,,,,
Advantis,qvo0gi,https://www.advantistoken.com/,AI,ETHEREUM,ADVT,advantis,"Advantis AI empowers crypto enthusiasts with innovative solutions like AI Outlook, Scanner, and University.",,,,https://twitter.com/AdvantisToken,909875543128821811,https://t.me/advantisai,https://medium.com/@advantisai,,http://www.linkedin.com/company/advantisai,
AEGIS,ib50zn,https://aiaegis.org/,AI,ETHEREUM,AEGIS,aegis-ai,AEGIS AI is developing a pioneering Blockchain Security with AI-Enabled Audit Solutions,,,,https://twitter.com/AegisAISecurity,,https://t.me/AegisAISecurity,,,,
AeroNyx,5w860i,https://aeronyx.network/,WIRELESS,,,,"AeroNyx - decentralized DePIN protocol for privacy solutions, using Web3 principles.",,,,https://twitter.com/Aeronyx9,,,,,https://www.linkedin.com/company/aeronyx/,
Aethero,zualg9,https://www.aethero.com/,COMPUTE,,,,"Aethero builds radiation-hardened edge computers to process data from orbit and let users compress their bandwidth needs, automate tasks like navigation, or manage satellites in a constellation by deploying and training ML applications.",,EV3 Sal,,https://twitter.com/aetherospace,,,,,,
Aethir Edge,e3bezv,https://www.myedge.io/,COMPUTE,,,,"Aethir Edge is the next evolution of a decentralized, community-powered computing device integrated with Aethir's distributed GPU cloud infrastructure.",Hardware,ZZ,,https://twitter.com/AethirEdge,,,,,,
Aethir,oo2cn2,https://www.aethir.com/,COMPUTE,,ATH,aethir,Aethir is a Scalable Decentralised Cloud Infrastructure (DCI) for Gaming and AI.,,,,https://twitter.com/AethirCloud,993758224438284291,,,,https://www.linkedin.com/company/aethir-limited,
Agave Zwolf,zd2zu6,https://agavezwolf.com/,SERVICES,,AGVZ,,"Agave Zwolf is the provider of a token that is backed up by a plant of blue agave which is used to produce Tequila. When a new plant is planted by AgaveZwolf, a new Token is issued.",,,,,,,,,,
Agnostic,2pv22r,https://agnostic.engineering/,BLOCKCHAIN_INFRA,,,,Agnostic is the fastest access to aggregated smart-contract data. It allows developers to build their decentralised app without worrying about devops and data engineering.,,,,,,,https://medium.com/agnosticeng,,https://www.linkedin.com/company/agnostic/about/,
Agnostiq,anzeat,https://agnostiq.ai/,COMPUTE,,,,"Agnostiq develops Covalent, an open-source workflow platform for quantum computing and HPC.",,,,https://twitter.com/agnostiqHQ,,,,https://github.com/agnostiqHQ/covalent,https://www.linkedin.com/company/agnostiq/,
Agritoken,gaa7c0,https://agritoken.com.ph/,NOT_DEPIN,,,,Agritoken is tokenizing crop futures for efficient and transparent agricultural investing.,RWA,,,https://twitter.com/AgriToken,,,,,https://www.linkedin.com/company/agritoken/?originalSubdomain=br,
Agrotoken,r2yc3l,https://agrotoken.com/es/,BLOCKCHAIN_INFRA,,,,"Agrotoken allows you to do more and better business with agrocommodities, creating a simpler, more efficient and technological ecosystem. We are the new dimension of agribusiness",,,,https://twitter.com/agrotoken,,,,,https://www.linkedin.com/company/agrotoken/,
AhoyDAO,cqpqpq,https://www.ahoy.org/,BLOCKCHAIN_INFRA,,,,AhoyDAO is a peer-to-peer ecosystem for the marine industry ownership economy.,,,,https://twitter.com/ahoy_dao,,,,https://github.com/ahoy-cli/ahoy,https://www.linkedin.com/company/ahoy-/,
AI ARENA,1q9nu8,https://www.arenaxlabs.com/,AI,,NRN,,"AI ARENA is an Ethereum native game (dApp) where players all over the world can purchase, train, and battle characters powered by AI.",,EV3 Sal,,,,,,,,
AI Network,owekxa,https://www.ainetwork.ai/,AI,ETHEREUM,AIN,ai-network,"AI Network is a blockchain protocol-based collaborative computing architecture for AI and metaverse. ",,ZZ,,https://twitter.com/ainetwork_ai,,,,,,
AI Power Grid,kv3vqp,https://aipowergrid.io/,AI,,AIPG,ai-power-grid,AI Power Grid is an innovative blockchain project designed to incentivize and reward open-source AI participation.,,ZZ,,,,,,,,
AI Protocol,3zo6h4,https://www.aiprotocol.info/,AI,,,,"Platform merging AI and Web3 for creation, ownership, tokenization, and monetization of AI assets.",,,,https://twitter.com/ProtocolAI1,828681620893466655,,https://medium.com/@protocolai_ready,,https://www.linkedin.com/in/ai-protocol-201214283/,
AI21 Labs,byddbz,https://www.ai21.com/,AI,,,,AI21 Labs builds Foundation Models and AI Systems for enterprises that accelerate the use of GenAI in production.,ML,ZZ,,https://twitter.com/AI21Labs,,,,,,
AIgentX,ovok3r,https://aigentx.xyz/,AI,ETHEREUM,AIX,aigentx,"AIgentX is developing next-gen AI-driven chat solutions that simplify the user experience on Web3, making blockchain technology accessible to everyone.",,EV3 Sal,,https://twitter.com/0xaigentx,,,,,,
Aiis,zfup4o,https://aiis.dev/,AI,,,,"Skip complex code. With AI, creating and deploying your own ERC-20 token is as simple as answering a few questions!",,EV3 Sal,,,1170073310000853023,,,,,
Aimedis,p864om,https://aimedis.com/,AI,POLYGON,AIMX,aimedis-new,Aimedis is a Blockchain-based eHealth with medical apps and an NFT marketplace.,Health & Fitness,,,https://twitter.com/AimedisGlobal,1176263289701945396,https://t.me/AimedisOfficialEnglish,,,https://www.linkedin.com/company/aimedis/?originalSubdomain=nl,
AiONE,oqs9xj,https://ai.one/,AI,BINANCE,AIONE,aione,"AiONE: AI platform that integrates AI into business workflows. User-friendly AI services, APIs, and tools.",,,,https://twitter.com/aionelab,1093106091216347226,https://t.me/aionelab,,,http://www.linkedin.com/company/aionelabs,
AIOZ,tpqdbi,https://aioz.network/,COMPUTE,ETHEREUM,AIOZ,aioz-network,AIOZ is a decentralized content delivery network.,CDN,ZZ,,https://twitter.com/aioznetwork?lang=en,,https://t.me/s/aiozofficial,https://medium.com/aioz-network,,https://sg.linkedin.com/company/aioz-ai,
AIREALM,muunxy,https://www.airealm.tech/,AI,ETHEREUM,AIRM,,"AIREALM is an AI Ecosystem that gathers AI utilities into a single platform, enhancing convenience and innovation for users. The AI REALM suite consists of AI Swap, Chatbot, Chart Bot, and AI Auditor, catering to users of all levels.",,ZZ,,,,,,,,
Airlyft,2c4d5r,https://airlyft.one/,NOT_DEPIN,,,,"Discover Thriving Communities, Participate in Engaging Campaigns and Win Irresistible Rewards like NFTS, Tokens and Whitelists.",,,,,906232393986371644,,,,https://www.linkedin.com/products/kyteone-airlyft/,
AIRO,8q0l7y,https://www.airo.network/,SENSORS,,,,AIRO is a decentralized air quality monitoring network.,Environmental,ZZ,,https://twitter.com/AIRO_MU,1089157531001167958,,https://medium.com/@airo.network,https://github.com/airo,https://www.linkedin.com/company/airo-missions,
AirTor,l9if1e,https://ator.io/,WIRELESS,ETHEREUM,ATOR,airtor-protocol,AirTor: Proof-of-uptime and relay hardware for passive earning and support of Tor.,,,,https://twitter.com/atorprotocol,1083735132470521907,https://t.me/atorcommunityportal,https://medium.com/@ZeroSumTrayder/ator-protocol-the-next-big-thing-6d67a87243e2,https://github.com/ATOR-Development,,
AIT,ux0c4s,https://ait.tech/,AI,,,,Intersection of AI & blockchain,,EV3 Sal,,,,,,,,
Aizel,xziezz,https://aizelnetwork.com/,AI,,,,Aizel is an on-chain verifiable AI inference network that empowers blockchains with trustless AI abilities.,,ZZ,,https://twitter.com/aizel_network,,,,,,
Akash,qmmyw0,https://akash.network/,COMPUTE,COSMOS,AKT,akash-network,Akash is an open-source supercloud that enables secure and efficient buying and selling of computing resources.,GPUs,,,https://twitter.com/akashnet_,747885925232672829,,https://medium.com/@akashnet_,https://github.com/akash-network,http://www.linkedin.com/company/akash-network,
Akord,5fwdog,https://akord.com/,COMPUTE,,,,Akord: decentralized storage solution giving users control over data. A privacy hub and data marketplace.,Storage,,,https://twitter.com/AkordTeam,890229689019432981,,,https://github.com/Akord-com,https://fr.linkedin.com/company/akord-co,
Albedo,iqd05g,https://albedo.com/,NOT_DEPIN,,,,Albedo's low-flying satellites capture visible and thermal imagery at the highest resolution commercially available.,Satellites,,,https://twitter.com/vaxchain,,,,,https://www.linkedin.com/company/albedo-space/,
Aleo,y5j1bu,https://aleo.org/,NOT_DEPIN,,,,Aleo is a privacy-first Layer-1 blockchain that's zero-knowledge by design.,L1/L2,ZZ,,https://twitter.com/AleoHQ,,,,,,
Aleph Zero,qxdzwc,https://alephzero.org/,NOT_DEPIN,,AZERO,,"Aleph Zero is a layer 1 privacy-enhancing blockchain that ensures scalability, low transaction fees, instant finality, and optimal security. It's powered by a novel consensus protocol and the WASM-based technology stack.",,,,,775720634848116807,,,,,
Aleph,shwbn0,https://aleph.im/,COMPUTE,ETHEREUM,ALEPH,aleph-im,"Aleph.im is an open-source crosschain network featuring decentralized database including file storage, computing, and a decentralized identity (DID) framework.",,,,https://twitter.com/aleph_im,,https://t.me/alephim,https://medium.com/aleph-im,,https://www.linkedin.com/company/aleph-im/?originalSubdomain=fr,
Alephium,agw79k,https://alephium.org/,BLOCKCHAIN_INFRA,ETHEREUM,ALPH,alephium,"Alephium is a blockchain platform that combines innovative sharding, a stateful sUTXO model, and Proof-of-Less-Work to deliver scalable, secure, and energy-efficient dApps for real-world applications.",,ZZ,,,,,,,,
Alethea,zzxlj6,https://alethea.ai/,AI,ETHEREUM,ALI,artificial-liquid-intelligence,Alethea AI is a research and development studio building at the intersection of two of the most transformative technologies of our time: Generative AI and Blockchain.,NFTs,,2019,https://twitter.com/real_alethea,https://discord.com/invite/aiprotocol,,,,https://www.linkedin.com/company/realalethea/,
Algovera,vnkyd5,https://www.algovera.ai/,AI,,,,"Algovera is a decentralized AI platform that allows individuals and teams to create, use and share personalized AI.",,,,https://twitter.com/algoveraai,893460895999590450,,https://handbook.algovera.ai/blog/,https://github.com/AlgoveraAI/,https://www.linkedin.com/company/algovera/?originalSubdomain=ie,
Alkimi,xvizp7,https://www.alkimi.org/,NOT_DEPIN,ETHEREUM,ADS,alkimi,"Alkimi is a blockchain-based advertising exchange built on the fundamentals of lower fees, increased transparency, and reduced carbon emissions.",Advertising,ZZ,,https://twitter.com/AlkimiExchange,,,,,,
AllianceBlock,zgvzl4,https://allianceblock.io/,NOT_DEPIN,ETHEREUM,ALBT,allianceblock,AllianceBlock builds gateways between traditional & decentralized industries with blockchain infrastructure.,,,,https://twitter.com/allianceblock,742466730202234960,https://t.me/allianceblock,https://medium.com/allianceblock/allianceblock-the-next-era-of-allianceblock-eabb78b29ac3,https://github.com/Stichting-AllianceBlock-Foundation/,http://www.linkedin.com/company/allianceblock,
ALLIN,q9od26,https://www.allin.so/,AI,ETHEREUM,ALLIN,all-in,"All In is an AI-focused project, designed to empower communities and projects to fully utilize AI technology. They offer data analysis and management, process automation, customer services and community management, and content development services.",,ZZ,,,,,,,,
Allora,qs7j6q,https://allora.network/,AI,,,,"Allora is a self-improving decentralized AI network. It enables applications to leverage smarter, more secure AI through a self-improving network of ML models by crowdsourcing mechanisms, federated learning, and zkML.",,,,https://twitter.com/AlloraNetwork,,,,,,
Aloega,ki4zze,https://www.aloega.com/,SENSORS,,,,"ALOEGA is a global healthcare blockchain platform to enable decentralized, equitable, and secure sharing of health data.",,EV3 Sal,,https://twitter.com/Aloega_Official,,,,,,
Alpha Radar,q4l7ze,https://alpharadarbot.xyz/,AI,ETHEREUM,ARBOT,alpha-radar-bot,"Alpha Radar AI is a powerful AI ecosystem that harnesses advanced AI and LLM technologies. The ecosystem includes a Liquidity scanner, alpha radar bot, GameFi bot, web3.0 LLM, and NFT/Inscription Bot.",,ZZ,,,,,,,,
AlphaRushAI,s99udg,https://alpharush.ai/,AI,ETHEREUM,RUSHAI,alpharushai,"AlphaRush AI: Real-time news, analysis, and personalized trading alpha for cryptocurrency trading.",,,,,,,,,,
Alt Labs,9093bo,https://altlabs.dev/,COMPUTE,,,,Alt Labs is a builder of Web3 infrastructure user-friendly tools and interfaces for decentralized storage networks.,Storage,ZZ,,https://mobile.twitter.com/altlabsagency/status/1311308858816704514,,,https://medium.com/@alt_labs,https://github.com/RVA-ALT-Lab,https://uk.linkedin.com/company/alt-labs,
Altered State,9limss,https://www.alteredstatemachine.xyz/,AI,ETHEREUM,ASTO,altered-state-token,"Decentralized AI protocol for NFI, enabling ownership, trading, and training of AI agents through NFTs.",Agents,,,https://twitter.com/altstatemachine,864685888830963742,,,,https://www.linkedin.com/company/altered-state-machine/,
Althea,nag833,https://www.althea.net/,WIRELESS,GNOSIS,,,Althea is a web stack creating a marketplace for building ISPs and providing bandwidth in communities.,,,,,477147257251299350,,,,,
AltLayer,r5tb6n,https://altlayer.io/,NOT_DEPIN,,,,AltLayer is a decentralized protocol that facilitates the launch of native and re-staked rollups with both optimistic and zk rollup stacks.,,,,,954273304099815424,,,,,
Anapaya,q0o1zm,https://www.anapaya.net/,NOT_DEPIN,,,,"Move your critical services, such as websites and VPN endpoints, away from the standard internet path, and secure them behind Anapaya GATE.",,EV3 Sal,,,,,,,,
Anchor,gle4b5,https://www.greymass.com/anchor,NOT_DEPIN,,,,"Anchor Wallet is a developer of smart contract wallets, specializing in quantum resistance and Lamport signatures.",Wallet,,,https://twitter.com/pauli_group,,,,,http://www.linkedin.com/company/pauli-group,
Ancient8,xjogkp,https://www.ancient8.gg/,BLOCKCHAIN_INFRA,ETHEREUM,A8,,Ancient8 is building a DAO that develops a community and software platform to enable everyone to play and build the Metaverse while earning rewards.,,,,https://twitter.com/Ancient8_gg,882274636342116372,https://t.me/ancient8_gg,https://blog.ancient8.gg/,,https://www.linkedin.com/company/ancient8/about/,
Andrena,tgalub,https://andrena.com/,WIRELESS,,,,Andrena is a company offering high-speed internet distribution services with a focus on reduced costs.,,,,https://twitter.com/andrena_wifi?lang=en,,,,,https://www.linkedin.com/company/andrenainternet/,
Andromeda,g23dwt,https://www.andromedaprotocol.io/,COMPUTE,NATIVE,ANDR,andromeda-2,"Andromeda is developing a decentralized on-chain operating system (aOS) for Web3, streamlining operations with enhanced accessibility and efficiency.",,ZZ,,,,,,,,
Ankr,hqtk8u,https://www.ankr.com/,BLOCKCHAIN_INFRA,ETHEREUM,ANKR,ankr,"Ankr is a blockchain node infrastructure network enhancing multi-chain tools for Web3, DeFi, and the crypto economy.",RPC/Indexing,,,http://www.twitter.com/getankr,795634526918279179,https://t.me/ankrnetwork,https://medium.com/ankr-network,https://github.com/Ankr-network,http://www.linkedin.com/company/ankr,
Anon,6mqswi,https://www.anon.com/,NOT_DEPIN,,,,Anon enables developers to securely request and authenticate data from the most popular sites on the internet.,ZK,,,https://twitter.com/anonplatform,,,https://www.linkedin.com/company/anon-dot-com/about/,,,
Anryze,uvtnws,https://anryze.com/,COMPUTE,,,,Anryze is a decentralized data processing network where complex tasks can be distributed and run simultaneously.,,ZZ,,https://www.twitter.com/anryze,,https://t.me/,,,https://linkedin.com/company/anryze,
Ansa,i9mqty,https://ansaresearch.ai/,AI,,,,Ansa Research is a research firm focused on distributed infrastructure.,,EV3 Sal,,,,,,,,
Antic,hs6fc5,https://www.antic.xyz/,NOT_DEPIN,,,,Antic: Decentralized co-ownership integration for businesses.,,,,https://twitter.com/Getantic,,,https://medium.com/multeez,,http://www.linkedin.com/company/anticxyz,
Antimetal,gzcc2r,https://www.antimetal.com/,NOT_DEPIN,ETHEREUM,ACAI,,"Antimetal is an AWS cloud cost optimization platform that utilizes AI to analyze and optimize cloud spending, helping users maximize savings.",,,,https://twitter.com/AntimetalCloud,,,,,,
APhone,p8juld,https://www.aphone.com/,SENSORS,,PHONE,,"APhone is the 1st decentralized cloud smartphone, powered by Aethir.",,EV3 Sal,,https://twitter.com/aphonelabs,,,,,,
API3,agq5jo,https://api3.org/,BLOCKCHAIN_INFRA,,API3,,"API3 is a decentralized data oracle network that facilitates direct integration of APIs with blockchain applications, eliminating the reliance on third-party intermediaries.",,,,,758003776174030948,,,,,
Apillion,x94xlf,https://apillon.io/,NOT_DEPIN,,,,Apillion is a Web3 development platform enabling developers to build in the Polkadot ecosystem.,,,,https://twitter.com/Apillon,881835505120079912,,,https://github.com/Apillon,https://www.linkedin.com/company/apillon/,
Apraemio,nx180n,https://www.apraemio.com/,NOT_DEPIN,BINANCE,APRA,,"Apraemio is a gold-backed cryptocurrency project with exclusive rights to access one of the largest gold reserves in Mali, Africa, committed to using blockchain technology to provide investors with a secure and transparent way to invest in gold.",RWA,ZZ,,https://twitter.com/Apraemio_ofc,,,,,,
Apron,bg8k10,https://apron.network/,NOT_DEPIN,ETHEREUM,APN,apron,"Apron is a decentralized infrastructure service network for DApp developers, users, and operators on blockchain.",,,,https://twitter.com/apronofficial1,785051859655458826,,https://apron-network.medium.com/,https://github.com/Apron-Network/,,
Apus,ztd8go,https://www.apus.network/,AI,,,,Apus is a decentralized AI bot creator network that simplifies AI model design using blockchain.,,ZZ,,https://twitter.com/apus_network,,https://t.me/+AWdHtLSl2m4yM2I1,https://medium.com/@apusnetwork,https://github.com/apuslabs,http://www.linkedin.com/company/apus-network,
Aqtis,t39a28,https://aqtis.io/,NOT_DEPIN,ETHEREUM,AQTIS,aqtis,"AQTIS is a next-generation DeFi company built on top of their own AI-powered quantitative technology. It harnesses the power of data mining, machine learning, and artificial intelligence to generate yield and distribute it across the AQTIS ecosystem.",,,,https://twitter.com/aqtis_io,1088485685754863616,,,https://aqtis.gitbook.io/aqtis-documentation/,,
AquaSave,j5agj9,https://aquasave.io/,SENSORS,,,,"AquaSave is an ecosystem that uses IoT and blockchain technologies, and relies on community participation to analyze and track the status of the planet‚Äôs water resources.",,W. L.,,https://twitter.com/AquaSaveCrypto,936317978910285844,,https://medium.com/@aquabanknetwork,https://github.com/AquaSave-io,https://www.linkedin.com/company/aquasave-io/,
Arbitrum,v0j5p5,https://arbitrum.io/,NOT_DEPIN,ETHEREUM,ARB,arbitrum,"Arbitrum: Fast, scalable and cost-efficient Ethereum scaling solution.",L1/L2,,,https://twitter.com/arbitrum,585084330037084172,https://t.me/s/arbitrum,https://medium.com/offchainlabs,,,
Arbius,oxh2i6,https://arbius.ai/,COMPUTE,ETHEREUM,AIUS,arbius,"Arbius is a decentralized network for machine learning and a token with limited inflation. New coins are generated with GPU power by participating in the network. ",,EV3 Sal,,https://twitter.com/arbius_ai,,,,,,
Arc,234u26,https://arc.market/,AI,ETHEREUM,ARC,arc,Arc is a cutting-edge Web3 and AI company offering tools for developing decentralized projects.,,,,https://twitter.com/defi_arc,835671167838060584,,https://arc-market.medium.com/,https://github.com/ARC-MARKET/,http://www.linkedin.com/company/arcdefi,
Arcblock,w4zy3x,https://www.arcblock.io/en,NOT_DEPIN,ETHEREUM,ABT,arcblock,"ArcBlock is a new decentralized developer platform that simplifies the development of Distributed Ledger Technology (DLT), Blockchain, Web3, and AI.",,,,https://twitter.com/ArcBlock_io?locale=en,,,,https://github.com/arcblock?locale=en,https://www.linkedin.com/company/arcblock/?locale=en,
Archblock,rq4805,https://www.archblock.com/,BLOCKCHAIN_INFRA,,,,"Archblock is a decentralized alternatives marketplace built on TrueFi's open, transparent and immutable financial infrastructure.",,,,https://twitter.com/archblock_,,,https://www.archblock.com/blog,,https://www.linkedin.com/company/archblock/,
Architex,qx6nyb,https://architex.ai/,COMPUTE,ETHEREUM,ARCX,architex,"Architex is a mining layer targeting Proof-of-Work (POW) blockchains and AI networks such as Bitcoin, Bittensor, and Morpheus through its decentralized ASIC & GPU hardware infrastructure.",,ZZ,,https://twitter.com/Architex_ai,,,,,,
Archon,vltnk6,https://archon.network/,COMPUTE,,,,"Archon is a developer of a decentralized protocol enabling scientific research with secure storage, access, and governance.",Storage,ZZ,,,248822834317492245,,,,,
Arcium,v29y88,https://arcium.com/,COMPUTE,,,,"Arcium is a parallelized confidential computing network that provides developers and applications with a trustless, verifiable, and efficient framework to run encrypted computations.",,EV3 Sal,,https://twitter.com/ArciumHQ,,,,,,
Arctail,z931sb,https://www.arctail.com/,NOT_DEPIN,,,,Arctail is builduing a new infrastructure for on-chain finance.,,,,,,,,,,
Arden,23pr35,https://www.arden.cc/,NOT_DEPIN,,,,Arden integrates blockchain as an additive element to businesses’ existing systems to provide their customers with the benefits of next generation technology through a familiar web2 experience.,,EV3 Sal,,,,,,,,
ArDrive,e9qw0z,https://ar.io/,COMPUTE,,,,ar.io is a network of decentralized gateways and permanent domains for the Arweave ecosystem.,Storage,W. L.,,https://twitter.com/ar_io_network,908759493943394334,,,https://github.com/ar-io,https://www.linkedin.com/showcase/ar-io/,
Ares Protocol,obq296,https://www.aresprotocol.io/,BLOCKCHAIN_INFRA,ETHEREUM,ARES,ares-protocol,Ares is an on-chain-verified oracle platform that provides secure and reliable data services for the Polkadot DeFi ecosystem,Oracle,,,https://twitter.com/AresProtocolLab,857112014648115221,https://t.me/AresProtocolLab,https://aresprotocollab.medium.com/,https://github.com/aresprotocols,https://www.linkedin.com/company/aresprotocol/,
Argon,vc3622,https://www.argonsuite.org/,BLOCKCHAIN_INFRA,,,,Aragon is a software tools provider for direct democracy.,Gov,,,,,,,https://github.com/alex-dp/solana-democracy,,
Argus,l3bqbb,https://argus.gg/,BLOCKCHAIN_INFRA,,,,"Argus is a game developer and publisher that pioneering a game technology architecture that allows games, marketplaces, public good game infrastructures, and user-generated content/platforms to communicate and interoperate seamlessly.",,,,,1113162492445724723,,,,,
AristotleAI,gtqv1n,https://www.aristotle-ai.com/,AI,,,,AristotleAI provides personalized learning experiences and insights.,,,,https://twitter.com/0xAristotleAI,,,,,,
Ark,f918a3,https://ark.io/,NOT_DEPIN,,,,"Ark is a layer-2 protocol enabling cheap, anonymous, off-chain Bitcoin payments.",L1/L2,ZZ,,https://twitter.com/survivetheark?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,https://t.me/s/ARK_Trading_Desk?before=3180,https://projectark.medium.com/,https://github.com/ArkEcosystem,https://uk.linkedin.com/company/ark-schools,
Arkham,zgyen3,https://www.arkhamintelligence.com/,AI,ETHEREUM,ARKM,arkham,"Arkham is a cutting-edge crypto intelligence platform that specializes in the analysis and deanonymization of blockchain transactions, providing users with detailed insights into the real-world entities behind blockchain activities.",,ZZ,,,,,,,,
Arkreen,wyn0zn,https://arkreen.com/,ENERGY,,,,Arkreen is a Web3-powered digital infrastructure for global distributed renewable energy resources.,,W. L.,,https://twitter.com/arkreen_network,1022165037235839007,https://t.me/arkreen_network,https://medium.com/@arkreen,https://github.com/arkreen,https://www.linkedin.com/company/arkreen/,
Armur,ka2bzq,https://armur.ai/,AI,,,,Armur Ai is a web3 cybersecurity product suite/platform that helps secure decentralized applications and blockchain solutions.,,,,https://twitter.com/armur_ai,1021371417134125106,,https://armur.medium.com/,,https://www.linkedin.com/company/armurai/,
Artify,22cfnq,https://artifylabs.io/,AI,ETHEREUM,AFY,artify,Artify is a platform for artists to create and sell artwork without any additional costs.,,,,https://twitter.com/artifyerc,,https://t.me/artifylabs,https://medium.com/@artifylabs,,http://www.linkedin.com/company/artifylabs,
Arttoo,xa5vpi,http://www.arttoo.network/,NOT_DEPIN,,,,Arttoo is a platform that allows for the fractionalized trading of physical artwork.,RWA,,,,,,,,,
Arweave,0vks67,https://www.arweave.org/,COMPUTE,NATIVE,AR,arweave,Arweave is a permanent and decentralized web inside an open ledger.,Storage,,,https://twitter.com/ArweaveTeam,,,https://arweave.medium.com/,,http://www.linkedin.com/company/arweave,
Ascend,xhpnwq,https://www.ascend.sh/,SENSORS,,,,Ascend is a social accountability app that allows users to build good habits in a fun and social way while ensuring they get punished if they don't commit.,,EV3 Sal,,https://twitter.com/ascend_sh,,,,,,
AscensionWx,flp6ko,https://www.ascensionwx.com/,SENSORS,,,,AscensionWx is a WeatherMiner platform that allows users to earn Helium HNT tokens by predicting weather conditions.,Environmental,,,https://twitter.com/kandaweather,859677745860968469,,,,,
Astar,j764ic,https://astar.network/,NOT_DEPIN,ETHEREUM,ASTR,astar,Astar Network is a decentralized blockchain platform for Web3 innovations.,,,,,644182966574252073,,,,,
Aston,7wi7uw,https://www.astonlabs.co/,ENERGY,,,,Aston Labs: Decentralized energy & infrastructure network. Aston Tokens = network ownership.,,,,,,,,,http://www.linkedin.com/company/aston-labs-co,
Astral,55edse,https://astral.global/,BLOCKCHAIN_INFRA,,,,Astral develops open-source tools and infrastructure that allows users to build location-based dapps.,,EV3 Sal,,https://twitter.com/astralprotocol,,,,,,
Astran,4x50xh,https://astran.io/,NOT_DEPIN,,,,"Astran: Cybersecurity startup with Omnicloud, a decentralized data storage solution.","Software, Storage",,,https://twitter.com/astran_,,,,,http://www.linkedin.com/company/astran-io,
Astria,lgm1f3,https://www.astria.org/,NOT_DEPIN,,,,Astria Developer: Decentralization platform replacing centralized sequencers.,,,,https://twitter.com/AstriaOrg,1163902555080904715,,,https://github.com/astriaorg,http://www.linkedin.com/company/astria-labs,
Async,vggvrz,http://asynclabs.xyz/,COMPUTE,,,,Async Labs is a blockchain technology company focused on scaling decentralized computing.,,ZZ,,https://twitter.com/0xAsyncLabs,,,,,https://www.linkedin.com/company/asynclabs,
Asyrt,x58tx5,,BLOCKCHAIN_INFRA,,,,"Asyrt is developing an automatic invoice verification system using TLSNotary proofs. ",,EV3 Sal,,,,,,,,
Athena,ttxmp2,https://www.athenadao.co/,NOT_DEPIN,ETHEREUM,ATH,athenadao,AthenaDAO is a Community-Owned Translational Research Engine that focuses on supporting and incubating women’s health research projects during the initial stages of translational research.,,ZZ,,,,,,,,
Athenas,sjh4mq,https://athenasai.io/,AI,ETHEREUM,ATH,athenas-ai,Athenas AI is a provider of a novel approach for creating a multifunctional AI application using large language models (LLMs).,,ZZ,,https://twitter.com/Athenas_ai,,,,,,
Athene,ck1ptn,https://athene.network/,BLOCKCHAIN_INFRA,ETHEREUM,ATH,,Athene Network is a Layer 2 Mainnet for Ethereum and a comprehensive ecosystem with its free daily mining coin app.,,ZZ,,https://twitter.com/Athene_Network,,,,,,
Atlas Navi,dc50kw,https://www.atlasnavi.com/,WIRELESS,ETHEREUM,NAVI,atlas-navi,Atlas Navi: AI navigation app using smartphones to avoid traffic and earn MILE tokens.,,,,https://twitter.com/AtlasNavi,1177900167077298236,https://t.me/AtlasNaviApp,,,https://ro.linkedin.com/company/atlasnavi,
Atlas,dyg01u,https://www.atlasweb3.io/,NOT_DEPIN,,,,"Atlas is a global blockchain infrastructure-as-a-service (IAAS) group offering a broad range of value-added services including distributed high-performance computing, node infrastructure, networking, hardware, API support and storage to drive and maintain the Web 3.0 ecosystem.",,,,https://twitter.com/atlasweb3group,,,,,https://www.linkedin.com/company/atlasweb3/,
Atom Network,pn9n8b,,COMPUTE,,,,"Atom Network is an open, distributed, peer-to-peer compute network built by leveraging Solana’s “Generalized” state compression.",,ZZ,,https://twitter.com/AtomWeb3,,,,,,
Atoma,b85vw4,https://www.atoma.network/,AI,,,,Atoma Network is a decentralized platform focused on enabling transparent and collaborative AI development with an emphasis on verifiable inference to establish trust in AI applications.,,EV3 Sal,,https://twitter.com/atoma_network,,,,,,
Audius,4xwmst,https://audius.co/,NOT_DEPIN,ETHEREUM,AUDIO,audius,"Audius is a decentralized, community-owned and artist-controlled music-sharing protocol.",,,,https://twitter.com/audius,557662127305785361,https://t.me/audius,https://blog.audius.co/,,https://www.linkedin.com/company/audius-project/,
Augur,boagvx,https://www.augur.net/,BLOCKCHAIN_INFRA,ETHEREUM,REP,augur,Augur is a decentralized prediction market platform that utilizes Ethereum smart contracts to create a trustless oracle and forecasting tool where users can speculate on the outcome of events.,,ZZ,,,,,,,,
Aurora,tfu536,https://aurora.dev/,NOT_DEPIN,ETHEREUM,AURORA,aurora-near,"Aurora is a performant, scalable, and carbon neutral solution that executes Ethereum contracts on the NEAR blockchain.",L1/L2,,,https://twitter.com/auroraisnear,856517297141317643,https://t.me/auroraisnear,https://medium.com/aurora-platform,https://github.com/aurora-is-near,http://www.linkedin.com/company/aurora-is-near,
Autify,hoznm0,https://www.autifynetwork.com/,NOT_DEPIN,,,,"Developing a modern, modular supply-chain management & cross-border payment platform using blockchain and AI to increase transparency in both the global supply chain and retail industry.",,,,https://twitter.com/autifynetwork,,,https://autifynetwork.com/the-blog/,,https://www.linkedin.com/company/autify-network/,
Autochain,dwrle8,https://autochain.info/,BLOCKCHAIN_INFRA,,,,Autochain is a decentralized platform for authenticating vehicle history through blockchain.,Auto,,,https://twitter.com/forethought_ai,,,,,https://www.linkedin.com/company/forethought-ai/,
AutoGPT,n7zd4p,https://autogpt.net/,AI,,,,"AutoGPT is the vision of the power of AI accessible to everyone, to use and to build on. ",,EV3 Sal,,,,,,,,
Automata Network,so4way,https://www.ata.network/,BLOCKCHAIN_INFRA,,,,Automata Network is a modular attestation layer that extends machine-level trust to Ethereum by leveraging optimistic rollups and zero-knowledge proofs.,,ZZ,,https://twitter.com/AutomataNetwork,,,,,,
Autometa,b73ehy,https://www.autometa.network/,SENSORS,NATIVE,ATM,,"Autometa is a platform that empowers users to securely share driving data, earn rewards through Drive-to-Earn, and participate in a privacy-focused automotive ecosystem powered by blockchain technology.",,EV3 Sal,,https://twitter.com/AutometaNetwork,,,,,,
Autonolas,5wvni1,https://www.autonolas.network/,AI,ETHEREUM,OLAS,autonolas,Autonolas is a decentralized network of autonomous AI agents.,Agents,,,https://twitter.com/autonolas,899649805582737479,,,https://github.com/valory-xyz,,
Autonomy,jow0l5,https://www.autonomynetwork.io/,NOT_DEPIN,,,,Autonomy is a decentralized automation protocol designed for Web3 builders.,,,,https://twitter.com/AutonomyNetwork,1012829124395532328,,https://blog.autonomynetwork.io/,https://github.com/Autonomy-Network,https://www.linkedin.com/company/autonomynetwork/,
AutoPi,8sl5rq,https://www.autopi.io/,WIRELESS,,,,"AutoPi is an industry-leading provider of IoT infrastructure, offering specialized telematics devices and a cloud-based management platform for businesses with fleets.",,ZZ,,,,,,,,
Avalanche,wl4ipp,https://www.avax.network/,NOT_DEPIN,,AVAX,avalanche-2,"Avalanche is the fastest, most reliable smart contracts platform in the world.",L1/L2,,,https://twitter.com/avax,578992315641626624,,https://www.avax.network/blog,,https://www.linkedin.com/company/avalancheavax/,
Aventus,6u1zhk,https://aventus.io/,NOT_DEPIN,ETHEREUM,AVT,aventus,"Aventus enables scalable, interoperable, and carbon-neutral solutions for companies.",,,,https://twitter.com/aventusnetwork?lang=en,,,https://medium.com/aventus,https://github.com/Aventus,https://www.linkedin.com/company/aventus,
Avive World,hhkxx7,https://www.avive.world/,BLOCKCHAIN_INFRA,ARBITRUM,AVIVE,avive,"Avive World is a geosocial protocol and token-controlled community that emphasizes individual data sovereignty through its ""Sovereign Footprint"" concept, offering members immutable digital identities and exclusive access to content and services.",,ZZ,,,,,,,,
AWARE,rkfiyk,https://wearaware.co/,BLOCKCHAIN_INFRA,,,,AWARE traces cotton with tracer particles to ensure sustainable textiles.,,,,https://twitter.com/Aware?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,,https://github.com/awareframework,https://www.linkedin.com/company/aware-inc.,
Axal,xex8ed,https://www.ax.al/,BLOCKCHAIN_INFRA,,,,Axal is an intent coordination network powering autonomous web3 systems.,,EV3 Sal,,https://twitter.com/getaxal,,,,,,
AXEL,52m3lc,https://www.axel.org/,COMPUTE,NATIVE,AXEL,axel,"AXEL App is a decentralized, distributed device-to-device file management system that allows sharing and storage without compromising privacy. ",Storage,ZZ,,,,,,,,
Axelar,0fb1s7,https://axelar.network/,NOT_DEPIN,,AXL,,"Axelar provides a decentralized network that connects dApp builders with blockchain ecosystems, applications and users for frictionless cross-chain communication. Axelar consists of a protocol suite, tools, and APIs, designed to break down the barriers to cross-chain communication.",,,,,770814806105128977,,,,,
Axiom,gljif2,https://www.axiom.xyz/,NOT_DEPIN,,,,"Axiom is a ZK coprocessor for Ethereum which provides smart contracts trustless access to all on-chain data and arbitrary expressive compute over it. As GPUs do for CPUs today, Axiom augments the capabilities of blockchain consensus with ZKPs.",ZK,ZZ,,https://twitter.com/axiom_xyz,,,,,,
AXIS,56jkto,https://axistoken.io/,BLOCKCHAIN_INFRA,ETHEREUM,AXIS,axis-token,AXIS is a blockchain-powered direct freight network.,,,,https://twitter.com/axis_token,1182432231180996628,https://t.me/laneaxis,,https://github.com/laneaxis/axisToken_smart_contact,,
Axlflops,irqc43,https://axlflops.ai/,COMPUTE,SOLANA,AIGT,,Axlflops is a decentralized AI computing network providing GPU infrastructure to democratize access to AI computing resources.,,EV3 Sal,,https://twitter.com/Axlflops,,,,,,
AxonDAO,0iwefi,https://www.axondao.io/,NOT_DEPIN,ETHEREUM,AXGT,axondao-governance-token,AxonDAO is creating a DeSci system and global protocol that pays verified clinical trial participants and therapists in tokens for collecting biometric data.,DeSci,ZZ,,https://twitter.com/AxonDAO,,,,,,
AYDO,3g5b35,https://www.aydo.ai/,SENSORS,,,,Aydo is a decentralized network of smart home devices.,Smart Home,,,https://x.com/AYDO_AI?s=20,,https://t.me/aydoai,,https://github.com/AYDOAI,,
B-cube.ai,qug1e6,https://www.b-cube.ai/,AI,ETHEREUM,BCUBE,b-cube-ai,"B-cube.ai: AI platform for clients to create, optimize, and automate customized crypto trading strategies.",,,,https://twitter.com/Bcubeai,,,https://bcubeai.medium.com/,https://github.com/b-cube-ai,https://www.linkedin.com/company/11410299/,
B-Datagray,t47npe,https://www.b-datagray.com/,COMPUTE,,,,B-Datagray is a company developing a Blockchain infrastructure for decentralized GPU/CPU cloud computing.,GPUs,ZZ,,https://twitter.com/b_datagray,852187000085020703,https://t.me/bdatagray,,https://github.com/Datagen-Project,https://www.linkedin.com/company/b-datagray,
Bacalhau,jtoxcg,https://www.bacalhau.org/,COMPUTE,,,,"Bacalhau: Fast, efficient, secure computation platform.",,,,https://mobile.twitter.com/BacalhauProject/status/1581290104936484864,,,,https://github.com/bacalhau-project,https://www.linkedin.com/showcase/bacalhau-project/,
Bad Idea AI,a1y6iz,https://www.badidea.ai/,AI,ETHEREUM,BAD,bad-idea-ai,Bad Idea AI connects meme coin culture with artificial intelligence.,,,,https://www.twitter.com/badideaai,1106247023474249831,https://t.me/badideaai,,,,
Badger,2z45bk,https://badger.com/,NOT_DEPIN,ETHEREUM,BADGER,badger,BadgerDAO is a decentralized collective of builders supporting community-driven growth for Bitcoin across DeFi.,,,,,743271185751474307,,,,,
Bagel,0f91ta,https://www.bagel.net/,AI,,,,"Bagel is an open protocol for humans and autonomous AI agents to collectively build, trade, and license Machine Learning datasets.",,,,https://twitter.com/bagel_network,,,,,,
BagelDB,whi3bv,https://www.bageldb.ai/,AI,,,,BagelDB is a collaborative vector database and an incentivized marketplace for buying and selling vector embeddings for AI data.,,ZZ,,,,,,,,
Bair.ai,n6198m,https://bair.ai/,AI,,BAIR,,BAIR.AI is an All-Inclusive Generative AI platform with its custom LLM and Prompt to Earn Model for the Web 4 world,,ZZ,,https://twitter.com/bair_ai,,,,,,
Band,w2g116,https://www.bandprotocol.com/,BLOCKCHAIN_INFRA,,BAND,,Band Protocol is a cross-chain data oracle platform that aggregates and connects real-world data and APIs to smart contracts.,,,,,694023152795385948,,,,,
Banksea Finance,v5r18r,https://banksea.finance/,AI,,,,Banksea NFT is the first AI-Driven NFT Oracle & NFT Liquidity Infrastructure.,,,,,856444560371875891,,,,,
Banyan,jkyr67,https://www.banyan.computer/,COMPUTE,,,,Banyan Operator is a web3 storage platform for on-chain data storage on a robust storage protocol.,Storage,ZZ,,https://twitter.com/BanyanComputer,,,,,https://www.linkedin.com/company/banyancomputer,
Barterchain,v8cjbl,https://www.barterchain.io/,SERVICES,,,,"Barterchain is a peer to peer platform, where members can swap their skills and services for free.",,,,,,,,,,
BasedAI,ooffc8,https://www.getbased.ai/,AI,,,,BasedAI is a Decentralized P2P Network for Zero-Knowledge Large Language Models (zk-LLMs).,,EV3 Sal,,https://twitter.com/getbasedai,,,,,,
Battle Infinity,qx4wxc,https://battleinfinity.io/,BLOCKCHAIN_INFRA,BINANCE,IBAT,battle-infinity,Battle Infinity: Metaverse gaming platform with P2E battle games in IBAT Battle Arena.,Gaming,,,https://twitter.com/ibatofficial,1200923493664038912,https://t.me/battleinfinity,https://medium.com/tag/battle-infinity,https://github.com/solidproof/projects/blob/main/Battle%20Infinity/SmartContract_Audit_Solidproof_IBAT.pdf,http://www.linkedin.com/company/battle-infinity,
BAXUS,ddt6ub,https://www.baxus.co/,NOT_DEPIN,,,,"Baxus is an on-chain wine and spirits marketplace harnessing the power of blockchain to give users proof of ownership, authentication, and a safe storage solution.",RWA,EV3 Sal,,https://twitter.com/baxusco,,,,,,
BAZED,maga37,https://bazed.bet/,NOT_DEPIN,,,,Bazed is a PvP gaming platform using web3 technology.,Gaming,,,https://twitter.com/BAZEDBET,,,,,,
BBS,x7oewq,https://www.bbsnetwork.io/,NOT_DEPIN,ETHEREUM,BBS,bbs-network,"BBS Network is a blockchain network of Bulletin Board Systems where users can create forums to post, comment, and share ideas while generating revenue from their content.",,,,https://twitter.com/BBSnetworkIO,,,,,https://www.linkedin.com/company/bbsnet/?trk=similar-pages,
Beam Cloud,ernr38,https://www.beam.cloud/,COMPUTE,,,,Beam Cloud is a serverless GPU platform for deploying ML models without managing infrastructure.,,ZZ,,https://twitter.com/beam_cloud,,,,,,
Beam,mphwz0,https://beam.mw/,NOT_DEPIN,,BEAM,beam,"Beam is an advanced Proof-of-Work (PoW) Layer-1 privacy blockchain, where all transactions are concealed by default and no information about the sender, the receiver, or the amount is visible on-chain.",,,,,481833926697156611,,,,,
Bear AI,twt5j6,https://bearai.org/,AI,BINANCE,BAI,bearai,"Bear AI is an innovative crypto project designed to empower users with insights to navigate the crypto market. Their AI allows users to ask crypto questions and receive knowledgeable responses, making crypto education accessible and dynamic. ",,ZZ,,,,,,,,
Beegol,qvuc9n,https://beegol.com/,WIRELESS,,,,Beegol is a machine learning-based platform for monitoring and improving broadband and Wi-Fi customer experience.,,,,,,,,,https://www.linkedin.com/company/beegol/,
Beluga,c9xfts,https://heybeluga.com/,NOT_DEPIN,,,,Beluga is a trusted crypto platform that onboards and guides new users through their crypto journey.,,,,https://x.com/getbeluga,,,,,http://www.linkedin.com/company/heybeluga,
Beoble,y4wofx,https://www.beoble.io/,COMPUTE,,,,Wallet to wallet messaging app,,EV3 Sal,,,,,,,,
Bepro,qkto8r,https://bepro.network/,SERVICES,ETHEREUM,BEPRO,bepro-network,"Bepro is a task-based marketplace created to help organizations and builders. Organizations can easily create and launch tasks, while builders have the opportunity to work on them and earn crypto as payment.",,ZZ,,,,,,,,
Beyond,3kk637,https://beyond.link/,BLOCKCHAIN_INFRA,ETHEREUM,BP,beyond-protocol,"Beyond Protocol is a blockchain for IoT, providing decentralized security layer and smart contracts.",L1/L2,,,https://twitter.com/beyondprotocol1,,http://t.me/beyondprotocol,https://beyondprotocol.medium.com/,https://github.com/beyondprotocol,http://www.linkedin.com/company/beyond-protocol,
Big Data,6ms5ds,https://bigdataprotocol.com/,COMPUTE,ETHEREUM,BDP,big-data-protocol,Big Data is a platform for sharing commercial data and services through DeFi protocol and Web3 marketplace.,,ZZ,,https://twitter.com/bigdataprotocol,,https://t.me/bigdataprotocol,https://medium.com/big-data-protocol,,https://linkedin.com/company/big-data-protocol,
BigCode,3bhj2n,https://www.bigcode-project.org/,NOT_DEPIN,,,,"BigCode Project is an open scientific collaboration run by Hugging Face and ServiceNow Research, focused on open and responsible development of LLMs for code.",ML,ZZ,,https://twitter.com/BigCodeProject,,,,,,
Bird.Money,64mpyg,https://bird.money/,AI,ETHEREUM,BIRD,bird-money,Bird is a decentralized oracle providing blockchain developers with analytics products for web platforms.,,,,https://twitter.com/_birdmoney,1185764787657920672,https://t.me/joinchat/AAAAAEzyFurRdr3sZZnrBw,https://medium.com/bird-money,https://github.com/bird-money,https://www.linkedin.com/company/birdmoney/,
Birdbyte,nbtmvr,https://www.birdbyte.io/,COMPUTE,ETHEREUM,BIRDB,,"Birdbyte is a platform that empowers users to benchmark their devices and matches them with the ideal partners to utilize their unused GPU, CPU, and bandwidth.",,ZZ,,https://twitter.com/BirdByte_io,,,,,,
Bison,f0ceeu,https://bisonlabs.io/#/dashboard,NOT_DEPIN,,,,Bison is a ZK-STARK roll-up built on Bitcoin via Ordinals that aims to boost Bitcoin's user experience with faster functionality while retaining its security.,ZK,ZZ,,https://twitter.com/bison_labs,,,,,,
Bistroo,qpkhj7,https://www.bistroo.io/,SERVICES,ETHEREUM,BIST,bistroo,Bistroo is a decentralized marketplace for food & beverage delivery.,,ZZ,,https://twitter.com/BistrooIO,,,https://bistroo.medium.com/,https://github.com/bistroo,https://www.linkedin.com/company/bistroo-nl/,
BitAds,2cgzxh,https://bitads.ai/,NOT_DEPIN,BITTENSOR,,,"BitAds is a Decentralized Advertising Network that leverages the Bittensor Network to offer cost-effective, high-quality advertising through a unique incentive mechanism for miners and validators.",,ZZ,,https://twitter.com/bitads_ai,,,,,,
bitnost.re,ss8gck,https://bitnost.re/,AI,,,,"Bitnost.re bridges Bittensor AI to Nostr social media protocol, building an access backbone for AI interaction.",,,,https://twitter.com/bitnostre,,,,,,
Bitping,x0mqmd,https://bitping.com/,COMPUTE,,,,Bitping is a distributed network intelligence solution that enables users to share CPU and bandwidth for ping tests.,,,,https://twitter.com/BitpingApp,,https://t.me/bitping,https://medium.com/@bitping/bitping-creating-a-monitor-24e2814ff148,https://github.com/BitpingApp,http://www.linkedin.com/company/bitping,
Bitrock,fy70r2,https://bit-rock.io/,NOT_DEPIN,ETHEREUM,BROCK,bitrock,"Bitrock: blockchain with low fees, high speed, and multichain DEX.",,,,https://twitter.com/BitRockChain,1131681197504860231,https://t.me/Bitrockchain,https://bitrockchain.medium.com/,https://github.com/BitrockChain,http://www.linkedin.com/company/discord,
BitsCrunch,x835xi,https://bitscrunch.com/,NOT_DEPIN,,,,"BitsCrunch: AI-powered, decentralized NFT data for reliable dApps.",,,,https://twitter.com/bitscrunch/,860459595025219585,https://t.me/bitsCrunch/,https://blog.bitscrunch.com/,,https://www.linkedin.com/company/bitscrunch/,
Bittensor,hq4rl7,https://bittensor.com/,AI,NATIVE,TAO,bittensor,Bittensor is a peer-to-peer machine intelligence network.,Inferencing,,,,799672011265015819,,https://bittensor.medium.com/,https://github.com/topics/bittensor,https://github.com/topics/bittensor,
Bixos,ey787u,https://bixos.com/,BLOCKCHAIN_INFRA,,UBXS,,"Bixos is a cutting-edge blockchain development, Cryptocurrency asset management, and investment company.",,,,,927874928009687090,,,,,
Black Creek,9zy8l2,https://www.blackcreekdigital.com/,COMPUTE,,,,Black Creek Digital is a developer and operator of computing facilities for decentralized and AI apps.,Mining,ZZ,,https://twitter.com/BlackCreekDig,,,,,https://www.linkedin.com/company/black-creek-digital/,
Black Rabbit,zanbgd,https://blackrabbitai.com/,AI,ETHEREUM,BRAIN,black-rabbit-ai,"Black Rabbit AI is an AI platform that aggregates tools, making it easy to get effective results with optimized prompts.",,,,https://twitter.com/BlackRabbitAI,,https://t.me/BlackRabbitAIPortal,https://blackrabbitai.medium.com/,,,
Black Sheep,dg3bp5,https://www.theblacksheep.io/,BLOCKCHAIN_INFRA,,,,Black Sheep Group is a decentralized marketplace simplifying investing in Web3 assets.,,,,https://twitter.com/theblacksheepg,,https://t.me/blacksheep_g,,,http://www.linkedin.com/company/blacksheepgroup,
Blackbird,vhqz3k,https://www.blackbird.xyz/,SERVICES,POLYGON,,,Blackbird is a loyalty and membership platform for restaurants.,,,,https://twitter.com/blackbirdvc,1090286137790169161,,,,https://www.linkedin.com/company/blackbirdvc,
Blackhat,3jgdnl,https://blackhatco.in/,NOT_DEPIN,ETHEREUM,BLKC,blackhat-coin,Blackhat cyber game: Players as DeFi protocos v AI hackerChatGPT.,ML,,,https://twitter.com/BlackHatEvents,822505689385533440,,,,https://www.linkedin.com/groups/37658/,
BLAGO,5gzqkg,https://blago.pages.dev/,NOT_DEPIN,TON,BLAGO,,BLAGO is a decentralized neural network for the uniform distribution of material assets between its participants.,,ZZ,,https://twitter.com/xBLAG0,,,,,,
BlastAI,lw9wd8,https://www.blastai.tech/,AI,ETHEREUM,BLAST,blastai,"BlastAI utilizes LPUs to deliver a suite of AI-powered audio intelligence products, including superior speech-to-text, human-like text-to-speech, customizable voice assistants, and direct phone number acquisition to enhance voice AI applications.",,ZZ,,https://twitter.com/BlastAI_Tech,,,,,,
Blendr,cqbtys,https://www.blendr.network/,COMPUTE,ETHEREUM,BLENDR,blendr-network,"Blendr Network is a decentralized GPU computing network designed to transform AI, rendering, and simulations by leveraging underutilized global GPU resources for scalable, secure, and cost-efficient computing.",,ZZ,,https://twitter.com/BlendrNetwork,,,,,,
Blinq,5ts91p,https://blinqnetworks.com/,WIRELESS,,,,"Blinq offers affordable, high-performance 5G ready wireless solutions company for fixed and mobile services.",,,,https://twitter.com/blinqnet,,,,,https://www.linkedin.com/company/blinq-networks/,
Block Entropy,4hsfb2,https://blockentropy.dev/,AI,,,,"Block Entropy Blockchain, a groundbreaking platform democratizing access to AI and machine learning solutions. Harnessing the power of blockchain technology",,,,,,,,,,
Blockcast,fxg6py,https://blockcast.net/,COMPUTE,,,,"Blockcast is a CDN and marketplace for broadcast capacity, optimizing network traffic.",CDN,W. L.,,,,https://t.me/blockcastit,,https://github.com/topics/blockcast,https://www.linkedin.com/company/sat-blockcast/,
Blockchain Bets,afo4li,https://blockchainbets.app/,NOT_DEPIN,ETHEREUM,BCB,blockchain-bets,Blockchain Bets - decentralized casino & sports betting platform on blockchain for transparency & security.,Gaming,,,https://twitter.com/BCBerc20?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,,,,
BlockFlow,w0ifd2,https://blockflow.network/,BLOCKCHAIN_INFRA,,,,BlockFlow is a platform that simplifies the process of setting up database backends for dApps utilizing event-driven functionalities.,,,,https://twitter.com/flow_block,,https://t.me/blockflowdata,,,https://www.linkedin.com/company/blockfloww/,
Blockless,4tmf6y,https://blockless.network/,NOT_DEPIN,,BLS,blockless,Blockless is a customizable execution layer for decentralized serverless apps.,,,,https://x.com/theblockless,929539044742938634,https://t.me/blocklessofficial,,https://github.com/blocklessnetwork,http://www.linkedin.com/company/blockless,
BlockMesh,mldz2g,https://blockmesh.xyz/,WIRELESS,,BMESH,,"BlockMesh is an innovative, open, and secure network that enables users to monetize their excess bandwidth while providing consumers with increased privacy and access to data for AI, e-commerce, search engines, and other businesses.",,EV3 Sal,,https://twitter.com/blockmesh_xyz,,,,,,
Blockride,84nnyv,https://www.blockride.xyz/,NOT_DEPIN,,,,Blockride: democratizing vehicle financing in Africa through crypto assets.,RWA,,,,994991249071288430,,https://medium.com/@info.blockride/hello-world-7d0e75386221,,http://www.linkedin.com/company/blockride,
Blockskye,vzyplm,https://www.blockskye.com/,BLOCKCHAIN_INFRA,,,,"Blockskye utilizes blockchain to simplify and enhance enterprise travel and procurement processes, fostering transparency and connectivity among suppliers, buyers, and users.",,ZZ,,,,,,,,
Blocksquare,bjl484,https://blocksquare.io/,BLOCKCHAIN_INFRA,ETHEREUM,BST,blocksquare,Blocksquare is a developer of the world‚Äôs leading blockchain-based real estate tokenization system.,,,,,955485740211503124,,,,,
Blocksurvey,w1c0r2,https://blocksurvey.io/,NOT_DEPIN,,,,"BlockSurvey offers Tokengated surveys, enabling users to engage in blockchain-based survey participation.",,,,https://twitter.com/blocksurvey,669101220937596953,,,https://github.com/BlockSurvey,https://www.linkedin.com/company/blocksurvey/,
BLOCX,zqsqzl,https://blocx.tech/,COMPUTE,NATIVE,BLOCX,blocxtech,"BLOCX is a comprehensive all-in-one computer manager that utilizes masternodes for network stability, offers CPU and GPU rental, and cloud storage solutions, and includes a decentralized exchange, built using X11 as a proof-of-work algorithm.",,,,,1110639428747145287,,,,,
Blok.Host,dc0ua7,https://blok.host/,COMPUTE,,HOST,,Blok.Host is a Decentralised Content Delivery Network (dCDN) that empowers users to quickly deploy their websites and use the platform's node network to distribute content.,CDN,EV3 Sal,,https://twitter.com/blok_host,,,,,,
Bloodchain,epty1v,,SERVICES,,,,Bloodchain: trustworthy and secure blood donation network with verifiable records for donors and recipients.,Health & Fitness,,,,,,,,,
BLOOM,nmlvq2,https://bigscience.huggingface.co/,NOT_DEPIN,,,,"BLOOM (BigScience Language Open-science Open-access Multilingual) is an autoregressive Large Language Model (LLM), trained to continue text from a prompt on vast amounts of text data using industrial-scale computational resources. ",ML,ZZ,,https://twitter.com/BigScienceLLM,,,,,,
BloomSkyX,7v8g7g,https://bloomskyx.com/,SENSORS,SOLANA,BLX,,"BloomSkyX is a decentralized AI-centric weather network where users buy weather stations, mine data, and receive rewards. The network generates weather data and incorporates it into AI weather models, making weather more predictable and valuable.",,ZZ,,https://twitter.com/bloomskyx,,,,,,
bloXmove,3xdu4v,https://bloxmove.com/,SENSORS,ETHEREUM,BLXM,bloxmove-erc20,"bloXmove is developing a Mobility Blockchain Platform. By earning or holding this token, companies can connect their vehicles to bloXmove to offer decentralized mobility services.",Auto,,,https://twitter.com/bloxmove,,https://t.me/bloXmoveCommunity,https://medium.com/bloxmove,https://github.com/bloxmove-com,https://www.linkedin.com/company/bloxmove2021/,
Bloxtel,8ukwaw,https://bloxtel.com/,WIRELESS,,,,Bloxtel builds decentralized SIM authentication protocols (dSIM).,,,,,,,,,http://www.linkedin.com/company/bloxtel,
Bluebird Power,h56lyg,http://www.bluebirdpower.com/,ENERGY,,,,Bluebird Power: Decentralized energy management platform.,,,,,,,,,http://www.linkedin.com/company/bluebird-power,
Bluesea,awvg5f,https://bluesea.network/,COMPUTE,,BSEA,,"Bluesea Network is a decentralized network with designed routing for ultra-low latency streaming, lowering cost by utilizing redundant resources from home and enterprise servers.",,ZZ,,,,,,,,
Bluwhale,fbhsnz,https://www.bluwhale.com/,AI,,BLUAI,,Bluwhale is a decentralized AI personalization protocol that specializes in unlocking the full potential of decentralized applications (dApps) by extracting deep insights from consenting user wallets across a variety of blockchain networks.,,ZZ,,https://twitter.com/bluwhaleai,,,,,,
Bluzelle,jgehxs,https://bluzelle.com/,COMPUTE,ETHEREUM,BLZ,bluzelle,"Bluzelle is a decentralized data ecosystem providing scalable and secure storage solutions for decentralized applications, with a focus on enhancing the development and user experience of DApps through its advanced database services.",,ZZ,,,,,,,,
BNB Greenfield,9ly2ak,https://greenfield.bnbchain.org/,COMPUTE,,,,"BNB Greenfield is a Decentralized Data Storage System and Economy that allows users to store, exchange, and own data to create a new data economy within the BNB Chain ecosystem.",,ZZ,,,,,,,,
BOINC AI,9t9n46,https://www.boincai.com/,AI,NATIVE,BOB,,BOINC AI aims to solve the impossible triangle between blockchain and AI by building the world's largest decentralised cloud computing platform and AI public chain system.,,ZZ,,https://twitter.com/BOINCAI,,https://t.me/boincaienglish,,,,
Bonfire,7g4np6,https://bonfirenetworks.org/,NOT_DEPIN,BINANCE,BONFIRE,bonfire,Bonfire allows users to create and control their own digital lives on a federated social network.,Social,,,,,,,,,
Bonsai,w3i2cx,https://www.bonsai.xyz/,NOT_DEPIN,,,,"Bonsai is a decentralized proving engine that empowers developers to seamlessly integrate ZK proofs into their applications, blockchains, and appchains, enhancing security and enabling complex computations.",ZK,EV3 Sal,,,,,,,,
Boring,whkmqt,https://boringprotocol.io/,WIRELESS,SOLANA,BOP,boring-protocol,Boring is a decentralized VPN and peer-to-peer bandwidth market.,VPN,ZZ,,https://twitter.com/BoringProtocol,,,,https://github.com/boringprotocol/,https://www.linkedin.com/company/boringprotocol/,
Borlaug,g2f9pf,https://www.borlaug.ws/,BLOCKCHAIN_INFRA,,,,Borlaug Web Services is a purpose-built blockchain SaaS platform for agriculture value chains.,Software,,,https://twitter.com/borlaug_ws,,,http://www.linkedin.com/company/borlaug-ws,https://github.com/BorlaugWebServices/borlaug,,
Boson,nzimvj,https://www.bosonprotocol.io/,NOT_DEPIN,ETHEREUM,BOSON,boson-protocol,"Boson Protocol's Web3 Commerce Layer enables the tokenization, transfer and trade of any physical thing as a redeemable NFT.",,,,,811155042714779678,,,,,
Bostrom,qtg6m9,https://cyb.ai/,AI,NATIVE,BOOT,bostrom,"Bostrom is a network focused on Superintelligence, serving as a hub for domain specific networks in the Cyber ecosystem.",,,,https://twitter.com/cyber_devs,,https://t.me/cyber,,https://github.com/cybercongress,,
Botanix,97mtzl,https://www.botanixlabs.xyz/,NOT_DEPIN,,,,The first fully decentralized Layer 2 EVM on Bitcoin.,,EV3 Sal,,,937915188903018498,,,,,
Botto,uyclvb,https://botto.com/about,AI,ETHEREUM,BOTTO,botto,"Botto is a decentralized autonomous artist creating 350 art pieces/week, guided by community voting.",,,,https://twitter.com/bottoproject,829636834371960842,,https://medium.com/@iambotto,https://github.com/bottoproject,http://www.linkedin.com/company/bottoproject,
Brainstem,w49a1x,https://brainstem.health/,SENSORS,,,,Brainstem collects wearable health data to revolutionize healthcare through remote screening and monitoring.,Health & Fitness,,,https://twitter.com/Brainstemhealth,,,https://medium.com/@BrainstemDigitalHealth,,http://www.linkedin.com/company/brainstemdigitalhealth,
Braintrust,8mk3xj,https://www.usebraintrust.com/,SERVICES,ETHEREUM,BTRST,braintrust,The Braintrust is a decentralized Web3 talent network linking tech freelancers with top brands worldwide.,Labor,,,https://t.me/braintrustofficial,,,https://medium.com/tag/braintrust,,https://www.linkedin.com/company/usebraintrust/,
Brastorne,g7czmv,https://www.brastorne.com/,WIRELESS,,,,"Brastorne proves access to information, markets, and community through easy and affordable internet access in Africa.",,,,https://twitter.com/Brastorne_,,,https://www.brastorne.com/blogs,,https://www.linkedin.com/company/brastorne/mycompany/,
Brev.dev,7rbea7,https://brev.dev/,AI,,,,"Brev.dev is an AI development platform offering GPU rentals and a fully equipped environment with CUDA, Python, Jupyter Lab, and SSH support for seamless fine-tuning, training, and deployment of machine learning applications.",,EV3 Sal,,,,,,,,
Brevis,3n0u30,https://brevis.network/,NOT_DEPIN,,,,Brevis is a smart ZK coprocessor that empowers smart contracts to read the full historical on-chain data from any chain and run customizable computations in a completely trust-free way.,ZK,ZZ,,https://twitter.com/brevis_zk,,,,,,
Bridge Oracle,uo9q3n,https://bridge.link/,NOT_DEPIN,ETHEREUM,BRG,,Bridge Oracle: BNB Chain-based public oracle enabling secure smart contracts with real-world data.,Oracle,,,https://twitter.com/bridge_oracle,1167177815951671337,https://t.me/BridgeOracle,https://medium.com/@bridge_oracle,https://github.com/BridgeOracle/,http://www.linkedin.com/company/bridge-oracle,
Bridgesplit,uthwb3,https://www.bridgesplit.com/,NOT_DEPIN,,,,"Bridgesplit is a specialty asset-based lending platform enabling platforms like marketplaces and custodians to offer financing to their customers. It helps Helium miners access cash for short-term expenses, new equipment, and other working capital needs.",,EV3 Sal,,,,,,,,
BringYour,xxeep1,https://bringyour.com/,WIRELESS,,,,BringYour is an innovative overlay ISP focused on enhancing network security and privacy for users worldwide.,,,,,807713145006850048,,,,,
Brume,nr3e02,https://bento.me/brume,NOT_DEPIN,,,,The private Ethereum wallet with built-in Tor,,EV3 Sal,,,1101132502963322880,,,,,
BSN,nwj87z,https://bsnbase.io/g/main/index,NOT_DEPIN,,,,"The Blockchain-based Service Network is a cross-cloud, cross-portal, and cross-framework global infrastructure network used to deploy and operate all types of blockchain applications.",,,,https://twitter.com/bsnbase,,https://t.me/bsnsupport,,,https://www.linkedin.com/company/bsnbase/,
BTQ,xkyu1k,https://www.btq.com/,BLOCKCHAIN_INFRA,,,,BTQ is a global quantum technology company that builds post-quantum infrastructure to secure mission critical networks.,,EV3 Sal,,https://twitter.com/btq_tech,,,,,,
BubbleAI,sws22r,https://bubbleai.xyz/,AI,,,,BubbleAI is a fast off-chain data intent trading platform with AI sentiment analysis tools,,,,https://twitter.com/bubble,1039152264889245697,,https://bubble.io/blog,,https://www.linkedin.com/company/bubble-hq/,
Buk,1s4ysk,https://buk.technology/,SERVICES,,,,Buk is an NFT-based hotel inventory distribution infrastructure and secondary marketplace that helps hotels increase distribution and travelers to resell or transfer their bookings on-chain.,,EV3 Sal,,,,,,,,
BULB,ffondw,https://www.bulbapp.io/,NOT_DEPIN,SOLANA,BULB,,"BULB is a Write-to-Earn and Read-to-Earn blogging platform where ideas, passions and engagement are rewarded.",,,,,,,,,,
Bullieverse,sfnnyv,https://bullieverse.com/,BLOCKCHAIN_INFRA,,BULL,,"Bullieverse is a Play-to-Earn open metaverse island that is based on Ethereum. The game is based on fantasy and features socializing, playing games, and winning rewards.",,,,,865813086643945482,,,,,
Bump,urvli0,https://www.bumpapp.xyz/,WIRELESS,,,,Bump is a peer-to-peer mobile network connecting users who share their internet via their phone to earn crypto.,,,,https://www.twitter.com/bump_xyz/,,,,,,
Bunches,iai3ik,https://onbunches.com/,NOT_DEPIN,,,,"Bunches is building a social network for sports fans, powered by Web3. It allows users to chat about sports, analyze plays, and share their opinions.",,ZZ,,,,,,,,
Bunked,09xdv4,https://www.bunked.ai/,BLOCKCHAIN_INFRA,,,,Bunked distinguishes AI-generated content from real content using blockchain technology.,,ZZ,,https://twitter.com/bunkedai,,,,,,
Bware Labs,udxaxs,https://bwarelabs.com/,BLOCKCHAIN_INFRA,,,,Bware Labs: Web 3 solution solving latency issues with geographically distributed nodes.,RPC/Indexing,,,https://bware.page.link/twitter,,https://bware.page.link/telegram,https://bware.page.link/medium,https://bware.page.link/github,https://bware.page.link/linkedin,
Bythen,mwhwcp,https://www.bythen.ai/quest,AI,,,,"Bythen is building a decentralized platform that enables users to create personalized Al Avatars, from Al companions enhancing daily productivity to gaming bots and digital influencers, offering new monetization avenues.",,ZZ,,https://twitter.com/bythenAI,,,,,,
C4E,92o0ip,https://c4e.io/,ENERGY,COSMOS,C4E,,"C4E is a DePIN L1 Blockchain platform, designed to support a variety of innovative energy and e-mobility applications by creating a decentralized and democratized community-powered ecosystem.",,ZZ,,https://twitter.com/Chain4Energy,,https://t.me/c4e_official,https://medium.com/chain4-energy,https://github.com/chain4energy,,
Caldance,6515yb,https://caldance.gitbook.io/whitepaper/,SENSORS,,,,"Caldance is a Web 3.0 fitness ecosystem integrating Machinefi, Blockchain app, NFT, and Gamification.",Health & Fitness,,,https://twitter.com/caloriedance/status/1568101642754572288,,,,,https://sg.linkedin.com/company/caldance,
Callisto,g4szkz,https://callisto.network/,BLOCKCHAIN_INFRA,ETHEREUM,CLO,callisto-network,Callisto Network is a layer 1 Ethereum-compatible smart contract solution based on a proof-of-work blockchain.,,ZZ,,,,,,,,
Cambrian,wntdih,https://cambrianprotocol.com/,NOT_DEPIN,,,,Cambrian Protocol is a blockchain agnostic Ethereum dApp that enables resource allocation through conditional tokens.,,,,https://twitter.com/cambrian_eth,856113492348108882,,https://cambrianprotocol.notion.site/Blog-495831be4f5f4edb87a35d73d0478b49,https://github.com/cambrian-protocol/cambrian,https://linkedin.com/company/cambrian-protocol,
Camelot,n7swrq,https://cam3lot.io/,COMPUTE,,,,"Camelot is a Layer3 DePIN platform that decentralizes AI training, enabling global contributions of computational resources facilitates the training of powerful AI models, and distributes training results to mobile devices.",,ZZ,,https://twitter.com/CamelotLayer3,,,,,,
Candela,d2gqfv,https://www.candelacoin.com/,ENERGY,,,,"Candela is a cryptocurrency that decentralizes solar energy, devices, and software for peer-to-peer energy transfer.",,,,https://twitter.com/candela?lang=en,,,,,https://www.linkedin.com/company/candela-speed-boat/,
Canvas,ae9xhv,https://www.canvas.xyz/,BLOCKCHAIN_INFRA,,,,Canvas is a peer-to-peer architecture and developer platform for decentralized applications.,L1/L2,ZZ,,https://twitter.com/canvas?lang=en,,,,,https://linkedin.com/company/canvas-technology-corporation,
Carbcoin,3imwmh,https://www.carbcoin.io/,ENERGY,,,,"Carbcoin.io is a carbon offsetting exchange platform that provides secure and immutable carbon credits via blockchain technology to support individuals, companies, project developers, and brokers to buy or sell carbon credits.",,ZZ,,https://twitter.com/carbcoinio,,,,,,
Carbify,susg5s,https://www.carbify.io/,ENERGY,POLYGON,CBY,carbify,"Carbify is a blockchain-based project that combines reforestation efforts with gaming, allowing users to invest in NFTrees representing real trees planted in the Amazon, which in turn generate carbon credits and in-game rewards.",,,,,1037793393356591165,,,,,
Carbon browser,a8pfxe,https://carbon.website/,NOT_DEPIN,BINANCE,CSIX,carbon-browser,"Carbon Browser is a fast, private, and secure web browser designed for Web3 that aims to deliver a comprehensive and secure experience with features like a multi-chain crypto wallet, blockchain bridge, VPN, and AdBlock.",,ZZ,,,,,,,,
CarbonarAI,77pefj,https://github.com/slavni96/carbonarai,AI,,,,"CarbonarAI is a tool that helps in decision making processes. Through a friendly web interface, AI and ML algorithms, it provides a natural way of querying on chain data.",,,,,,,,https://github.com/slavni96/carbonarai,,
Carnomaly,69oqt5,https://carnomaly.io/,BLOCKCHAIN_INFRA,POLYGON,CARR,carnomaly,"Carnomaly is a Web3 automotive ecosystem offering comprehensive vehicle reports, decentralized automotive lending, worldwide rebates, and a comprehensive automotive records repository.",Auto,ZZ,,https://twitter.com/carnomaly,,,,,,
Carv,4y6snk,https://carv.io/,NOT_DEPIN,,,,Gaming credentials infrastructure,,EV3 Sal,,,915445727600205844,,,,,
CATAI,oekjgs,https://catai.app/,AI,ETHEREUM,CATAI,,CATAI is the first-ever project that employs cutting-edge AI technology known as Latent Consistency Models on-chain.,,ZZ,,https://twitter.com/cataiapp,,,,,,
Catapulta,1pqp11,https://catapulta.sh/,BLOCKCHAIN_INFRA,,,,"Catapulta is a plug-n-play, multi-chain smart contracts platform for Web3 teams.",,EV3 Sal,,https://twitter.com/catapulta_sh,,,,,,
Cazk,kbkdc9,,NOT_DEPIN,,,,Cazk Via enables proofs of inclusion or exclusion without revealing extra information.,ZK,,,,,,,,,
Cedalio,w0adea,https://cedalio.com/,BLOCKCHAIN_INFRA,,,,Cedalio: Auditable apps with real data ownership and GraphQL databases.,,,,https://twitter.com/CedalioTech,989948949823651862,,https://medium.com/@cedalio,https://github.com/cedalio,http://www.linkedin.com/company/cedalio,
Celer,2bxhb8,https://celer.network/,NOT_DEPIN,,CELR,,"Celer Network is an interoperability protocol enabling a one-click user experience accessing tokens, DeFi, GameFi, NFTs, governance, privacy solutions, and more across multiple chains.",,,,,496880366271856641,,,,,
Celestia,sx61vk,https://celestia.org/,NOT_DEPIN,,TIA,,"Celestia is a modular blockchain network that securely scales with the number of users, making it easy for anyone to launch their own blockchain.",,,,,638338779505229824,,,,,
Cellframe,7l1fut,https://cellframe.net/,BLOCKCHAIN_INFRA,ETHEREUM,CELL,cellframe,"Cellframe Network is a quantum-resistant blockchain network facilitating secure, scalable cross-chain transfers and fog computing services.",,EV3 Sal,,https://twitter.com/cellframenet,,,,,,
Celo,0oryv0,https://celo.org/,NOT_DEPIN,NATIVE,CELO,celo,Celo is a blockchain protocol that aims to address some of the barriers to cryptoasset adoption (user experience and volatility) by using phone numbers as public keys and issuing a native stable-value token. The network supports the development of smart contracts and decentralized applications.,,,,,600834479145353243,,,,,
Centrifuge,cosgc8,https://centrifuge.io/,NOT_DEPIN,ETHEREUM,CFG,centrifuge,"Decentralized OS for global financial supply chain, enabling data ownership.",DeFi,,,https://twitter.com/centrifuge,805795848432779315,https://t.me/centrifuge_chat,https://medium.com/centrifuge,https://github.com/centrifuge/,http://www.linkedin.com/company/centrifugehq,
Ceramic,ancy5d,https://ceramic.network/,BLOCKCHAIN_INFRA,,,,Ceramic is a decentralized data network.,Data,ZZ,,https://twitter.com/ceramicnetwork?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,682786569857662976,https://t.me/s/shreejiceramic?before=2,https://medium.com/ceramic,https://github.com/ceramicnetwork,https://www.linkedin.com/company/ceramic-network,
Cere,0xxxyy,https://cere.network/,COMPUTE,ETHEREUM,CERE,cere-network,"Cere Network is the first Decentralized Data Cloud platform, built on Polkadot, optimized for service data integration and data collaboration.",,W. L.,,https://twitter.com/cereofficial,876823550533726219,https://t.me/thisiscere,https://cere.network/blog/,https://github.com/Cerebellum-Network,https://www.linkedin.com/company/cere-network,
Cerebrum,i3q0yo,https://cerebrumdao.com/,NOT_DEPIN,,,,"Accelerating solutions & cures to neurodegeneration and advancing brain longevity. ",DeSci,EV3 Sal,,,885561571173085235,,,,,
CESS,qdkzic,https://cess.cloud/,COMPUTE,,,,CESS is a decentralized cloud storage network supporting enterprise-level applications.,Storage,,,,867067208382152744,,,,,
Ceti,ovcd7q,https://taoceti.ai/,AI,BITTENSOR,CETI,tao-ceti,"Ceti AI develops globally distributed, high-performance, scalable AI infrastructure designed to empower developers and networks worldwide.",,ZZ,,https://twitter.com/ceti_ai,,,,,,
Chainbound,knriru,https://www.chainbound.io/,NOT_DEPIN,ETHEREUM,,,"Research & development organization building optimized infrastructure and networking tools for blockchains. ",,EV3 Sal,,,1024661923737899058,,,,,
ChainGPT,yi1bv4,https://www.chaingpt.org/,AI,ETHEREUM,CGPT,chaingpt,"ChainGPT AI for Blockchain and Crypto, providing knowledge and tools with CGPT utility token.",,,,https://twitter.com/Chain_GPT,1067750543495274557,https://t.me/chaingpt,https://medium.com/@chaingpt,https://github.com/ChainGPT-org,http://www.linkedin.com/company/chaingpt,
Chainlink,y9e0mz,https://chain.link/,NOT_DEPIN,ETHEREUM,LINK,chainlink,Chainlink enables connected smart contracts through a decentralized oracle network.,Oracle,,,https://twitter.com/chainlink,592041321326182401,https://t.me/chainlinkofficial,https://medium.com/swlh/chainlink-decentralized-network-of-oracles-6844ff96f47f,,,
ChainMiner,si688h,https://chainminer.io/,BLOCKCHAIN_INFRA,ETHEREUM,CMINER,chainminer,"Chainminer is a cryptocurrency mining platform that simplifies earning rewards through crypto mining. By staking Chainminer tokens, users gain access to a share of profits from their comprehensive mining operations.",,ZZ,,https://twitter.com/ChainMinerio,,,,,,
ChainML,ae73hb,https://www.chainml.net/,AI,,,,ChainML is a decentralized compute network for AI and numerical applications.,,ZZ,,https://twitter.com/chainml_,1119245135620878388,,,,,
Chainstack,sj6nte,https://chainstack.com/,NOT_DEPIN,,,,"Chainstack is a leading blockchain infrastructure providing company. It allows uers to build, run and scale blockchain applications using Chainstack nodes.",,,,https://twitter.com/ChainstackHQ,847645538093629441,https://t.me/chainstack,https://chainstack.com/blog/,,https://www.linkedin.com/company/chainstack/,
Chaintool,nx4wrh,https://chaintool.ai/,BLOCKCHAIN_INFRA,,,,"Chaintool develops Microscope, an open-source blockchain metadata protocol to streamline metadata contribution, sharing, and consumption through a sophisticated sharing mechanism, collaborative tools, and incentivization schemes.",,EV3 Sal,,https://twitter.com/chaintooltech,,,,,,
Chappyz,dn33y7,https://chappyz.com/,NOT_DEPIN,BINANCE,CHAPZ,chappyz,"Chappyz is an AI powered plug-and-play protocol that helps build REAL community engagement & growth, whilst rewarding community members in real time.",,,,https://twitter.com/Chappyzcom,1144574400717406228,https://t.me/ChappyzOfficial,,,https://www.linkedin.com/company/chappyz/,
CharacterX,06sxnp,https://characterx.ai/,AI,,CXT,,"CharacterX is a decentralized synthetic social network that connects human beings & AI beings. It provides a social platform where users can create their own AI identities, and connect with others without the constraints of time and space.",,,,https://twitter.com/CharacterXAI,,,,,,
Charge,5tihi8,https://www.charge.xyz/,ENERGY,,,,"Charge is a DAO-Governed Decentralized Application for Electric Vehicle Charging. Charge enables individuals and organizations to register charging stations and EVs on a permissionless platform using Self-Sovereign Machine Identities (SSMIs), and equip them with a payment method.",,,,https://twitter.com/charge_xyz,,https://t.me/charge_xyz,https://www.charge.xyz/blogposts,https://github.com/chargexyz,,
CheckDot,dlqv3c,https://checkdot.io/,AI,ETHEREUM,CDT,checkdot,CheckDot: decentralized trust protocol for verifying legitimacy of blockchain projects anonymously.,,,,https://twitter.com/Checkdot_proto,860044376058101781,https://t.me/checkdot,https://checkdot.medium.com/,https://github.com/checkdot,http://www.linkedin.com/company/checkdot,
Cheelee,97up5b,https://cheelee.io/,SENSORS,BINANCE,CHEEL,cheelee,"Cheelee is a short video platform with GameFi mechanics, where users can earn by watching the feed.",,EV3 Sal,,https://twitter.com/Cheelee_Tweet,,,,,,
Cheeze,9tcuea,https://cheeze.com/,NOT_DEPIN,,,,Cheeze is a decentralized creator economy platform that enables brand activation for imagery on-chain.,,,,,,,,,,
cheqd,o6gk4u,https://cheqd.io/,BLOCKCHAIN_INFRA,COSMOS,CHEQ,cheqd-network,Cheqd offers infrastructure for trusted data markets.,Data,,,https://twitter.com/cheqd_io,879754359859216394,https://t.me/cheqd,https://blog.cheqd.io/,https://github.com/cheqd,http://www.linkedin.com/company/cheqd-identity,
Cherry,j6bezo,https://www.cherry.network/,NOT_DEPIN,ETHEREUM,CHER,cherry-network,Cherry: DAO building optimized blockchain for decentralized apps.,L1/L2,,,https://twitter.com/Cherry_Network,787076370952880138,https://t.me/cherrynetwork,https://cherryproject.medium.com/,https://github.com/CherryNetwork,http://www.linkedin.com/company/cherrynetwork,
Chia,ncy75y,https://www.chia.net/,NOT_DEPIN,,XCH,chia,Chia Network (XCH) is a layer 1 blockchain that uses its own custom-designed programming language called Chialisp and a novel consensus mechanism called proof-of-space-and-time (PoST).,,,,https://twitter.com/chia_project,1034523881404370984,,https://www.chia.net/blog/,https://github.com/Chia-Network,https://www.linkedin.com/company/chia-network,
Chingari,teymg6,https://chingari.io/,NOT_DEPIN,,,,"Chingari is a fast-growing Web3 Social Media company in India, combining the features of TikTok and OnlyFans.",,,,https://twitter.com/Chingari_IN,,,https://chingariapp.medium.com/,https://github.com/CodeTheChangeUBC/Chingari/projects/2,https://www.linkedin.com/company/chingariapp/,
Chirp,zf4ctb,https://chirpwireless.io/commercial,WIRELESS,,,,"Chirp Wireless is a decentralized wireless network for IoT, mobile, and broadband.",,,,https://twitter.com/ChirpDeWi,,,https://chirpiot.medium.com/,https://github.com/topics/chirp?o=desc&s=forks,http://www.linkedin.com/company/chirpiot,
Chirpley,okfrzh,https://chirpley.ai/,AI,BINANCE,CHRP,,"Chirpley is the world, first automated, peer-to-peer, all-in-one influencer marketplace specifically focussed on nano and micro influencers.",,,,https://twitter.com/chirpley,857676296359247884,http://t.me/chirpley,https://chirpley.medium.com/,,https://www.linkedin.com/company/chirpleylabs,
Chro,awdzxn,https://chro-plus.web.app/,SENSORS,,,,"CHRO is building a decentralized health database and offering the XHRO wearable device, packed with sensors to monitor key health metrics, incentivizing users to share data for predictive, preventive, and personalized medicine breakthroughs.",Health & Fitness,ZZ,,https://twitter.com/chroplus,,,,,,
Chronicled,1y63oi,https://www.chronicled.com/,NOT_DEPIN,,,,"Chronicled is launching Mediledger, a solution for streamlining financial transactions in life sciences and better handling dispute resolution.",,ZZ,,,,,,,,
Cindicator,cor8db,https://cindicator.com/,AI,ETHEREUM,CND,cindicator,"Cindicator uses Hybrid Intelligence for stocks and crypto, with Bloomberg and Stoic as platforms.",,,,https://twitter.com/Crowd_indicator,,https://t.me/cindicator_news,https://medium.com/@Cindicator,,http://www.linkedin.com/company/vote-,
Cirrus,0tn3dg,https://usecirrus.cloud/,COMPUTE,,,,Cirrus IPFS is a company providing an IPFS-based storage platform with advanced security and 3x the capacity of g-drive.,Storage,,,https://twitter.com/CirrusIPFS,,,,,https://in.linkedin.com/company/cirrusipfs,
CIRUS,he3mau,https://www.cirusfoundation.com/,NOT_DEPIN,ETHEREUM,CIRUS,cirus,"CIRUS: Control data, monetize through blockchain.",,,,http://www.twitter.com/Cirusfoundation,,https://en.telghub.com/content?id=16359,https://medium.com/the-cirus-foundation,,http://www.linkedin.com/company/cirus-foundation,
CLAPART,g7kfey,https://www.clapart.com/?locale=en-US,BLOCKCHAIN_INFRA,,,,CLAPART empowers creators and fans for project funding.,,,,https://twitter.com/clapartofficial,947501488429756456,https://t.me/CLAPART_Announcements,,,http://www.linkedin.com/company/clapartgroup,
Clearpool,680zow,https://clearpool.finance/,BLOCKCHAIN_INFRA,,CPOOL,,Clearpool is a Decentralized Finance ecosystem incorporating the first-ever permissionless marketplace for unsecured institutional liquidity.,,,,,948061538139402240,,,,,
Click Engine,7p98xk,https://engine.click/,BLOCKCHAIN_INFRA,ETHEREUM,CLICK,,"Click Engine is a decentralized gaming platform, games marketplace, and game development infrastructure powered by AI, DePIN, and GPU Cloud Gaming.",Gaming,ZZ,,https://twitter.com/Click_Engine,,,,,,
ClinTex,sc1i0q,https://clintex.io/,NOT_DEPIN,ETHEREUM,CTI,clintex-cti,"ClinTex is a health technology company that utilizes blockchain and machine learning to enhance the efficiency and cost-effectiveness of decentralized clinical trials. ",,ZZ,,https://twitter.com/ClinTexCTi,,,,,,
CLIQ,y1s1l4,https://www.cliqnetwork.xyz/,NOT_DEPIN,,,,Cliq is an anonymous forum for verified Web3 professionals to share insight and seek advice in a trustless manner,,,,https://twitter.com/CliqNetwork,,,,,,
Clique,redik6,https://www.clique.tech/,BLOCKCHAIN_INFRA,,,,"Clique is building a compute coordination layer, streamlining the process by which both smart contracts and general applications access and utilize computing resources.",,ZZ,,https://twitter.com/Clique2046,,,,,,
CLORE,jbmvkm,https://clore.ai/,COMPUTE,NATIVE,CLORE,clore-ai,"CLORE.AI is distributed AI training, cloud rendering platform connecting server owners with renters.",,,,https://twitter.com/clore_ai,,https://t.me/clorechat,https://blog.clore.ai/,,,
Cloud AI,au7lty,https://usecloudai.com/,AI,ETHEREUM,CLD,cloud-ai,Cloud AI is an On-demand AI in the Cloud that allows users to run AI Models on a Pay-Per-Use Decentralized Infrastructure.,,ZZ,,https://twitter.com/TheCloudAI,,,,,,
Cloudmos,v7ilpo,https://cloudmos.io/,COMPUTE,,,,Cloudmos is a decentralized cloud compute marketplace that allows users to deploy docker containers on the Akash Network.,,,,https://twitter.com/cloudmosio,,,https://medium.com/@cloudmos,,,
Cluster,lkgf4g,https://twitter.com/ClusterProtocol,COMPUTE,,,,Cluster Protocol is a Proof of compute protocol and Open Source Community for decentralized AI models.,,EV3 Sal,,,,,,,,
Clusttr,cu63xf,https://www.clusttr.io/,BLOCKCHAIN_INFRA,,,,Clusttr is a marketplace for real estate investment through fractional ownership(real estate tokens).,,,,https://twitter.com/clusttr_io,,,,,,
Coco Swap,0g5igr,https://coco-swap.finance/,NOT_DEPIN,,,,Coco Swap: Faster and easier token swaps with COCO token and BSC blockchain.,Gaming,,,,,,,,,
CodeX,xkpeqx,https://codexchain.xyz/home,BLOCKCHAIN_INFRA,NATIVE,CDX,codexchain,CodeX is an all-in-one no-code AI-powered ecosystem for WEB3 mass adoption.,,ZZ,,https://twitter.com/codexchain,,,,,,
Cohere,b71ut1,https://cohere.com/,AI,,,,"Cohere is a leading Enterprise AI Platform optimized for enterprise generative AI, search and discovery, and advanced retrieval.",,ZZ,,https://twitter.com/cohere,,,,,,
ColdStack,dka3hq,https://coldstack.io/,COMPUTE,ETHEREUM,CLS,coldstack,"ColdStack: A unified API and billing solution for Filecoin, SIA, Arweave, and Storj.",Storage,,,https://twitter.com/coldstack_io,,https://t.me/coldstackio,https://medium.com/coldstack,https://github.com/ColdStack-Network/,http://www.linkedin.com/company/coldstack,
Collar Protocol,qg080i,https://www.collarprotocol.xyz/,NOT_DEPIN,,,,Collar Protocol is aliquidation-free borrowing solution.,,,,,,,,,,
Collar,n8tbun,https://www.collarnetworks.com/,NOT_DEPIN,,,,Collar Networks is a liquidation-free borrowing solution to solve DeFi borrowing trilemma with high LTV and stability.,,,,https://twitter.com/CollarProtocol,,,,,,
Colosseum,3uhgt0,https://www.colosseumpro.com/,BLOCKCHAIN_INFRA,,,,Colosseum is a fully on-chain fighting game company that facilitates bot battles and viewer betting.,,,,https://twitter.com/Colosseum,,,,,,
commune,dam39v,https://www.communeai.org/,COMPUTE,ETHEREUM,COMAI,commune-ai,"Commune is a protocol designed to unify developer tools into a single, open network, offering a flexible and inclusive framework that supports the integration and sharing of resources to promote innovation and efficiency among developers.",,,,https://twitter.com/communeaidotorg,941362322000203776,,,https://github.com/commune-ai,,
Compass Labs,4xqqn5,https://www.compasslabs.ai/,NOT_DEPIN,,,,"Compass Labs is building the go-to platform for DeFi — an integrated suite of products to deliver the tools to make DeFi accessible, secure, and reliable for investors and developers.",,EV3 Sal,,https://twitter.com/labs_compass,,,,,,
ComplexLabs,axpwbs,https://www.complexlabs.co/,NOT_DEPIN,,,,Complex Labs offers a modular software stack that enables integrations to your existing data into Web3.,NFTs,,,https://twitter.com/complex_labs,,,https://www.linkedin.com/company/complexlabsweb3,,,
Concordia,qx629j,https://www.concordia.systems/,NOT_DEPIN,,,,Concordia is a multi-chain collateral management protocol that unifies and enables digital asset collateralization.,,,,https://twitter.com/deBridgeFinance,1095746448047493150,,,https://github.com/debridge-finance/,https://linkedin.com/company/debridge-finance,
Concordium,hw2zn4,https://www.concordium.com/,NOT_DEPIN,NATIVE,CCD,concordium,"Concordium is a layer-1 blockchain with a built-in ID framework, the science-based proof-of-stake chain uses zero-knowledge proofs to usher in a brand new era of trust for Web3.",,ZZ,,,,,,,,
CoNET,dc9w0u,https://conet.network/,NOT_DEPIN,NATIVE,CONET,,"CoNET Network is offering a Layer Minus protocol for rapid, wallet-to-wallet transactions. By integrating blockchain's decentralized resilience with existing internet infrastructure, CoNET ensures privacy, security, and high-speed connectivity.",,ZZ,,,,,,,,
Conflux,nqos2n,https://confluxnetwork.org/,NOT_DEPIN,NATIVE,CFX,conflux,"Conflux is a permissionless Layer 1 blockchain connecting decentralized economies across borders and protocols. Recently migrated to hybrid PoW/PoS consensus, Conflux provides a fast, secure, and scalable blockchain environment with zero congestion, low fees, and improved network security.",,,,,707952293412339843,,,,,
Connect3,hxfsp3,https://connect3.world/en/about,BLOCKCHAIN_INFRA,,,,Connect3 is a decentralized platform connecting users to relevant social data.,,,,https://twitter.com/connect3world,987278587608588319,,https://medium.com/@Connect3,https://github.com/topics/connect3,http://www.linkedin.com/company/connect3world,
Constellation,ol6f66,https://constellationnetwork.io/,COMPUTE,NATIVE,DAG,constellation-labs,Constellation is a decentralized L0 protocol enabling Web3 solutions.,,,,https://twitter.com/Conste11ation,991622562889085010,https://t.me/constellationcommunity,https://medium.com/constellationlabs,https://github.com/Constellation-Labs/tessellation,http://www.linkedin.com/company/constellation-labs,
ContextDao,ro7789,https://www.ctx.xyz/,COMPUTE,,,,ContextDao is a decentralized data storage protocol similar to the blockchain that enables on-chain data storage.,Storage,,,https://twitter.com/i/flow/login?redirect_after_login=%2FContextDao,737109283610689647,,https://twitter.com/ContextDao,,https://www.linkedin.com/company/context-protocol,
Convo Space,6w9zdx,https://theconvo.space/,NOT_DEPIN,,,,Decentralized conversation layer powering Web3.,,,,https://twitter.com/0xConvo,857633502011195462,,,https://github.com/anudit/convo,http://www.linkedin.com/company/theconvospace,
Coral,pwn1js,https://www.coralapp.io/,SERVICES,,CRL,,"CoralApp is a multichain web3 fitness app designed to support a healthy lifestyle through health trackers, a marketplace, and metaverse play where users can earn incentives, challenge each other, and enjoy a content creator economy.",,,,https://twitter.com/MyCoralApp,,,,,,
Corcel,1azjuz,https://app.corcel.io/,AI,,,,AI chat powered by Bittensor,,EV3 Sal,,,,,,,,
CorgiAI,fn4qwe,https://corgiai.xyz/,AI,,CORGIAI,corgiai,CorgiAI is a community-driven AI project centered around the creation of a tight-knit community with one objective in mind: to unleash the power of togetherness and build tools to enable the ultimate community.,,EV3 Sal,,,,,,,,
Cortex Labs,pd82aa,https://www.cortexlabs.ai/,AI,NATIVE,CTXC,cortex,Cortex Labs: Decentralized blockchain for AI models in smart contracts for enhanced DApps.,,,,https://twitter.com/CTXCBlockchain,789020734973935656,https://t.me/CortexOfficialEN,https://medium.com/cortexlabs,https://github.com/CortexFoundation/,https://www.linkedin.com/company/ctxcblockchain/,
CortexLoop,yyljoq,https://cortexloop.ai/,COMPUTE,ETHEREUM,CRTX,cortexloop,"CortexLoop is a comprehensive ecosystem that provides server hosting, Web3 infrastructure, and GPU computing for project hosting, rendering, and ML model training.",,ZZ,,https://twitter.com/CortexLoop,,,,,,
CosmosAI,prko1c,https://ai-cosmo.com/,COMPUTE,,,,CosmosAI is a decentralized and scalable computing network that provides resources for AI development.,,ZZ,,https://twitter.com/,,,,,https://www.linkedin.com/in/cosmos-ai-78057620b/,
Cosmostation,aaj12y,https://www.cosmostation.io/,NOT_DEPIN,,,,Cosmostation is an industry-leading validator node operator for distributed ledger technology(DLT). Providing access to decentralized finance leveraging state-of-the-art architecture and user-focused application development.,,,,,,,,,,
Covalent,cfxf9v,https://www.covalenthq.com/,BLOCKCHAIN_INFRA,ETHEREUM,CQT,covalent,Covalent is a decentralized data infrastructure that enables users to seamlessly access blockchain data that is otherwise inaccessible.,RPC/Indexing,,,https://twitter.com/Covalent_HQ,715804406842392586,https://t.me/CovalentHQ,https://www.covalenthq.com/blog/,https://github.com/covalenthq/,https://www.linkedin.com/company/covalenthq/,
Covenant,7ym51p,https://covenant.finance/,NOT_DEPIN,,,,Covenant is a capital-efficient borrowing and lending protocol that can accept any crypto asset as collateral.,,EV3 Sal,,https://twitter.com/covenantFi,,,,,,
Coverage Map,j945ny,https://coveragemap.com/,WIRELESS,,,,"CoverageMap.com is a crowd-sourced map that compares coverage, data speeds, and performance on AT&T, Dish, T-Mobile, and Verizon.",,EV3 Sal,,,1062225845634220122,,,,,
CPChain,tlsqnk,https://cpchain.io/#/,NOT_DEPIN,ETHEREUM,CPC,cpchain,"CPChain: IoT infrastructure with storage, computation, and blockchain tech, providing a combined data platform.",IoT,,,https://twitter.com/cpchain_io,413750984976629771,https://t.me/cpchain_official,https://medium.com/cpchain-tech,https://github.com/CPChain,http://www.linkedin.com/company/cpchainiot,
cPen,p64cip,https://www.cpen.io/,BLOCKCHAIN_INFRA,BINANCE,PEN,,cPen is a digital currency that users can mine on their phones.,,ZZ,,https://twitter.com/cPenCoreTeam,,,,,,
CPIN,95bk2i,https://www.cpin.tech/,ENERGY,,CPIN,,Clean Physical Infrastructure Network is a Web3-powered infrastructure for globally distributed renewable energy resources.,,ZZ,,https://twitter.com/cpin4depin,,,,,,
Crankk,9mqohg,https://crankk.io/,WIRELESS,,,,Crankk is a Proof-of-Network-Participation distributed network built on Kadena's Proof of Work Network.,,ZZ,,https://twitter.com/crankk_io,,,,,,
Create,otw9vc,https://www.createprotocol.org/,AI,,,,Creator-owned dApp protocol revolutionizing IP creation in the Metaverse space.,,,,https://twitter.com/CreateProtocol?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,https://create-protocol.medium.com/,,https://www.linkedin.com/company/create-protocol/,
Creator.Bid,f61caw,https://creator.bid/,AI,,,,"Creator.bid is an innovative platform that allows creators to develop, monetize, and co-own AI Creator Agents.",Agents,ZZ,,https://twitter.com/CreatorBid,,,,,,
Creditcoin,whwhkd,https://creditcoin.org/,NOT_DEPIN,ETHEREUM,CTC,creditcoin,"The Creditcoin Network is a real-world asset (RWA) public infrastructure blockchain built to connect borrowers, lenders, and investors. Fintech and microfinance providers get greater access to capital, while borrowers can secure their credit history.",RWA,ZZ,,,,,,,,
Creo Engine,ize2ge,https://www.creoengine.com/,BLOCKCHAIN_INFRA,BINANCE,CREO,creo-engine,Creo Engine is a gaming blockchain platform dedicated to game developers worldwide to launch their games.,,ZZ,,,,,,,,
Crewdle,zy7wfi,https://crewdle.com/peers,WIRELESS,,,,"Crewdle: Secure, sustainable video conferencing on peer-to-peer network.",,,,https://twitter.com/Crewdle_app,1201911048328978442,,,,https://linkedin.com/company/crewdle,
CroPo,khpbec,https://www.cropo.network/,AI,,,,"CroPo collects global data, offers value to participants.",,,,https://twitter.com/cropo_data,,,,,,
Croquet,pl7b4k,https://croquet.io/,BLOCKCHAIN_INFRA,,,,Croquet is a serverless multiplayer game development platform that simplifies building games for developers.,Gaming,,,https://twitter.com/CroquetIO,694586717247635488,,,,https://www.linkedin.com/company/croquet-corporation,
CROSSTECH,yblr8e,https://cross.technology/,COMPUTE,,,,CROSSTECH develops an autonomous decentralized storage-integrated public blockchain that enables true digital asset issuance.,,,,,973133963004633138,,,,,
Cruiz,xrosty,https://cruiz.ai/,SERVICES,ETHEREUM,CRUIZ,,Cruiz is an AI-driven rideshare platform that utilizes DePIN technology to enhance the ride-sharing experience.,Ridesharing,ZZ,,https://twitter.com/cruiz_ai,,,,,,
CrunchDAO,85u80y,https://www.crunchdao.com/,SERVICES,,CRUNCH,,CrunchDAO is a research team of data scientists leveraging the power of collective intelligence and Web3 to produce next-generation predictive financial insights.,,EV3 Sal,,https://twitter.com/CrunchDAO,,,,,,
Crust,x2nise,https://crust.network/,COMPUTE,ETHEREUM,CRU,crust-network,Crust is a decentralized cloud storage provider supporting multiple storage protocols.,Storage,,,https://twitter.com/crust_ow?lang=en,747361122058764349,,https://crustnetwork.medium.com/,https://github.com/crustio,https://www.linkedin.com/company/crust,
CryoDAO,amkyla,https://www.cryodao.org/,NOT_DEPIN,,CYRO,,CryoDAO is a decentralized collective funding high-impact research in the field of cryopreservation.,,ZZ,,,,,,,,
Cryptnet,y4txq5,https://cryptnet.shop/,WIRELESS,ETHEREUM,CRYPTNET,,"Cryptnet is a decentralized network that allows users to manage, share, and monetize their mobile data, effectively turning them into independent ISPs focusing on privacy and usage-based compensation.",,ZZ,,https://twitter.com/cryptneteth,,,,,,
CryptoAI,sx32rg,https://crypto-ai.io/,AI,ETHEREUM,CAI,cryptoai,"CryptoAI is an AI accessibility token with buy bots, transaction tracking, and lottery automation.",,,,https://twitter.com/cryptoai_erc,1191606858474074254,https://t.me/cryptoai_erc,https://medium.com/@Crypto_AI/growth-the-next-phase-of-cryptoai-2be02b964e2,,,
CryptoGrow,j0po1y,https://cryptogrow.world/,NOT_DEPIN,,,,CryptoGrow disrupts markets with decentralized hardware for growing cannabis at home and earning crypto.,Hardware,,,,,,,,,
Cryptomate,h2kze5,https://cryptomate.me/,NOT_DEPIN,,,,Cryptomate is a decentralized ecosystem of interactive crypto APIs.,,,,https://twitter.com/CryptoMateLatam,,,https://medium.com/@CryptoMateLATAM,,https://www.linkedin.com/company/crypto-mate/,
Cryptosat,9agce6,https://www.cryptosat.io/,WIRELESS,,,,"Cryptosat is a satellite company that offers cost-efficient, space-based cryptographic trust infrastructure for Web3.",Satellites,ZZ,,https://twitter.com/cryptosat?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,https://medium.com/cryptosatellite,,https://github.com/topics/wave?l=html,https://www.linkedin.com/company/cryptosat,
Cube3,e3bpn3,https://www.cube3.ai/,AI,,,,"CUBE3.AI is a web3 security platform that provides real-time transaction protection for smart contracts and blockchains, safeguarding against cyber exploits, fraud, and compliance risks.",,ZZ,,,,,,,,
CUDIS,34ddzp,,SENSORS,,,,CUDIS develops a Wellness AI-based wearable DePIN that allows people to track and monetize their health data.,Health & Fitness,EV3 Sal,,https://twitter.com/CudisWellness,,,,,,
Cudos,jitkjs,https://www.cudos.org/,COMPUTE,ETHEREUM,CUDOS,cudos,Cudos is a decentralized cloud computing network.,,ZZ,,https://twitter.com/CUDOS_?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,593796681103966208,,https://medium.com/cudos-,,https://uk.linkedin.com/company/cudos1,
Cyb,dt9e3m,https://cyb.ai/,AI,,,,"Cyb.ai is developing a decentralized AI protocol for unified, provable, collective learning.",,,,,,,,,,
CyberConnect,ybxj8q,https://cyberconnect.me/,NOT_DEPIN,ETHEREUM,CYBER,cyberconnect,"CyberConnect is a Web3 social network that enables developers to create social applications empowering users to own their digital identity, content, connections, and interactions.",,EV3 Sal,,,901233976138682388,,,,,
Cyberfly,zw4toq,https://cyberfly.io/,SENSORS,,CFLY,,Cyberfly is an open-source decentralized IoT platform built on the Kadena blockchain. It aims to provide a secure and user-friendly platform for managing and monitoring IoT devices.,,ZZ,,https://twitter.com/cyberfly_io,,,,,,
Cyborg,fffgsy,https://cyborgnetwork.io/,COMPUTE,,,,Cyborg Network is a marketplace for decentralized computing power that benefits both Edge providers and users by facilitating the sharing of resources and making computing more accessible and cost-effective.,,EV3 Sal,,,,,,,,
D-Web,kd70oi,https://getdweb.net/,BLOCKCHAIN_INFRA,,,,"DWeb connects the people, projects and protocols essential to building a decentralized web.",Mining,,,,,,,,,
d.id,4giuvo,https://d.id/,NOT_DEPIN,,,,d.id is a global leader in decentralized identity (DID) systems. They offer a suite of DID-based solutions designed to enhance community growth and digital identity building.,Identity,,,https://twitter.com/intent/follow?screen_name=DIDbased,831423836439838750,,https://blog.d.id/,,https://www.linkedin.com/company/didbased/,
D3,6y7ind,https://d3.inc/,COMPUTE,,,,D3 is a next-generation domains company building interoperable web2<>web3 domain names.,,,,https://twitter.com/d3corp,,,http://www.linkedin.com/company/d3inc,,,
DAFI,nm4snj,https://dafi.io/,NOT_DEPIN,ETHEREUM,DAFI,dafi-protocol,DAFI is a Hybrid Exchange that combines CEX user experience with DEX security and self-custody.,DeFi,ZZ,,https://twitter.com/dafiprotocol,803663009250672640,https://t.me/dafiprotocol,https://dafiprotocol.medium.com/,,http://www.linkedin.com/company/dafiprotocol,
DAIKSP,xsdljc,https://daikspcoin.com/,AI,,,,DAIKSP is a decentralized AI platform that combines blockchain technology to revolutionize knowledge sharing.,,,,,,,,,,
DAIN,x4aekw,https://dain.org/,AI,,,,"DAIN is constructing a decentralized Al network infrastructure, consisting of nodes and services that collaborate to deliver the best possible information.",,,,https://twitter.com/buildontal,,,,,,
Daisy,4jwyqm,https://daisycrowd.com/,AI,,,,"D.AI.SY is a blockchain-based equity crowdfunding platform that funds AI trading projects by Endotech, offering participants equity and trading rewards.",,ZZ,,,,,,,,
DAOCre-8,qy5sl8,https://demo.daocre8.com/,NOT_DEPIN,,,,"DAOCre-8 combines traditional crowdfunding with decentralized governance, empowering creators & backers to influence project decisions through DAOs, Milestone-based funding, and AI-powered analytics.",,,,https://twitter.com/DAOCre8,,,,https://github.com/TheoInTech/daocre8,https://www.linkedin.com/company/daocre8/,
Dark Protocol,tjc0sf,https://www.darkprotocol.org/,NOT_DEPIN,COSMOS,DARK,,"Dark Protocol is a Shielded Liquidity Layer for Zero-Knowledge Protocols, governed by $DARK",ZK,,,https://twitter.com/privateLP,958993201648238593,,,,,
DarkFi,rowqtv,https://dark.fi/,COMPUTE,,,,"DarkFi: secure, anonymous L1 platform for hidden validators & anti-fragile environment for app dev.",L1/L2,,,https://twitter.com/DarkFiSquad,,https://t.me/darkfichat,,https://github.com/darkrenaissance/darkfi,https://linkedin.com/company/dark-oy,
Darwinia,gpxg0c,https://darwinia.network/,NOT_DEPIN,ETHEREUM,KTON,darwinia-commitment-token,Darwinia is a open cross-chain bridge protocol based on Substrate.,Bridges,,,https://twitter.com/DarwiniaNetwork,456092011347443723,https://t.me/DarwiniaNetwork,https://medium.com/darwinianetwork,https://github.com/darwinia-network,http://www.linkedin.com/company/darwinia-network,
Data Lake,tq5svh,https://data-lake.co/,NOT_DEPIN,ETHEREUM,LAKE,data-lake,Data Lake is a DeSci project creating a global Medical Data Donation system based on blockchain technology to support medical research and AI.,DeSci,EV3 Sal,,,,,,,,
Data Union,y01ooy,https://dataunions.org/,BLOCKCHAIN_INFRA,,,,"Data Union incentivizes crowdsourcing for data, enabling x-to-earn models for data unions.",Data,,,https://twitter.com/dataunions,853941437602070549,,https://blog.dataunion.app/,https://github.com/topics/data-unions,https://sg.linkedin.com/company/dataunion-app,
Databroker,08wij5,https://www.databroker.global/,BLOCKCHAIN_INFRA,ETHEREUM,DTX,databroker-dao,Databroker is a secure marketplace for peer-to-peer data exchange.,Data,,,https://twitter.com/Databroker,,,,,https://www.linkedin.com/company/databroker/,
Datagen,6rasyf,https://datagen.tech/,NOT_DEPIN,,,,Datagen provides an all-purpose generator of synthetic images of human faces and bodies.,ML,,,https://twitter.com/datagentech,,,https://datagen.tech/blog/,https://github.com/DatagenTech,https://www.linkedin.com/company/28641774/,
DataHive,ln4d6h,https://www.datahive.network/,NOT_DEPIN,,,,DataHive is an AI data platform providing the infrastructure for a fair and efficient personal information economy and consent data for research.,ZK,ZZ,,,,,,,,
Datalatte,13wbim,https://www.datalatte.com/,NOT_DEPIN,,,,"Datalatte is a dApp that empowers people to monetize their digital footprint in an anonymous, secure, and fair way.",,ZZ,,,,,,,,
DataOS,5myyzh,https://www.dataos.so/,AI,,,,DataOS is an Autonomous AI agents network composing multimodal content for endless innovation.,Agents,ZZ,,https://twitter.com/thedataos,,,,,,
DATS,qc35fu,https://datsproject.io/,COMPUTE,,,,DATS Project: automated vulnerability scanning and cybersecurity solutions with D-HPC for Blockchain and WEB3 security.,,,,https://twitter.com/home,928611824918736996,,,,https://www.linkedin.com/showcase/dats-toll-its-smartcities/,
Datum,zyw7wx,https://datum.org/,BLOCKCHAIN_INFRA,,,,"Datum: Secure, private, and anonymous data storage and trading on blockchain.",Data,,,https://twitter.com/datumnetwork,,,,,https://www.linkedin.com/company/datumfoundation/about/,
Daylight,3lfveq,https://godaylight.com/,ENERGY,,,,Daylight is a community-powered energy grid.,,EV3 Sal,,https://twitter.com/go_daylight,,,,,https://www.linkedin.com/company/go-daylight/,
DBunker,kqm1tp,https://www.dbunker.xyz/,BLOCKCHAIN_INFRA,,,,"DBunker is an RWAs and LSTs solution provider for DePIN, allowing more people to enter the world of DePIN and empowering the DePIN ecosystem.",,EV3 Sal,,https://twitter.com/dbunker_network,,,,,,
DCarbon,1bysjw,https://dcarbon.org/,ENERGY,,,,"DCarbon is a trustless and autonomous Carbon system that uses carbon agents, an autonomous IoT solution for real-time monitoring, reporting, and verification of carbon emission, and Blockchain for secure tamper-proof transactions.",,EV3 Sal,,https://twitter.com/dcarbon_project,,,,,,
dClimate,a5w7th,https://www.dclimate.net/,ENERGY,,,,"dClimate is the first decentralized network for climate data, forecasts, and models.","Environmental, Data",ZZ,,https://twitter.com/dClimateDAO,834637820584263691,http://t.me/dclimatechat-,,https://github.com/dClimate,https://linkedin.com/company/dclimatenet,
DCX,qzb5mw,https://www.dcx.group/,BLOCKCHAIN_INFRA,,,,Digital Commodity Exchange (DCX) is the home of a range of agricultural commodity trading platforms.,,,,,,,,,,
deBridge,rhpzul,https://debridge.finance/,NOT_DEPIN,,,,deBridge: blockchain interoperability and liquidity transfer protocol.,Bridges,,,https://twitter.com/deBridgeFinance,875308315700264970,https://t.me/deBridge_finance,https://debridge.finance/blog/,https://github.com/debridge-finance/,https://www.linkedin.com/company/debridge-finance/,
Decentr,og8gcn,https://decentr.net/,COMPUTE,COSMOS,DEC,decentr,Decentr is a WEB3 browser that is based on Cosmos but is truly chain agnostic. While browsing you can choose to share your data - generating PDV(Personal Data Value) and be able to earn $DEC coin.,,EV3 Sal,,,894947432125837372,,,,,
Decentral Games,m7q3yn,https://decentral.games,NOT_DEPIN,ETHEREUM,DG,decentral-games,"Decentral Games is the first fully licensed Metaverse casino. It allows users to play with crypto, invite their friends, compete for big prizes in weekly casino competitions, and attend live events from the comfort of their own homes.",,ZZ,,,,,,,,
DecentralizedAI,1kehj3,https://www.decentralizedai.xyz/,AI,,,,"DecentralizedAI is an AI Layer-2 for Google Chrome, that allows users to own and earn from their data while browsing.",,ZZ,,https://twitter.com/DecentralAIxyz,,,,,,
DecentraMind,xp303d,https://decentramind.bot/,AI,ETHEREUM,DMIND,decentramind,"DecentraMind is a comprehensive AI aggregator, utilizing BitAPAI, the AI engine of Bittensor into a user-friendly Telegram bot.",,,,,,,,,,
DeCharge,wt9yfq,https://www.rechrg.pro/,ENERGY,,,,"DeCharge offers globally compatible, lightweight hardware with DePIN technology for revolutionizing EV charging.",,ZZ,,https://twitter.com/DeCharge__,,,,,,
Dechat,nh9uzc,https://www.dechat.io/,NOT_DEPIN,ETHEREUM,CHAT,,"Dechat is an open, secure web3 communications protocol that powers decentralized user interactions. It allows developers to let their users chat, discover and transact digital assets seamlessly within and across their applications.",,,,https://twitter.com/dechat_io,1172625278271504494,,https://medium.com/@all420/dechat-e7af2f0182e7,,https://www.linkedin.com/company/dechat/mycompany/,
Deep Green,oz5vb7,https://www.deepgreen.energy/,ENERGY,,,,"Deep Green develops carbon-neutral compute systems & data centers, specializing in metro-edge computing.",,,,https://twitter.com/DeepGreenEnergy,,,,https://github.com/topics/deep-green,https://www.linkedin.com/company/deep-green-energy/about/,
DeepBrain,c1de2i,https://deepbrainchain.org/,COMPUTE,NATIVE,DBC,deepbrain-chain,"DeepBrain Chain is a distributed network for AI & Metaverse use cases, offering high-performance computing capabilities.",,ZZ,,https://twitter.com/DeepBrainChain,,https://t.me/deepbrainchainglobal,https://medium.com/@DeepBrainChainGlobal,https://www.github.com/DeepBrainChain,https://linkedin.com/company/deepbrain-chain,
Deeper,3s1vpm,https://www.deeper.network/,WIRELESS,ETHEREUM,DPR,deeper-network,Deeper is a decentralized VPN and privacy network.,VPN,,,https://twitter.com/deeper_official?lang=en,858020148158005259,https://tlgrm.eu/channels/@pornodrive/46977,https://deeper-network.medium.com/,,https://il.linkedin.com/company/deeper-cloud,
DeepFakeAI,1cdn19,https://fakeai.io/,AI,ETHEREUM,FAKEAI,deepfakeai,DeepFakeAI is a deepfake creation program using a Telegram Bot and Web App.,,,,https://twitter.com/DeepFakeAI_,1120405708186337411,https://t.me/FakeAI,https://medium.com/@FakeAI,,,
DeepSquare,5ymc3k,https://deepsquare.io/,COMPUTE,,,,DeepSquare is a company building an energy-efficient cloud computing ecosystem by reusing ICT generated heat.,,ZZ,,https://twitter.com/DeepSQUAREio,1187531501609431161,,https://medium.com/@DeepSquare.io,https://github.com/deepsquare-io,https://linkedin.com/company/deepsquare-association,
Defilliate,bh55a0,https://defilliate.xyz/,NOT_DEPIN,,,,Defilliate is an affiliate marketing platform built specifically for web3 that allows creators to monetize their content.,,,,https://twitter.com/defilliateXYZ,1158504286808981546,,,,,
Defit,jmavqd,https://app.defit.com/,SENSORS,POLYGON,DEFIT,defit,Defit is a fitness web3 brand that rewards users with a Move to Earn movement.,Health & Fitness,,,https://twitter.com/DEFITofficial,932304379694944277,https://t.me/DEFITofficial,https://defitofficial.medium.com/,,https://sg.linkedin.com/company/defitfitnessclub,
DeFli,14khqv,https://defli.network/,SENSORS,,,,DeFli builds global infrastructure for the unmanned aviation industry.,,,,https://twitter.com/Defli_Networks,1085688022001004676,,https://medium.com/@team_483,https://github.com/DeFliTeam,,
Defog,u43dxj,https://defog.ai/,NOT_DEPIN,,,,Defog.ai helps enterprises deploy fine-tuned LLMs for enterprise analytics.,ML,,,https://twitter.com/defogdata?lang=en,,,http://www.linkedin.com/company/defog-ai,https://defog.ai/blog/,https://github.com/defog-ai,
DEKUBE,q2h5ua,https://dekube.net/,COMPUTE,,,,DEKUBE is a decentralized AI computing network that enables the transformation of consumer-grade GPUs into enterprise-level AI computing power for distributed training of large-scale LLMs.,,EV3 Sal,,https://twitter.com/dekube_official,,,,,,
delta.theta,88l6l8,https://deltatheta.tech/,NOT_DEPIN,ETHEREUM,DLTA,delta-theta,delta.theta is a Peer-to-peer asset options trading platform.,,,,,,,,,,
Delysium,qhxql8,https://link3.to/delysium,AI,ETHEREUM,AGI,delysium,"Delysium develops an AI-Powered Open World Framework that empowers all users to create their own AI-Twins easily. ",,Sami,,,917041957522538557,,,,,
DeMe,oqb51e,https://deme.social/#,NOT_DEPIN,,,,DeMe: a user privacy-focused social media with rewards.,,,,https://twitter.com/DecentralisedMe,,,,,https://www.linkedin.com/company/demesocial/,
DeMR,pfd72p,https://www.demr.xyz/#/,SENSORS,SOLANA,DMR,,DeMR is a decentralized mixed reality infrastructure network (MR-DePIN). Global users can participate in scanning and building MR maps of various cities with consumer-grade devices such as mobile phones to earn tokens as a reward.,,ZZ,,https://twitter.com/DeMR_official,,,,,,
DeNet,g8kgxw,https://denet.pro/,COMPUTE,POLYGON,DE,denet-file-token,"DeNet provides a decentralized storage protocol using spare global capacities, leveraging blockchain for secure, user-owned data.",,ZZ,,,,,,,,
Dent,ahvii3,https://www.dentwireless.com/,WIRELESS,ETHEREUM,DENT,dent,Dent is a Blockchain-powered digital mobile operator providing eSIM-based mobile data and voice call services.,,ZZ,,,,,,,,
Dentity,9a3i9h,https://www.dentity.com/,BLOCKCHAIN_INFRA,,,,"Dentity aims to transform digital credentials, combating enterprise fraud by offering a feature-rich Web3 Identity & Verifiable Credentials Platform with broad identity standard integrations. ",,ZZ,,,,,,,,
DePHY,gmxzzx,https://dephy.io/,SENSORS,,,,"DePHY is an open-source hardware solution, SDKs, and tools that allow users to build and scale their DePIN app with ease.",,EV3 Sal,,https://x.com/dephynetwork,,,,,,
DePIN DAO,ebuevs,https://depindao.co/,SENSORS,SOLANA,DePIN,depin-dao,"DePIN DAO is a Big Data Center Based on Solana that allows users to contribute their data(upload their own eating, driving, and hotel information, etc) earn $Depin rewards and enjoy the process of monetizing their data.",,ZZ,,,,,,,,
DePioneers,yn6y4f,https://depioneers.com/,NOT_DEPIN,,,,"DePioneers is a new type of hybrid NFT community, merging the DePIN market with the social prowess of PFPs.",,EV3 Sal,,,,,,,,
Dera,5yinyq,https://deraconnect.com/,WIRELESS,,,,"WEB3 BASED SERVERLESS SECURE Remote Private Network Achieve high security standards with the power of blockchain Remotely access your apps, devices and business",,,,,,,,,https://www.linkedin.com/company/dera-technology/,
DeStore,ky8cpt,https://www.destore.network/,BLOCKCHAIN_INFRA,,,,DeStore is a technology service provider that facilitates convenient and secure direct-to-customer (DTC) sales. DeStore enables DTC settlement by merging hybrid products and payment data via blockchain-based Digital Twins.,,ZZ,,,,,,,,
Destra,0ln1il,https://www.destra.network/,COMPUTE,ETHEREUM,DSYNC,destra-network,"Destra Network offers a one-stop solution for all of DePIN and AI computing needs by providing a decentralized cloud infrastructure, AI computing, decentralized storage solutions, decentralized databases, and decentralized DNS solutions.",,ZZ,,https://twitter.com/DestraNetwork,,,,,,
DeTensor,be4snz,https://detensor.io/,COMPUTE,ETHEREUM,DETENSOR,detensor,"DeTensor is a marketplace for deploying nodes, VPN, cloud services, and renting & lending GPUs.",,ZZ,,https://twitter.com/DeTensorIO,,,,,,
DeVolt,qtjxs2,https://www.devolt.xyz/,ENERGY,,,,"DeVolt is a decentralized platform and protocol that enables new players to enter the electric vehicle charging market by providing monetary incentives, logistical facilitations, accessible stations, and an open, fully transparent market.",,ZZ,,https://twitter.com/ddevolt/,,,,,,
Devolved,7trv2k,https://www.devolvedai.com/,AI,POLYGON,AGC,argocoin,"Devolved AI is a decentralized AI and blockchain platform built, governed, and owned by the people, fighting corporate agendas with blockchain-based trust and transparency.",,EV3 Sal,,,,,,,,
Devour,k7et05,https://devour.io/,BLOCKCHAIN_INFRA,ETHEREUM,DPAY,devour,"Devour is a blockchain-powered food ordering platform that aims to bridge the gap between restaurants and Gen Z through tokenized campaigns, engagement challenges, and by embedding food ordering options within digital worlds.",,ZZ,,https://twitter.com/GoDevour,,,,,,
DexCheck,wt759c,https://dexcheck.ai/,AI,ETHEREUM,DCK,dexcheck,DexCheck: AI-powered Crypto & NFT Analytics platform for real-time insights and market analysis.,,,,https://twitter.com/DexCheck_io,,https://t.me/dexcheck,https://medium.com/@DexCheck,,,
DIA,p00wkk,https://www.diadata.org/,BLOCKCHAIN_INFRA,ETHEREUM,DIA,dia,"DIA is an open-source data and oracle platform for Web3, providing fully customizable and transparent feeds for smart contracts.",,,,,772395240677179402,,,,,
Dialect,0c8gl1,https://www.dialect.to/,NOT_DEPIN,,,,"Dialect is developing a protocol for smart messaging. It offers ‚Äädynamic, composable dapp notifications and wallet-to-wallet chat. Powered by Solana.",,,,https://twitter.com/saydialect,1168929408279646278,,https://medium.com/dialect-labs,,https://www.linkedin.com/company/dialect-labs/about/,
Digileaf,3qppu8,https://digileaf.io/,ENERGY,,LEAF,,"DigiLeaf is a Solar Panel integrated with the Algorand Blockchain, that not only diminishes carbon footprints but also contributes to a decentralized power network. DigiLeaf hardware earns LEAF tokens, incentivizing support for a greener Earth.",,ZZ,,,,,,,,
Digital Gaia,hq0zgu,https://www.digitalgaia.earth/,BLOCKCHAIN_INFRA,,,,Decentralized platform optimizing local communities environmental impact with AI and mobile app.,"Environmental, Data, Rewards",,,https://twitter.com/_digitalgaia,,,,,http://www.linkedin.com/company/digital-gaia,
Dimitra,18fpn9,https://dimitra.io/,SENSORS,ETHEREUM,DMTR,dimitra,Dimitra is a blockchain platform that is democratizing the Agricultural Technology space for smallholder farmers globally.,,,,,857710510652391505,,,,,
DIMO,0wr2ea,https://dimo.zone/,SENSORS,POLYGON,DIMO,dimo,DIMO is a decentralized ecosystem of connected vehicles.,Auto,,,https://twitter.com/DIMO_Network,892438668453740634,,https://dimo.zone/news,https://github.com/DIMO-Network,https://www.linkedin.com/company/dimo-network,
Dinari,u586qc,https://www.dinari.com/,NOT_DEPIN,ARBITRUM,DIS.D,dinari-nvda-dshares,"Dinari: dShare Platform with real-world asset backed tokens, granting access to securities on Arbitrum network.",RWA,,,https://twitter.com/DinariGlobal,1014801661740462143,https://t.me/dinariglobal,,https://github.com/dinaricrypto,https://www.linkedin.com/company/dinari-global/,
Diode,c01rpe,https://diode.io/,NOT_DEPIN,,,,Diode is a Web3 software company committed to providing fundamental technologies for fully decentralized authentication and routing of network participants.,,,,https://twitter.com/diode_chain,,https://t.me/diode_chain,,https://github.com/diodechain,https://www.linkedin.com/company/diode-chain/,
Dione,ew04hq,https://www.dioneprotocol.com/,ENERGY,ETHEREUM,DIONE,dione,Dione is a blockchain company developing renewable energy trading technology.,L1/L2,,,https://twitter.com/firstone_DIONE,,https://t.me/DioneProtocol,https://github.com/DioneProtocol/Dione,,https://www.linkedin.com/company/dione,
disBalancer,1hoj55,https://disbalancer.com/about/,COMPUTE,ETHEREUM,DDOS,disbalancer,disBalancer operates as a decentralized infrastructure load balancer with a built-in site where users can rent out excess bandwidth and storage and purchase content delivery and DDoS protection services.,,ZZ,,,,,,,,
District Labs,xcf8bl,https://districtlabs.com/,NOT_DEPIN,,,,"Provider of a provision infrastructure that allows developers to connect to protocols, and deploy to decentralized networks with one unified development workflow.",,,,,,,,,https://www.linkedin.com/company/districtlabs/,
district0x,r5hrge,https://district0x.io/,BLOCKCHAIN_INFRA,ETHEREUM,DNT,district0x,"District0x is a blockchain-based network of decentralized online marketplaces, known as districts, which are operated by community members without centralized leadership.",,ZZ,,https://twitter.com/district0x,,,,,,
Dither AI,dgww01,https://dith.ai/,AI,SOLANA,DITH,dither,Dither is a multi-faceted experiment that leverages the Solana ecosystem to build the world's most powerful AI time-series models for trading.,,ZZ,,https://twitter.com/Dither_Solana,,,,,,
dKargo,zt0tgx,https://dkargo.io/en,BLOCKCHAIN_INFRA,ETHEREUM,DKA,dkargo,"dKargo is a Decentralized and Cooperative Protocol for Next Generation Logistics. ",,,,https://twitter.com/dKargo_Official,,https://t.me/dKargo_Official_KR,https://blog.naver.com/dkargo,https://github.com/dKargo,https://www.linkedin.com/company/dkargo/about/,
DLTEO,byzgll,https://www.dlteo.com/,SENSORS,,,,DLTEO is a platform to monetize and process Earth Observation Data & AI models.,Environmental,ZZ,,https://twitter.com/dlt_eo,,,,,https://at.linkedin.com/company/dlteo-gmbh,
Dmail,84v1j0,https://dmail.ai/,AI,BINANCE,DMAIL,dmail-network,Dmail is an AI-powered decentralized email platform that empowers users with ownership and control of their data.,,,,https://twitter.com/dmailofficial,906006936531660831,https://t.me/dmailofficial,https://medium.com/@dmail_official,https://github.com/dmailofficial/dmail,http://www.linkedin.com/company/dmail-idee-utili-e-introvabili,
DMC,eic5xo,https://dmctech.io/en,COMPUTE,,DMC,datamall-coin,Datamall Chain is an open-source blockchain platform that provides stable and decentralized storage services for web3 and Dapps.,Storage,EV3 Sal,,,,,,,,
Dock,rz5js9,https://www.dock.io/,BLOCKCHAIN_INFRA,POLKADOT,DOCK,dock,"Dock is a Verifiable Credentials company that provides Dock Certs, a user-friendly, no-code platform, and developer solutions that enable organizations to issue, verify, manage, and revoke fraud-proof credentials efficiently and securely.",,ZZ,,,,,,,,
Dockhive,gw14hr,https://dockhive.io/,COMPUTE,,,,DockHive is a cutting-edge platform leveraging blockchain and decentralized networks for secure and scalable Docker container management.,,W. L.,,https://twitter.com/dockhive,1141165775625924788,https://t.me/Dockhive,https://dockhive.medium.com/,https://github.com/DockHive/dht,https://www.linkedin.com/company/dockhive/,
Dojima,aomkd4,https://www.dojima.network/,NOT_DEPIN,,,,Dojima is an omnichain EVM layer enabling cross-chain applications.,,,,https://twitter.com/dojimanetwork,864498254958821378,,,https://github.com/dojimanetwork,https://www.linkedin.com/company/dojimanetwork,
Dolpin,ns7fn7,https://dolpin.io/,COMPUTE,,,,"Dolphin: Decentralized cloud storage platform for file encryption, access control, and beneficiaries.",Storage,,,https://twitter.com/Dolphin_Emu,967709540822945792,,,,https://uk.linkedin.com/company/dolphin,
Domani,kistgs,https://domani.finance/,NOT_DEPIN,ETHEREUM,DEXTF,dextf,"DOMANI is an asset management protocol for DeFi that provides minting, trading, redeeming, and liquidity for non-custodial oracle-less tokenized portfolios (XTFs).",,,,,,,,,,
Dongo AI,nse71f,https://dongo.ai/,AI,ETHEREUM,DONGO,dongo-ai,"Dongo AI is a cutting-edge platform that integrates AI with blockchain technology to provide personalized tools and bots for Web 3.0 ecosystems, enhancing market analysis, business automation, and decision-making for digital enterprises.",,ZZ,,https://twitter.com/Dongo_AI,,,,,,
Dor,365s2t,https://www.getdor.com/,SENSORS,NATIVE,DOR,dor,"Dor is a thermal sensing, battery-operated people counter that collects foot traffic data for businesses, provides analytics, and allows them to earn crypto rewards.",,ZZ,,https://twitter.com/dortechnologies,,,,,,
Dotchain,jcei9t,https://dotchain.network/,BLOCKCHAIN_INFRA,,DOT,,Dotchain is the Fastest Launching Blockchain Network that allows users to mine crypto blocks and earn coins using their phones.,,ZZ,,https://twitter.com/dot_blockchain,,,,,,
dotmoovs,lipfwr,https://dotmoovs.com/,AI,ETHEREUM,MOOV,dotmoovs,Dotmoovs uses AI scoring & monetization through $MOOVs investment.,,,,https://twitter.com/dotmoovs,,https://t.me/s/dotmoovs_announcements?before=1038,https://dotmoovs.medium.com/,https://github.com/dotmoovs,http://www.linkedin.com/company/dotmoovs,
DotOracle,n8t17l,https://dotoracle.network/,NOT_DEPIN,,,,DotOracle is a decentralized bridge on Casper Network and a cross-chain bridge supported by EVM chains and non-EVM chains.,Bridges,,,https://twitter.com/DotOracle,,https://t.me/dotoracle,https://medium.com/@dotoracle.network,https://github.com/dotoracle/dotoracle-website,https://www.linkedin.com/company/dotoracle,
Drawtech,xyyiaq,https://www.draw.tech/,NOT_DEPIN,,,,Drawtech is a crypto-economic drawing game built in MUD as a Progressive Web App (PWA).,,,,,,,,,,
DreamOS,k33zry,https://www.dreamos.app/,NOT_DEPIN,,,,DreamOS is the operating system for web3 where users can manage their crypto & NFTs and access their favorite dApps all in the same interface.,,,,,,,,,,
DRIFE,con8un,https://www.drife.io/,SERVICES,BINANCE,DRF,drife,"Drife is a decentralized ride-hailing platform powered by blockchain with the intent of empowering both, the drivers and riders.",Ridesharing,ZZ,,https://twitter.com/Drife_official,1177521017917288448,https://t.me/Drife_officialchat,,,https://www.linkedin.com/company/drifeofficial,
Drive to Earn,bj8kjt,https://www.d2e.info/,SENSORS,POLYGON,DTE,drive-to-earn,Drive to Earn is Web3.0 project that will revolutionize the drive market.,Ridesharing,,,,,,,,,
DriveX,yidy7d,https://www.drivex.zone/,SENSORS,,,,DriveX is a decentralized marketplace for vehicle data that unlocks new revenue and financing opportunities for owners and operators for mobility and transportation.,Auto,,,https://twitter.com/DriveXProtocol,,,,,,
Drone Link,0w936j,https://www.dronelink.com/,BLOCKCHAIN_INFRA,,,,Drone Link uses DePin model to enhance drone performance and accelerate regional expansion.,,,,https://twitter.com/DronelinkHQ/,,,,,https://www.linkedin.com/company/dronelink/,
Drop,qnfsx5,https://dropwireless.io/,WIRELESS,IOTEX,DWIN,,Drop Wireless is a decentralized wireless network for IoT use cases.,Data,ZZ,,https://mobile.twitter.com/dropwireless,,,,https://github.com/timogiles/wireless-dead-drop,https://ca.linkedin.com/company/joindrop,
DROPPS,cmvmnd,https://www.dropps.io/,NOT_DEPIN,,,,Developer of a decentralized infrastructure for the new creative economy intended to build d-apps and protocols that leverage emerging market opportunities.,L1/L2,,,https://twitter.com/dropps_io,900360236051865650,,https://medium.com/dropps,https://github.com/dropps-io,https://www.linkedin.com/company/dropps-io/,
Druglike,axqfta,https://druglike.com/,NOT_DEPIN,,,,"Druglike is a platform for democratizing the access, cost, and rewards of early-stage drug discovery.",,ZZ,,https://twitter.com/druglike_io,977966236627533886,,,,,
DSLA,9mm3mn,https://stacktical.com/,NOT_DEPIN,ETHEREUM,DSLA,stacktical,DSLA Protocol reduces user exposure to service delays and financial losses through agreements.,,,,https://twitter.com/willitscale,,https://t.me/stacktical,https://medium.com/@stacktical,https://github.com/Stacktical,http://www.linkedin.com/company/stacktical,
DStor,p5n1y8,https://dstor.cloud/,COMPUTE,,,,DStor is a globally-distributed cloud storage network.,Storage,ZZ,,https://twitter.com/dstor,,,,https://github.com/SitePen/dstore/blob/master/docs/Store.md,https://www.linkedin.com/company/dstor,
dTelecom,adga80,https://dtelecom.org/,COMPUTE,ARBITRUM,DTEL,,"Decentralized Real-Time Communication: Build app with live audio/video/data communications. Own the resources, network, and data. Earn as a community member.",,W. L.,,https://twitter.com/DTEL_org,,,,https://github.com/dTelecom,,
DTravel,37xksc,https://www.dtravel.com/,SERVICES,ETHEREUM,TRVL,dtravel,"DTravel is a decentralized platform for home-sharing economy, ensuring easy and secure short and long-term stays.",,,,https://twitter.com/DtravelDAO,894038050999517184,https://t.me/dtravelcommunity,https://medium.com/dtravel-community,https://github.com/dTravel,https://www.linkedin.com/company/dtraveldao/,
Dupe Fi,uuhuxv,,NOT_DEPIN,,,,"Dupe Fi is a platform that provides tokenization infrastructure for web2 gaming assets, starting with CSGO.",Gaming,,,,,,,,,
Dusk,hg74ov,https://dusk.network/,NOT_DEPIN,ETHEREUM,DUSK,dusk,"Dusk is a permissionless, ZK-friendly L1 blockchain protocol focused on Compliance and Privacy to tokenize RWA.",,ZZ,,,,,,,,
DxChain,86s1ov,https://www.dxchain.com/,NOT_DEPIN,ETHEREUM,DX,dxchain-token,"DxChain is a blockchain network designed to build a web3 application platform that supports smart contracts and cross-chain ecosystem, and creates the most powerful public chain for dapps while ensuring security and scalability.",,,,https://twitter.com/DxChainNetwork,899551086501851146,https://t.me/dxchain,https://blog.dxchain.com/,https://github.com/DxChainNetwork,https://www.linkedin.com/company/dxchainnetwork/,
Dynex,6e2zu2,https://dynexcoin.org/,AI,NATIVE,DNX,dynex,Dynex is a decentralized neuromorphic computing protocol.,,,,,1145567770872922223,,,,,
EARNM,glylqg,https://www.earnm.com/,SENSORS,,EARNM,,"Mode Mobile's EARNM transforms smartphones into EarnPhones, providing a deflationary MobileFi and DePIN loyalty system that incentivizes sustainable user engagement and value creation.",,ZZ,,https://twitter.com/earnmrewards,,,,,,
ECHO,9zzvik,https://0xecho.com/,BLOCKCHAIN_INFRA,,,,"Echo is a decentralized social engagement protocol using Arweave, embedding on-chain comments/likes onto any website.",,,,https://twitter.com/EchoGuild?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,986972622552191016,,https://medium.com/@bestvideomovies,,https://www.linkedin.com/company/echo-,
Echolink,msvz1z,https://echolink.network/,SENSORS,SOLANA,ECHO,,"Echolink is a DePIN-focused IoT oracle, launched on Solana and specifically designed to cater to the rapidly growing sector of DePIN Massive adoption.",,ZZ,,,,,,,,
Eclipse,dgqlyo,https://www.eclipse.builders/,BLOCKCHAIN_INFRA,,,,"Eclipse is Ethereum's fastest L2, powered by the Solana Virtual Machine. Eclipse makes it possible to build applications that can coordinate masses of people and scale with any developer‚Äôs needs.",,,,https://twitter.com/EclipseFND,1020496431959785503,https://t.me/eclipse_labs,https://www.eclipse.builders/blog,,https://www.linkedin.com/company/eclipse-laboratories/,
EcoBlocks,ws7n8t,https://ecoblocks.tumblr.com/,BLOCKCHAIN_INFRA,,,,EcoBlocks is a regenerative protocol incentivizing electronic recycling via an escrow based process.,Environmental,,,,,,,,https://linkedin.com/company/eco-block-distribution-pty-ltd,
EcoBytes,p20viq,https://3cobytes.com/,SENSORS,,,,EcoBytes is a Re-Fi Platform that rewards consumers for unused mobile data passively.,,,,https://twitter.com/EcoBytes1,995037473379979307,,,,https://www.linkedin.com/company/ecobytes/about/,
EcoGen,7y6ab9,http://www.ecogentech.io/,ENERGY,,,,EcoGen builds sustainable edge computing and renewable energy for cryptocurrency mining.,"Hardware, Mining",,,,,,https://miavass.medium.com/ecogen-technologies-launch-4a942446630e,,http://www.linkedin.com/company/ecogen-technologies,
ecoToken,5dnpsz,https://ecotoken.earth/,BLOCKCHAIN_INFRA,,,,EcoToken's mission is to revolutionize the environmental credit market by leveraging the power of blockchain technology.,,,,,892830662325862420,,,,,
Edge Intelligence,0s86ji,http://edgeintelligence.xyz/,AI,,,,Edge Intelligence is a research & development organization advancing edge intelligence and open-source tech for the sovereign individual.,,EV3 Sal,,https://twitter.com/EdgeAGI,,,,,,
Edge Video,gfla1w,https://www.edgevideo.ai/,NOT_DEPIN,,FAST,,"Edge Video is developing an AI-powered technology to transform any stream into an interactive, revenue-generating, and incentivizing user experience.",,ZZ,,https://twitter.com/edgevideoai,,,,,,
Edge,gsez5y,https://edge.network/,BLOCKCHAIN_INFRA,NATIVE,EDGE,edge,"Edge is the infrastructure of Web3. A peer-to-peer network and blockchain providing high performance decentralised web services, powered by the spare capacity all around us.",,,,https://twitter.com/edgenetwork,371989135172567051,https://t.me/edgenetwork,,https://github.com/edge,,
EdgeMatrix,iespkr,https://edgematrix.pro/,AI,,,,EMC Hub is a AI+Web3 computing power and model marketplace.,,W. L.,,https://twitter.com/EMCprotocol,1101359709547679848,https://t.me/emc_network,https://medium.com/@EMCProtocol,https://github.com/EMCProtocol-dev,,
Efani,w1b0je,https://www.efani.com/,WIRELESS,,,,Efani is a provider of secure mobile services that protect high-risk individuals from mobile hacks.,,,,https://twitter.com/efani,,,,,https://www.linkedin.com/company/efani/,
Effect,n3lgh9,https://effect.network/,SERVICES,,EFX,effect-network,Effect is a decentralized network for human intelligence where workers and requesters can easily connect and work together.,,ZZ,,https://twitter.com/effectaix,,,,,,
Elastos,ry6qz8,https://elastos.info/,BLOCKCHAIN_INFRA,ETHEREUM,ELA,elastos,"Elastos is a decentralized peer-to-peer economic infrastructure powered by blockchain. It can be used to authenticate digital rights, transfer contracts, and turn digital information into assets, and aims to serve as a new smarter, and safer web.",,ZZ,,,,,,,,
Electric Tree,xhfj9r,https://vision.electrictree.com/,BLOCKCHAIN_INFRA,,,,Electric Tree is a decentralized climate finance platform built to bridge the climate financing gap for carbon removal.,Environmental,,,,,,,,,
Electron,5irc1k,https://electronlabs.org/,NOT_DEPIN,,,,Electron Labs is building a ZK-powered computational compression engine for consensus protocols.,ZK,ZZ,,https://twitter.com/labs_electron,,,,,,
Element,hz4cbu,https://element.io/,WIRELESS,,HYP,hyperstake,Element is a Matrix-based end-to-end encrypted communications platform.,,,,https://twitter.com/element_hq,,,https://element.io/blog/,https://github.com/vector-im,https://www.linkedin.com/company/element-hq/,
Eleuther,d1vp44,https://www.eleuther.ai/,AI,,,,"A non-profit research lab focused on interpretability, alignment, and ethics of AI. EleutherAI has trained and released many powerful open source LLMs.",,,,https://twitter.com/AiEleuther,729741769192767510,,https://blog.eleuther.ai/,https://github.com/EleutherAI,https://www.linkedin.com/company/eleutherai/,
Elixir,wrifq0,http://www.elixir.finance/,NOT_DEPIN,ETHEREUM,ELXR,elixir-finance,Elixir: Decentralized protocol for secure market-making.,,,,https://twitter.com/ElixirProtocol,1059691738349977674,https://t.me/elixirprotocol,,,http://www.linkedin.com/company/elixir-protocol,
ELOOP,c0u4u3,https://eloop.one/en/,BLOCKCHAIN_INFRA,,,,"ELOOP: Rent, share, and charge electric cars.",Ridesharing,,,,,https://t.me/eloopone,,,https://www.linkedin.com/company/eloopmobi,
Elumicate,ue1aq8,https://elumicate.com/,SENSORS,,,,World vision network powered by the people. Elumicate ceased operations in March 2024,,EV3 Sal,,,945776985240637440,,,,,
Elusiv,3wkk5f,https://www.elusiv.io/,NOT_DEPIN,,,,Elusiv is building a Web3 universal encryption layer empowering the decentralized world.,,,,https://twitter.com/elusivprivacy,963285822327652403,,https://medium.com/elusiv-privacy,https://github.com/elusiv-privacy,https://www.linkedin.com/company/elusiv/,
EMC Protocol,2l10iw,https://www.edgematrix.pro/,COMPUTE,ARBITRUM,EMC,,"EMC is a decentralized GPU computing network supported by EVM and multi-chain, serving as the gateway for Computing Power and Web3 in the AI era",,,,https://twitter.com/EMCprotocol,1101359709547679848,https://t.me/+NGI26KSbBpA3YzA0,https://medium.com/@EMCProtocol,https://github.com/EMCProtocol-dev,,
Emerald,y339w7,https://www.emeraldco.io/,NOT_DEPIN,ETHEREUM,EMRLD,the-emerald-company,"Emerald is a blockchain-based project focused on transforming the emerald and luxury jewelry market through transparent, traceable, and ethically sourced products, with a revenue model including fractional ownership, sales, and rentals.",RWA,ZZ,,https://twitter.com/theemeraldco,,,,,,
Emerge,dmf572,https://www.emergetools.com/,NOT_DEPIN,,,,Emerge is a suite of app development products designed to supercharge mobile apps and the teams that build them.,,,,https://twitter.com/emergetools,,,,,https://github.com/EmergeTools/,
Empyreal,mmo63y,https://empyreal.app/,NOT_DEPIN,ARBITRUM,EMP,empyreal,"Empyreal is a protocol that leverages privacy technology, encryption, and automation to optimize trading operations and user security across multiple blockchain platforms.",,,,https://twitter.com/empyrealSDK,1096496676845396108,https://t.me/empyrealportal,https://medium.com/@empyrealsdk,https://github.com/empyrealapp/empyrealSDK/tree/rc0.1,,
Encloud,29p0bm,https://encloud.tech/,AI,,,,"Encloud is a confidential and flexible software that enables organizations to deploy machine learning and AI like LLMs in a private, controllable, and auditable way.",,ZZ,,,,,,,,
Energiedigital,ylaztr,https://www.energiedigital.at/#p,ENERGY,,,,"Energiedigital plans, builds decentralized energy solutions for buildings and districts including private individuals in single-family homes and commercial residential and neighborhood developers.",,,,,,,https://www.energiedigital.at/#blog,,https://www.linkedin.com/company/energiedigital/,
Energy Cube,208uca,https://www.ec-cube.io/,ENERGY,PEAQ,ECT,,"Energy Cube is a Decentralized Energy Network optimizing global energy use with the Ec³ Cube device, enabling data-driven participation in the energy market.",,ZZ,,https://twitter.com/Ec3_DeEnergy,,,,,,
Energy Web,tjcjjf,https://www.energyweb.org/,ENERGY,GNOSIS,EWT,energy-web,"The Energy Web Foundation fosters value creation in the energy sector by building and promoting an open, decentralized software infrastructure built around blockchain technology.",,,,,706103009205288990,,,,,
enq,i5b54g,https://enqai.com/,AI,ETHEREUM,ENQAI,,enqAI is developing a Network for Decentralized Uncensored AI Models,,Mahesh | Escape Velocity,,https://twitter.com/enq_AI,1079425803441426562,https://t.me/noisegpt,,,,
Enshrine Computing,5dh3my,https://enshrine.ai/,COMPUTE,,,,"Enshrine Computing is building autonomous computing on top of trusted execution environments (TEEs) to provide a high-performance, secure, and convenient platform for Web3 developers.",,ZZ,,https://twitter.com/EnshrineCC,,,,,,
Entangle,upuriv,https://entangle.fi/,BLOCKCHAIN_INFRA,ETHEREUM,NGL,entangle,"Entangle is a customizable messaging Infrastructure designed to unify web3 and optimize ecosystem liquidity. It provides builders & dApps authenticated, customizable, and interoperable data secured on the blockchain with full security configurability.",,ZZ,,https://twitter.com/Entanglefi,,,,,,
Entheos,0if1hs,https://www.entheos.network/,ENERGY,,,,Entheos Network: energy solutions & batteries for businesses globally.,Batteries,,,,,,https://entheosnetwork.medium.com/entheos-network-b3e43242a5ae,,http://www.linkedin.com/company/entheos-network,
EnviroBLOQ,czooh2,https://envirobloq.io/,SENSORS,IOTEX,,,EnviroBLOQ is a decentralized network of connected smart home devices.,,,,,,,,,,
Enzyme,x7rtjw,https://enzyme.finance/,NOT_DEPIN,ETHEREUM,MLN,melon,"Welcome to the future of asset management. Build, scale and monetise an investment strategy that suits your needs.",,,,https://twitter.com/enzymefinance,515208056720719872,https://telegram.enzyme.finance/,http://www.linkedin.com/company/enzymefinance,https://medium.com/enzymefinance,https://github.com/enzymefinance,
EO3,ttrbf5,https://www.eo3.dev/,SENSORS,,,,"EO3 is a decentralized ecosystem for Earth Data & Intelligence that connects providers (content creators), insight developers (data miners), and the user (purchaser) communities, with verification nodes to validate and distribute data & insights.",,EV3 Sal,,,,,,,,
Epics,w0bliz,https://epics.dev/en/,COMPUTE,,,,Epics is a decentralized build to earn platform for open source software development.,,,,,976136099107840071,,,https://github.com/epics-base,https://www.linkedin.com/company/epic1979,
EpiK,0lasch,https://www.epik-protocol.io/,AI,ETHEREUM,AIEPK,epik-protocol,"EpiK Protocol: Using IPFS, DAO and token economy to build a large-scale knowledge graph.",,,,https://twitter.com/EpikProtocol,740760785487265815,https://t.me/EpikProtocol,https://epikprotocol.medium.com/,https://github.com/EpiK-Protocol,http://www.linkedin.com/company/epikprotocol,
epPlex,ccemio,https://www.epplex.xyz/,NOT_DEPIN,,,,Empowering a new frontier of Solana NFT use-cases with ephemeral epNFTs,,,,,,,,,,
Equito,02ugap,https://equitofinance.com/,NOT_DEPIN,,,,Equito Finance is a chain-agnostic open-source bridge protocol.,Bridges,ZZ,,https://twitter.com/EquitoFinance,952703700483330049,,,https://github.com/EquitoBridge,https://it.linkedin.com/company/equito-finance,
Ergo,"5vuxdv""",https://ergoplatform.org/en/,NOT_DEPIN,NATIVE,ERG,ergo,"Ergo is a smart contract platform that ensures the economic freedom of ordinary people through secure, accessible, and decentralized financial tools. It is backed by a powerful scripting language and a suite of powerful zero-knowledge proofs.",,ZZ,,,,,,,,
Espresso Systems,1rgbka,https://www.espressosys.com/,NOT_DEPIN,,CAPE,,Espresso Systems is a decentralized sequencer and data availability system connecting layer-2 scaling solutions.,,,,,,,,,,
Esprezzo,d3ep1m,https://esprezzo.io/,BLOCKCHAIN_INFRA,,,,"Esprezzo Dispatch is a no-code platform for creating and monitoring notifications across NFT projects, brands, and games.",,EV3 Sal,,https://twitter.com/esprezzoapp,,,,,,
ETCMC,weqn6l,https://www.etcmc.org/,NOT_DEPIN,ETHEREUM,ETCPOW,,ETCMC is a community-driven mining pool and decentralized autonomous organization that pays additional rewards to miners through its ETCPOW token.,,,,,,,,,,
ether.fi,1agi71,https://ether.fi/,NOT_DEPIN,,,,Ether.fi is a non-custodial decentralized ETH staking method that rewards node operators for participating in staking.,Rewards,,,https://twitter.com/ether_fi,1064694900819509358,https://t.me/+C3fpSjmPqzA5NTVh,https://medium.com/etherfi,,http://www.linkedin.com/company/etherfi,
Etherisc,mtmthh,https://etherisc.com/,NOT_DEPIN,ETHEREUM,DIP,etherisc,"Etherisc is a decentralized insurance protocol that makes the build, purchase, and sale of parametric insurance straightforward and more efficient.",,,,,,,,,,
Etherland,z4helo,https://etherland.world/,NOT_DEPIN,,ELAND,,"Etherland is digitalizing real-estate properties and their owners' legal documents, granting unhinged traceability and immutability through Blockchain and IPFS technologies.",RWA,,,,,,,,,
EtherMail,hoaz0e,http://www.ethermail.io/,BLOCKCHAIN_INFRA,ETHEREUM,EMT,ethermail,"EtherMail: secure, anonymous email with blockchain rewards.",,,,https://twitter.com/ethermail_io,,https://t.me/ethermail_official,,,http://www.linkedin.com/company/xearndao,
Ethernity Cloud,iyi6t5,https://ethernity.cloud/,COMPUTE,ETHEREUM,ETNY,ethernity-cloud,Ethernity Cloud is a decentralized confidential computing ecosystem that enforces privacy for the user's data and transparency for the operations that process this data.,,,,,,,,,,
ETHforestAI,njhr2m,https://ethforest.ai/,AI,ARBITRUM,ETHFAI,ethforestai,ETHforestAI is a Web3 learning platform with an integrated AI chatbot and Learn-To-Earn features.,,,,https://twitter.com/ETHforestAI,,https://t.me/ETHforestAI,https://medium.com/@ethforestai,,,
Etho,my9a38,https://ethoprotocol.com/,COMPUTE,NATIVE,ETHO,etho-protocol,Etho Protocol (ETHO) is a decentralized data/storage hosting platform using a community-owned node network combining blockchain indexing technology and the IPFS protocol to deliver decentralized data/content on-demand.,,ZZ,,,,,,,,
Ethoplex,6v375z,https://www.ethoplex.com/,WIRELESS,,,,"Ethoplex is a leading wireless internet service provider that delivers advanced, high-speed Internet access to businesses and rural residential customers alike.",,EV3 Sal,,https://twitter.com/ethoplex,,,,,,
Ethstorage,2kn4hu,https://eth-store.w3eth.io/,COMPUTE,,,,Ethstorage is a cost-effective Layer 2 storage rollup solution on Ethereum.,L1/L2,,,https://twitter.com/EthStorage,1040111910802182186,https://t.me/ethstorage,https://ethstorage.medium.com/,https://github.com/ethstorage/,,
Everdome,t4w143,https://everdome.io/,NOT_DEPIN,BINANCE,DOME,everdome,Creating a hyper-realistic Metaverse for a seamless Web3 experience.,,,,https://twitter.com/Everdome_io,1002185140782510181,https://t.me/everdome,,,https://www.linkedin.com/company/everdome-io/,
everVision,zr5vzn,https://ever.vision/,COMPUTE,,,,"everVision: Blockchain provider for Web3 development, offering everPay, Permaswap, PermaDAO, and Web3Infra.",,,,https://twitter.com/everVisionHQ,826354651493564446,,,https://github.com/everFinance,https://sg.linkedin.com/company/ever-vision,
Everyname,2i6tkv,https://www.everyname.xyz/,NOT_DEPIN,,,,Everyname is a provider of an advanced protocol for retrieving info from any blockchain name registry.,,,,,,,,,,
Everyworld,si0rd5,https://www.everyworld.com/,NOT_DEPIN,ETHEREUM,EVERY,everyworld,"Everyworld is a global content network that rewards users for their time and attention, transforming digital activity into rewards. Users can earn points through engagement, participate in drawings for payouts, and support environmental charities.",,ZZ,,https://twitter.com/JoinEveryworld,,,,,,
Exa,90eym0,https://www.exaprotocol.com/,COMPUTE,,,,Exa Protocol is a decentralized distributed file system using mobile devices.,Storage,ZZ,,https://twitter.com/ExaProtocol,916886546903347230,https://t.me/exaprotocol,,,https://linkedin.com/company/exa-protocol,
Exabits,ks1fra,https://www.exabits.ai/,COMPUTE,,,,exaBITS is a decentralized infrastructure for AI and computationally intensive applications.,GPUs,,,https://twitter.com/exa_bits,1105999312393076877,https://t.me/+D0CulDl9udZjMWIx,https://medium.com/decentralizedcomputing,,http://www.linkedin.com/company/exabits,
Exatech,s2x25a,https://exatech-ext.com/,BLOCKCHAIN_INFRA,BINANCE,EXT,exatech,"Exatech operates the EXA_Chain ecosystem, a unique Proof of Artificial Intelligence (PoAI) algorithm-based blockchain allowing developers to rapidly deploy tokens that support their applications in a safe and secure environment.",,ZZ,,https://twitter.com/ExaTechPoAI,,,,,,
Expanso,rntyxj,https://www.expanso.io/,COMPUTE,,,,"Expanso runs jobs exactly where your data resides, utilizing local compute, and minimizing data throughput.",,EV3 Sal,,,,,,,,
Exponent Energy,6qah9x,https://www.exponent.energy/,ENERGY,,,,"Exponent Energy is a full stack energy company that builds chargers, batteries and everything in between to unlock 15-minute rapid charging for EVs.",,,,,,,,,,
EYWA,tbwx5g,https://eywa.fi/,BLOCKCHAIN_INFRA,,EYWA,,EYWA is a genuinely decentralized medium for transferring data between blockchains and creating aggregated cross-chain assets.,,,,https://twitter.com/eywaprotocol,880102933298049054,https://t.me/eywa_en,https://medium.com/@eywaprotocol,https://github.com/eywa-protocol,https://www.linkedin.com/company/eywa-protocol/,
EZ WiFi,oazct0,https://ezwi.fi/,WIRELESS,,,,"EZ WiFi is a WiFi management platform helping operators and providers build, monetize, and scale wireless networks.",,,,,,,,,https://linkedin.com/company/ezwifitech,
EZKL,oehbnl,https://ezkl.xyz/,AI,,,,Harness the power of machine learning in smart contracts without compromising on trust. ezkl makes it possible for anyone to apply zero-knowledge proofs in their smart contracts.,ZK,,,,1017182037964247101,,,,,
Facet,oapz0k,https://facetscan.com/,NOT_DEPIN,,,,"Facet is a decentralized, low-cost computing platform that leverages the deterministic nature of Ethereum transactions to reduce gas costs drastically.",,ZZ,,https://twitter.com/0xFacet,,,,,,
FACT0RN,w0jykb,https://www.fact0rn.io/,BLOCKCHAIN_INFRA,NATIVE,FACT,fact0rn,FACT0RN: a blockchain replacing hashing with Integer Factorization as Proof of Work. Forked from bitcoin V22.0.,,,,https://www.google.com/url?q=https%3A%2F%2Ftwitter.com%2FFACT0RN&sa=D&sntz=1&usg=AOvVaw0BdRfY4zqQMy3pneZ3jbaI,,,,https://github.com/FACT0RN,,
Fairblock,9hptcu,https://www.fairblock.network/,NOT_DEPIN,,,,"Fairblock is a blockchain infrastructure and framework that focuses on conditional decryption and programmable privacy, providing users and developers with enhanced privacy and security for on-chain applications.",,,,,1195755103735513138,,,,,
Fantom Foundation,692g5w,https://www.fantom.foundation/,NOT_DEPIN,,,,"Fantom is a decentralized, open-source, smart contract platform that aims to provide fast, secure, and scalable infrastructure for decentralized applications (dApps).",,,,,582931087005843466,,,,,
FanTV,yoxura,https://fantv.world/,SENSORS,,,,FanTV is an app-based Watch to Earn Platform that allows users to watch ad-free trending videos and earn rewards.,,EV3 Sal,,,,,,,,
Fanztar,94944x,https://fanztar.com/,AI,,,,"Fanztar empowers creators to build their fan communities and enable fans to own a share in their success, giving fans an opportunity to become a part of a Creator exclusive community.",Software,,,https://twitter.com/i/flow/login?redirect_after_login=%2Fjoin_fanztar,,,,,https://www.linkedin.com/company/fanztar/about/,
Farcaster,qbrxm3,https://www.farcaster.xyz/,NOT_DEPIN,,,,Farcaster is a sufficiently decentralized protocol for building social apps.,Social,,,https://twitter.com/farcaster_xyz,,https://t.me/farcasterdevchat,,https://github.com/farcasterxyz,https://www.linkedin.com/company/farcaster/,
Farmsent,xxh0a4,https://www.farmsent.io/,NOT_DEPIN,POLYGON,FARMS,farmsent,Farmsent is a decentralized network of farmers to enhance global food commerce and security.,,EV3 Sal,,https://twitter.com/farmsent_io,,,,,,
Faye,pddr3z,https://www.faye.xyz/,AI,,,,"Faye is a self-learning AI chatbot for accurate, relevant, and on-chain troubleshooting of smart contracts.",,,,https://twitter.com/faye_digital,,,,,https://www.linkedin.com/company/we-eat-software/,
FederalAI,4vhyme,https://federalai.io/,AI,ETHEREUM,FEDAI,federal-ai,"Federal AI is a platform that democratizes AI model training, prioritizing data privacy and security while fostering decentralized collaboration across various industries for transformative advancements.",,ZZ,,https://twitter.com/FederalAI_io,,,,,,
FEDML,913hpf,https://www.fedml.ai/,AI,,,,"FEDML provides the generative AI platform and foundation models to enable developers and enterprises to build and commercialize their own generative AI applications easily, scalably, and economically.",,ZZ,,https://twitter.com/fedml_ai,1011343758463356928,,https://medium.com/@FedML,https://github.com/FedML-AI/FedML,https://www.linkedin.com/company/79483881/,
Felt,9s2i5w,https://feltlabs.ai/,AI,,,,Tools for privacy preserving data science. Run machine learning or simple analytics on distributed data.,,EV3 Sal,,,927873274136891392,,,,,
Fetch.ai,mhpovr,https://fetch.ai/,AI,ETHEREUM,FET,fetch-ai,Fetch.ai is a Blockchain-based AI and ML platform connecting devices for market creation and data value addition.,,,,https://twitter.com/Fetch_ai,1141305890796994651,https://t.me/fetch_ai?utm_source=website,https://medium.com/fetch-ai,https://github.com/fetchai?utm_source=Website,http://www.linkedin.com/company/fetch-ai,
Fhenix,k7ct7d,https://www.fhenix.io/,NOT_DEPIN,ETHEREUM,,,Fhenix is the first Fully Homomorphic Encryption (FHE) powered L2 to bring computation over encrypted data to Ethereum.,,EV3 Sal,,,1113764193670275124,,,,,
Filebase,ush02g,https://filebase.com/,COMPUTE,,,,Filebase is a reliable IPFS pinning service that provides secure and efficient file storage and management.,Storage,,,https://twitter.com/filebase,827386332795371560,,,https://github.com/filebase,https://linkedin.com/company/filebase,
Filecoin,r1uv9t,https://filecoin.io/,COMPUTE,FILECOIN,FIL,filecoin,"Filecoin is the largest decentralized data storage marketplace, protocol, & cryptocurrency.",,,,https://twitter.com/Filecoin,,https://t.me/filecoinio,https://filecoin.io/blog/,https://github.com/filecoin-project,,
FileStar,h7mk5k,https://filestar.net/en,COMPUTE,,STAR,filestar,"FileStar is a Web 3.0 decentralized storage, verifiable computation, and measurable bandwidth network infrastructure.",Storage,ZZ,,https://twitter.com/FileStarProject,,https://t.me/filestarofficial,https://filestarofficial.medium.com/,https://github.com/filestar-project,,
Fileverse,gtzdge,https://fileverse.io/,COMPUTE,,,,On-chain people and communities deserve on-chain tools for private communication and collaboration.,,EV3 Sal,,,,,,,,
FilSwan,v3ycrj,https://www.filswan.com/homepage,COMPUTE,,,,FilSwan: web3 infrastructure for dApp development.,Storage,,,https://twitter.com/swan_chain,867879887871672331,https://t.me/swan_chain/1,https://medium.com/@swanchain,https://github.com/filswan,https://www.linkedin.com/company/swancloud,
Final Autoclaim,equ0rp,https://spacetoken.tech/,NOT_DEPIN,BINANCE,SPACE,space-token-bsc,Final Autoclaim is a user-friendly cryptocurrency faucet that allows users to claim various cryptocurrencies through automated and easy-to-use processes.,,,,,837632716862128131,,,,,
Findora,rxpqem,https://findora.org/,BLOCKCHAIN_INFRA,NATIVE,FRA,findora,Findora is a Layer-1 protocol delivering zero-knowledge solutions to Web3. Findora integrates two ledgers into a single chain: an EVM ledger for interoperability and a UXTO ledger optimized for zk operations.,,ZZ,,,,,,,,
Finterest,e1k2h0,https://finterest.gitbook.io/product-docs/,NOT_DEPIN,,,,Finterest is a decentralized borrowing/lending protocol on The Internet Computer built to support native Bitcoin.,DeFi,,,https://twitter.com/finterestICP,,,https://medium.com/finteresticp,,https://www.linkedin.com/company/finteresticp,
Firethree,gdo61v,https://www.firethree.xyz/,BLOCKCHAIN_INFRA,,,,Products and solutions for every stage of your app development journey!,,,,https://twitter.com/_firethree,,,,,,
First Studio,9psqih,https://firststudio.ai/,AI,BITTENSOR,,,The First AI Studio built on top of the #bittensor network that will onboard 10 million users.,,EV3 Sal,,,,,,,,
Firstbatch,xjzev4,https://www.firstbatch.xyz/,BLOCKCHAIN_INFRA,,,,FirstBatch is building collaboration and user-centric tools for AGI.,,ZZ,,https://twitter.com/firstbatchxyz_?lang=en,1088019643618308200,,https://medium.com/@FirstBatchLabs,https://github.com/firstbatchxyz,https://www.linkedin.com/company/firstbatchxyz,
FirstTensor,3b72sd,https://firsttensor.com/,AI,,,,FirstTensor is a community-powered Bittensor Validator.,,,,https://twitter.com/firsttensor,1086605920802459691,https://t.me/firsttensor,,,,
Fishcoin,0uzrya,https://fishcoin.co/,SENSORS,,,,Fishcoin is a blockchain based traceability and data ecosystem designed specifically for the global seafood industry.,Environmental,,,https://twitter.com/i/flow/login?redirect_after_login=%2FFishcoinNetwork,,,https://medium.com/fishcoin,,http://www.linkedin.com/company/fishcoin,
Fission,dkaff9,https://fission.codes/,BLOCKCHAIN_INFRA,,,,Fission builds open source protocols and managed solutions that empower developers to construct scalable and secure software applications.,,,,https://twitter.com/FISSIONcodes,478735028319158273,,https://fission.codes/blog/,https://github.com/fission-codes/,https://ca.linkedin.com/company/fissioncodes,
Flai,6j3y7z,https://www.flai.ai/,WIRELESS,,,,Flai develops a web-based application that automatically turns raw geospatial data into meaningful information.,,,,,,,https://www.flai.ai/blog,,http://www.linkedin.com/company/flai-ai,
Flare,8u08fw,https://flare.network/,BLOCKCHAIN_INFRA,ETHEREUM,FLR,flare,"Flare is the blockchain for data, providing developers with secure decentralized access to high-integrity data from other chains and the internet. ",,,,https://twitter.com/FlareNetworks,743422808499028049,https://t.me/FlareNetwork,https://medium.com/flarenetwork,https://github.com/flare-foundation,https://www.linkedin.com/company/flarenetwork/,
Fleek,7f3dsw,https://fleek.network/,COMPUTE,,,,"Fleek Network is optimized to facilitate the deployment and running of performant, geo-aware decentralized web and edge services.",,EV3 Sal,,,965698989464887386,,,,,
Flex,nxn4fc,https://flexwallet.xyz/,NOT_DEPIN,,,,Digital wallet from the future,,,,,,,,,,
fliggs,gkt0ei,https://fliggs.com/en,WIRELESS,,,,"Fliggs Mobile is bridging Web3 and Telco, elevating mobile connectivity with a wallet, a digital ID, and loyalty rewards.",,,,https://twitter.com/fliggs_mobile,,,,,https://www.linkedin.com/company/fliggs/,
Flock Safety,kcetq1,https://www.flocksafety.com/,NOT_DEPIN,,,,Developer of camera technology designed to capture images to eliminate crime while protecting privacy.,,,,https://twitter.com/Flock_Safety,,,,,https://www.linkedin.com/company/flock-safety/,
Flock,ruqwx5,https://flock.io/,AI,,,,FLock.io is a decentralized AI training and finetuning platform.,,EV3 Sal,,,977200106531082240,,,,,
Flow,g4borf,https://flow.com/,NOT_DEPIN,,FLOW,flow,"Flow is a permissionless layer 1 blockchain, empowering developers to create limitless Web3 apps for mainstream adoption",L1/L2,,,https://twitter.com/flow_blockchain,613813861610684416,,https://flow.com/blog,https://github.com/onflow,https://www.linkedin.com/company/flow-blockchain/,
Flowcarbon,hyh5ix,https://www.flowcarbon.com/,NOT_DEPIN,,GNT,,Flowcarbon is a blockchain-enabled carbon credit trading platform leveraging new technology and innovative financing structures to scale the voluntary carbon market (VCM).,,,,https://twitter.com/weareflowcarbon,,,,https://github.com/flowcarbon,https://www.linkedin.com/company/flowcarbon/,
Flowgate,xwklug,,BLOCKCHAIN_INFRA,,,,"Flowgate is building a fully on-chain Oracle infrastructure that aggregates market data from multiple liquidity sources, reducing latency and cost for DeFi apps.",Oracle,ZZ,,https://twitter.com/Flowgate_sol,,,,,,
Fluence,ul9uzl,https://fluence.network/,COMPUTE,ETHEREUM,FLT,fluence-2,Fluence - decentralized platform for creating peer-to-peer apps.,,,,https://twitter.com/fluence_project,483968379833679873,https://t.me/fluence_project,https://medium.com/fluence-network,https://github.com/fluencelabs,http://www.linkedin.com/company/fluence-labs,
Fluent,5sn1ou,https://fluentlabs.xyz/,NOT_DEPIN,,,,Fluent is a general-purpose zkWasm L2 that brings web2’s favorite execution environment onto web3’s most permissionless blockchain. Fluent offers developers the freedom to build composable apps in almost any programming language on Ethereum.,,ZZ,,,,,,,,
Flurry,0l3hoz,https://www.flurry.finance/,NOT_DEPIN,ETHEREUM,FLURRY,flurry,Flurry Finance is a protocol that runs on multiple blockchains and specializes in the DeFi market.,,,,https://twitter.com/FlurryFi,896956264590999553,https://t.me/FlurryFinance_Official,https://medium.com/flurry-finance,,https://www.linkedin.com/company/flurryfinance/about/,
Flux,0t3lhn,https://runonflux.io/,COMPUTE,NATIVE,FLUX,zelcash,"Flux is a decentralized Web3 cloud infrastructure comprised of user-operated, scalable, and globally distributed computational nodes.",,ZZ,,https://twitter.com/RunOnFlux?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,404415190835134464,https://t.me/runonflux,https://fluxofficial.medium.com/,https://github.com/RunOnFlux,https://www.linkedin.com/company/flux,
FluxBeam,t5hmj6,https://fluxbeam.xyz/,NOT_DEPIN,,,,FluxBeam is a Next Generation Solana DEX.,Telegram,,,https://solana.com/discord,,https://solana.com/telegram,https://solana.com/news,https://solana.com/github,http://www.linkedin.com/company/solanalabs,
Fluxbot,ld3i07,https://fluxbot.xyz/,NOT_DEPIN,,,,Fluxbot Trading is a Solana-based telegram bot.,,,,,,,,,,
Flywheel Systems,yus8h6,https://flywheel.systems/,NOT_DEPIN,,,,Flywheel Systems is a strategic infrastructure deployment and marketing expertise provider offering solutions and advice to smart investors to earn passive income through DePIN projects.,,ZZ,,,,,,,,
FMS,o8amjp,https://fmtlol.com/,NOT_DEPIN,POLYGON,FMS,,"FMS is an open-source social and blogging platform that uses web3 technology to power its services. Users can create profiles and share content by posting articles, blogs, images, videos, etc., or join groups with similar interests.",,,,https://twitter.com/fmtlol?lang=en,,,,,,
Foam,olxxfj,https://foam.space/,SENSORS,ETHEREUM,FOAM,foam-protocol,Foam is a blockchain-based platform enabling crowdsourced maps and decentralized location services.,Positioning,,,https://twitter.com/foamspace,,,,https://github.com/f-o-a-m/,http://www.linkedin.com/company/foam-corp,
Fog Works,aqg014,https://fogworks.io/,COMPUTE,,,,Fog Works is a provider of AI-enabling Decentralized Storage Solutions.,Storage,ZZ,,https://twitter.com/fogworksinc/,1046683342025789541,,,,https://www.linkedin.com/company/fog-works,
FOIL,wd2g59,https://foil.network/,BLOCKCHAIN_INFRA,,,,"FOIL is a scalable, interoperable, and multifunctional blockchain network protocol that serves as a platform for creating unique decentralized ecosystems within multi-tier, distributed, autonomous, and dichotomous environments.",L1/L2,ZZ,,https://twitter.com/FoilNetwork,773843041357135882,,,,https://www.linkedin.com/company/foil2/about/,
Fonoster,qn9h4k,https://fonoster.com/,NOT_DEPIN,,,,Fonoster is a free platform for building voice applications and integrating them with your business app.,,,,https://twitter.com/fonoster,1016419835455996076,,,https://github.com/fonoster,http://www.linkedin.com/company/fonoster,
Footprint Analytics,77xj4g,https://www.footprint.network/,NOT_DEPIN,,,,"Footprint Analytics helps analysts, builders, and investors turn blockchain data into insights with accessible visualization tools and a powerful multi-chain API.",,EV3 Sal,,https://twitter.com/Footprint_Data,,,,,,
Forta,jed7z0,https://forta.org/,AI,ETHEREUM,FORT,forta,"Forta is a real-time detection network for blockchain activity, providing alerts to neutralize threats and prevent loss.",,,,https://twitter.com/FortaNetwork,869983523371642921,https://t.me/s/Forta_Network_Official?before=30,,https://github.com/forta-network,http://www.linkedin.com/company/fortafoundation,
Foster Studio,gzq0lf,,NOT_DEPIN,,,,Foster Studio is a platform for creating and selling artist merchandise in the form of Phygital NFTs.,NFTs,,,https://twitter.com/FosterPartners,,,,,https://www.linkedin.com/company/fosterstudios/,
Founder AI,zodjwl,https://oneliner.xyz/,NOT_DEPIN,,,,"Founder AI is an LLM that will channel the collective wisdom of thousands of founder successes and failures to everyone. ",ML,ZZ,,,,,,,,
Foundry,9ngp9i,https://www.mlfoundry.com/,COMPUTE,,,,"Foundry is a new breed of public cloud, powered by an orchestration platform that makes accessing AI compute easier.",,EV3 Sal,,https://twitter.com/mlfoundry,,,,,,
Fr0ntierX,xfunnc,https://www.fr0ntierx.com/,BLOCKCHAIN_INFRA,,,,Fr0ntierX is a blockchain-based cybersecurity company offering data protection and security solutions to enterprises.,,EV3 Sal,,https://twitter.com/FR0NTIER_X,,,,,,
Fraction AI,ehsx57,N/A,AI,,,,"Fraction AI is developing a web3 platform that enables anyone to generate high-quality labelled data for AI models, using blockchain, smart contracts, and gamification",,,,,,,,,,
Freatic,php632,https://freatic.team/,BLOCKCHAIN_INFRA,,,,Freatic is a project focused on developing a decentralized information markets protocol.,,,,https://twitter.com/intent/user?screen_name=freaticteam,,,https://medium.com/@freaticteam,https://github.com/freatic,https://www.linkedin.com/company/freaticteam/,
Freename,bta44y,https://www.freename.io/,NOT_DEPIN,,,,"Freename is a TLD and Domain platform for Web3 that allows users to register and mint their own customized Lifetime Web3 TLDs. ",,,,https://twitter.com/freenameio,1040742304526385293,,https://freename.io/blog/,,https://www.linkedin.com/company/freename/,
FrenRug,ajzp06,https://www.frenrug.com/,AI,,,,Frenrug is an on-chain AI agent that lives in a friend.tech chatroom managing a portfolio of keys; powered by Ritual.,,Sami,,,,,,,,
Friday,iri6ya,https://www.myfriday.io/,NOT_DEPIN,,,,OwnFriday is developing a Mobile App and Protocol that empower users to repossess valuable web2 data and benefit from it directly in web3 by sharing it directly with creators and enterprises.,,,,https://twitter.com/ownfriday,982482496270778419,,https://medium.com/its-friday,,,
friend.tech,w9son4,https://www.friend.tech/,NOT_DEPIN,,,,Decentralized social media app where users tokenize profiles and buy/sell shares based on influence.,,,,,,,,,,
Frigg,ymywqi,https://www.frigg.eco/,NOT_DEPIN,,,,RWA protocol,RWA,EV3 Sal,,,,,,,,
FriggHome,knny04,https://www.frigghome.com/,SENSORS,,,,FriggHome is a decentralized physical infrastructure for blockchain networks that can validate ETH and other PoS crypto through a Plug2Earn device.,,ZZ,,,,,,,,
Frodobots,zsejow,https://www.frodobots.com/,SENSORS,,,,Frodobots is an open real-world racing game with sidewalk robots.,Robotics,,,,943055769157402624,,,,,
Frontier,9ny56c,https://frontier.tech/,NOT_DEPIN,,,,Frontier Research is an independent research and advisory group formed to bridge the gap between fundamental research and commercial products.,,EV3 Sal,,,,,,,,
Fry,jgd2lw,https://www.fryfoundation.com/,SENSORS,ALGORAND,FRY,fryscrypto,Fry Foundation is a decentralized aggregator of decentralized networks.,,,,https://twitter.com/FrysCrypto,1004603899598082069,,,,https://www.linkedin.com/company/fry-foundation/,
Fungi Cloud,btj93l,,BLOCKCHAIN_INFRA,,,,Fungi Cloud is a decentralized data storage and cloud computing company on top of blockchain technology.,Mining,,,,,,,,https://www.linkedin.com/company/fungiprotocol/,
Future Networks,amd7gb,https://futurenetworks.host/,SENSORS,,,,Future Networks is a DePIN deployment services provider that operates in the UK & Europe.,,ZZ,,https://twitter.com/Fut_Networks,,,,,,
FWB,kcidbl,https://www.fwb.help/,NOT_DEPIN,ETHEREUM,FWB,friends-with-benefits-pro,Friends With Benefits is a new kind of social network made up of creatives and builders who believe in the promise of a better internet.,,,,https://twitter.com/fwbtweets,749418486874243212,,,,https://www.linkedin.com/company/fwb-pro/,
FX Land,4z5caf,https://fx.land/,COMPUTE,,,,"FX Land is a decentralized storage network utilizing IPFS, providing secure and encrypted file storage.",Storage,,,https://twitter.com/functionland,735961760464502845,https://t.me/functionland,https://fx.land/blog/,https://github.com/functionland/docs,https://www.linkedin.com/company/functionland/,
FX1,cijdoj,https://fx1.io/,NOT_DEPIN,ETHEREUM,FXI,fx1sports,FX1 is a sports predictions and analytics platform using AI to power the next generation of GambleFi and fan engagement.,,ZZ,,https://twitter.com/FX1Sports,,,,,,
GaGaNode,bdx3sf,https://www.gaganode.com/,COMPUTE,,,,"GaGaNode is a Next generation Decentralized Residential IP + Bandwidth marketplace, that aims to alleviate the global shortage of IPv4 addresses with Web3 technology.",,ZZ,,,,,,,,
GAIMIN,cgb22x,https://www.gaimin.io/,COMPUTE,NATIVE,GMRX,,"GAIMIN is a Web3 gaming infrastructure project strategically positioned at the disruptive intersection of Web3, gaming, and cloud computing that aims to utilize the unused and underused computational resources of the global gaming community. ",,ZZ,,,,,,,,
Galeon,n9g3gb,https://blockchain.galeon.care/,COMPUTE,BINANCE,GALEON,galeon,"Galeon is a collaborative healthcare cryptocurrency driving the creation of a global medical network, leveraging blockchain to generate structured Electronic Health Records, facilitate medical AI training, and fund transformative research.",,ZZ,,,,,,,,
Galileo Protocol,b5sx93,https://www.galileoprotocol.io/,BLOCKCHAIN_INFRA,ETHEREUM,LEOX,leox,The Galileo Protocol is a cutting-edge tokenisation platform that aims to revolutionise the authentication and ownership of luxury goods and real-world assets.,,,,,,,,,,
Galiot,gt13wv,https://www.galiot.io/,WIRELESS,,,,Galiot is a decentralized wireless technology-related services provider dedicated to expanding Helium 5G in Europe and offering innovative Data-as-a-Service solutions.,,ZZ,,https://twitter.com/galiotio?lang=en,,,https://medium.com/@galiot.io,,https://www.linkedin.com/company/galiot-io/?originalSubdomain=se,
Galvan,deusl5,https://www.galvan.health/,NOT_DEPIN,ETHEREUM,IZE,galvan,"Galvan is a blockchain technology-based mental health tracking app that uses AI, CBT, and rewards to help users achieve a healthier state of mind.",,ZZ,,,,,,,,
Galxe,tlwvl7,https://galxe.com/,COMPUTE,ETHEREUM,GAL,galxe,Galxe develops a credential infrastructure that all Web3 developers can access.,,,,,824767871183355954,,,,,
GamerCoin,z2gapv,https://gamercoin.com/en,COMPUTE,ETHEREUM,GHX,gamercoin,GamerCoin is a blockchain-supported application that allows users to exchange desktop computing power for digital goods.,,ZZ,,https://twitter.com/GamerHashCom,460763514357809162,https://gamerhash.com/en/l/l9Nb9,,,,
GameSwift,goko2h,https://gameswift.io/,NOT_DEPIN,ETHEREUM,GSWIFT,gameswift,"GameSwift is a one-stop shop ecosystem(platform, launcher, and infrastructure) for Web3 gaming based on a modular chain and zkEVM technology.",,ZZ,,,,,,,,
Gane,d1s1k3,https://gane.com/,WIRELESS,,,,"Gane is a freemium mobile provider for developing countries where users earn free data, voice, and text by using their mobile wallet and interacting with content.",,EV3 Sal,,,,,,,,
Gateway Network,wwio88,https://www.mygateway.xyz/,NOT_DEPIN,,,,Gateway is a decentralized identity access management protocol that allows users to control and share their data across the web.,Data,ZZ,,https://twitter.com/gateway_xyz,898513755456036925,,,https://github.com/Gateway-DAO,https://www.linkedin.com/company/mygateway/,
GCaller,w5nbgl,https://gcaller.in/,BLOCKCHAIN_INFRA,,,,GCaller is a decentralized caller ID and spam protection platform that rewards users for identifying spam calls.,,ZZ,,https://twitter.com/gcaller_in,,,,,,
Gear,c8xut6,https://gear.foundation/,NOT_DEPIN,,,,"Gear: smart contracts, user-friendly, secure networks, infinite sharding.",,,,https://twitter.com/Gear_Foundation,891063355526217738,https://t.me/gear_tech,https://medium.com/@gear_techs,https://github.com/gear-tech,https://vn.linkedin.com/company/gearinc.,
Geeq,5gczqo,https://geeq.io/,NOT_DEPIN,,,,Geeq is a multi-blockchain platform secured by Proof of Honesty protocol.,,,,https://twitter.com/GeeqOfficial,,https://t.me/GeeqOfficial,https://medium.com/@geeqofficial.crypto,,http://www.linkedin.com/company/geeq,
Gelato,lvwe8x,https://ops.gelato.network/,NOT_DEPIN,ETHEREUM,GEL,gelato,Gelato Network automates smart contract executions across EVM-based blockchains.,,,,https://twitter.com/gelatonetwork?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,https://t.me/gelatonetwork,https://medium.com/@gelatonetwork,https://github.com/gelatodigital,https://no.linkedin.com/company/gelato,
Genaro,5gl2ia,https://genaro.network/en,COMPUTE,ETHEREUM,GNX,genaro-network,"Genaro Network is the first Turing Complete Public Chain with a Decentralized Storage Network, providing blockchain developers with a one-stop solution to deploy smart contracts and store data simultaneously. ",,ZZ,,,,,,,,
Generaitiv,t6ee2u,https://generaitiv.xyz/,AI,ETHEREUM,GAI,generaitiv,Generaitiv: community-driven AI appstore empowering contributors with scalable approaches.,,,,https://twitter.com/generaitiv,1070064707865677864,https://t.me/generaitiv,https://medium.com/@generaitivai,,,
GenesysGo,p01o2s,https://www.shadow.cloud/,COMPUTE,SOLANA,SHDW,genesysgo-shadow,GenesysGo is a decentralized object storage platform for Web3 builders.,Storage,ZZ,,https://twitter.com/genesysgo,830127596355190804,,,https://github.com/GenesysGo/,,
GenLayer,yuwdh7,https://genlayer.com/,AI,,,,GenLayer is a decentralized platform that extends the capabilities of traditional smart contracts with AI by making them intelligent and connected to the internet.,,EV3 Sal,,https://twitter.com/GenLayer,,,,,,
Genomes.io,lfu9ni,https://genomes.io/,AI,ETHEREUM,GENE,genomesdao,"Genomes.io is a biotech DAO monetizing genomic data securely, privately & audibly via DeFi.",,,,https://twitter.com/genomesdao,844928657407606786,,,https://github.com/genomesio,https://www.linkedin.com/company/genomes-io/,
Genopets,axuyme,https://www.genopets.me/,SENSORS,SOLANA,GENE,genopets,"Genopets is a Free-to-Play, Move-to-Earn NFT game on Solana that makes it fun and profitable to live an active lifestyle.",Health & Fitness,ZZ,,https://twitter.com/genopets,,,,,,
Gensyn,2hl71l,https://www.gensyn.ai/,COMPUTE,,,,"Gensyn is a decentralized machine learning compute network that allows developers to train deep learning models over a network of connected devices, from data centers with excess capacity to personal laptops with latent GPUs.",,ZZ,,https://twitter.com/gensynai,,,,,,
Geodnet,scli9r,https://geodnet.com/,SENSORS,POLYGON,GEOD,geodnet,Geodnet is a decentralized network of GNSS reference stations.,Positioning,,,https://twitter.com/geodnetinfo?lang=en,912073116413476875,https://t.me/geodnet,https://medium.com/geodnet/geodnet-revolutionizes-the-global-positioning-industry-with-real-world-web3-reference-network-21183b0ad7eb,https://github.com/geodnet/whitepaper,https://www.linkedin.com/company/geodnet/,
GIANT,jl19aq,https://giantprotocol.org/,WIRELESS,POLKADOT,,,GIANT is a blockchain protocol aiming to democratize access to internet and financial services by tokenizing bandwidth.,,,,https://twitter.com/giantprotocol,935300367632179210,https://t.me/giantprotocol,,https://github.com/topics/giant,http://www.linkedin.com/company/giantconnectapp,
Gitopia,ebks77,https://gitopia.com/,NOT_DEPIN,,LORE,gitopia,"Gitopia is the next-generation Code Collaboration Platform fuelled by a decentralized network with an interactive token economy to optimize the open-source software development process through collaboration, transparency, and incentivization.",,ZZ,,https://twitter.com/gitopiaDAO,746365205277179907,https://t.me/Gitopia,https://blog.gitopia.com/,,https://www.linkedin.com/company/gitopia/,
GitPOAP,2fl69i,https://www.gitpoap.io/,BLOCKCHAIN_INFRA,,,,GitPOAP - recognizing contributions on GitHub with POAP issuance,,,,https://twitter.com/gitpoap,918207795113885737,,https://medium.com/gitpoap,https://github.com/gitpoap,http://www.linkedin.com/company/gitpoap,
Giza,nlkbyo,https://www.gizatech.xyz/,BLOCKCHAIN_INFRA,,,,Giza is a collaborative platform for the development of AI.,,ZZ,,https://twitter.com/gizatechxyz?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,1070370565761802372,,,https://github.com/maxgillett/giza,https://www.linkedin.com/company/giza-systems,
Glacier Robots,basiuw,https://endwaste.io/,NOT_DEPIN,,,,"Glacier is developing next-generation, AI-powered sorting robots for recycling facilities.",,EV3 Sal,,https://twitter.com/glaciertechinc,,,,,,
Glacier,4fstgv,https://www.glacier.io/,NOT_DEPIN,,,,"Glacier is building a composable, modular, and scalable L2 data network for large-scale Dapps.",L1/L2,,,https://twitter.com/GlacierNPS,1049347993817579570,https://t.me/s/glacier_news,,,https://www.linkedin.com/company/endwaste-,
GLIF,mw0azh,https://www.glif.io/en,NOT_DEPIN,,,,Glif is a developer of Filecoin's Liquid Staker which gives FIL holders a way to earn yield on their assets.,,,,https://twitter.com/glifio,,,,,,
Glitter Protocol,hvnixv,https://glitterprotocol.io/,NOT_DEPIN,,,,Glitter Protocol is a decentralized data indexing protocol that provides a way for users to earn revenue from their data.,,ZZ,,https://twitter.com/GlitterProtocol,,,,,https://www.linkedin.com/company/glitterprotocol/about/,
Glow,m5pwg0,https://www.glowlabs.org/,ENERGY,ETHEREUM,GLOW,,"GlowGreen leads the forefront of climate sustainability with novel game theory and incentive design to champion a sustainble, technology-empowered future.",,,2021,https://twitter.com/glowFND,1126887739795709982,,https://glowlabs.org/blog,https://github.com/glowlabs-org,https://www.linkedin.com/company/glow-intl/,
Glowstick,pztili,https://www.alpha.glowstick.xyz/,NOT_DEPIN,,,,Glowstick is a user-friendly tool enabling easy 3D environment creation and storytelling.,Gaming,,,,917476252443623435,,,,,
GNUS.AI,ms5m3y,https://www.gnus.ai/,COMPUTE,,GNUS,,"GNUS.AI is a cutting-edge decentralized computing platform for businesses, games, and AI companies, with a built-in blockchain payment system.",,ZZ,,https://twitter.com/gnusai,,,,,,
GNY,wjtb2f,http://www.gny.io/,AI,ETHEREUM,GNY,gny,"GNY is a ML predictive platform for blockchain, identifying patterns & predicting user behavior for targeted messaging.",,,,https://twitter.com/gny_io,,,https://medium.com/@james_62282,https://github.com/GNYIO,http://www.linkedin.com/company/gny-io,
Go!,4h5jhz,https://t.co/QiGg27OEIj,BLOCKCHAIN_INFRA,,,,Go! is a blockchain powering universal basic services.,Health & Fitness,,,https://twitter.com/GoHealthHero,875930739194093618,https://t.me/gobyhealthhero,,,,
Golem,j4istz,https://www.golem.network,COMPUTE,ETHEREUM,GLM,golem,Golem is a decentralized computing marketplace. It consists of a network of nodes that implement the Golem network protocol.,,,,,684703559954333727,,,,,
GoMutual,wwmjky,https://www.gomutual.io/,NOT_DEPIN,,,,GoMutual is a blockchain-based decentralized mutuality protocol offering a non-insurance alternative to traditional auto insurance.,,ZZ,,https://twitter.com/go_mutual,,https://t.me/gomutual,,,https://www.linkedin.com/company/gomutual2022/,
GonnaMakeIt,yts967,https://gonnamakeit.io/,NOT_DEPIN,,,,GonnaMakeIt is a social network that allows competitors and organizers to earn money through event betting.,Social,,,https://twitter.com/GonnaMakeItNFTs,892004089737646151,https://t.me/GonnaMakeitNFTs,,https://github.com/energicryptocurrency,https://www.linkedin.com/company/gonnamakeitnfts/,
GooseAI,in3vdx,https://goose.ai/,NOT_DEPIN,,,,"GooseAI is a fully managed NLP-as-a-Service, delivered via API.",ML,ZZ,,https://twitter.com/gooseai_NLP,,,,,,
GooseFX,1qhz26,https://www.goosefx.io/,NOT_DEPIN,SOLANA,GOFX,goosefx,Solana DeFi,,Connor,,,,,,,,
GoPlus,02wkqh,https://gopluslabs.io/,NOT_DEPIN,,,,"GoPlus Security is the security data infrastructure layer of Web3. It provides open, permissionless, user-driven security services.",,EV3 Sal,,https://twitter.com/GoplusSecurity,,,,,,
GoQii,tkkrfm,https://goqii.com/in-en,SERVICES,,,,GOQii is dedicated to enabling a permanent shift to a healthier lifestyle with the combination of advanced wearable technology.,,,,https://twitter.com/GOQii,,,,,,
Gora,x4c5qz,https://www.gora.io/,BLOCKCHAIN_INFRA,,,,Gora is a decentralized Oracle network built on Algorand.,Oracle,ZZ,,https://twitter.com/goranetwork,913461245108183090,https://t.me/GoraNetwork,,,http://www.linkedin.com/company/goranetwork,
Gpu.audio,qr6aiw,https://www.gpu.audio/,NOT_DEPIN,,,,GPU Audio is a platform for audio processing on GPUs.,GPUs,,,https://twitter.com/gpuaudio,930188443282198589,,https://www.linkedin.com/company/gpuaudio/,,,
GPU.Net,a3fzi6,https://www.gpu.net/,COMPUTE,,,,"United GPU infrastructure that can be utilized for highly optimized 3D rendering, animation, VFX, generative AI, foundation models, LLM training and cryptocurrency mining.",,W. L.,,https://twitter.com/gpunet,1083646475608784907,https://t.me/brahm_gan,https://medium.com/@GPUnet,https://medium.com/@GPUnet,,
GPUtopia,lj3v06,https://gputopia.ai/,COMPUTE,,,,GPUtopia is a marketplace for decentralized GPU compute and related AI services.,,,,https://twitter.com/GPUtopia,1157469556768514068,,https://gputopia.ai/blog,,,
Grand Base,ljrs4j,https://grandbase.io/,NOT_DEPIN,ETHEREUM,GB,grand-base,"Grand Base Protocol is a decentralized finance (DeFi) platform that allows users to create, trade, and stake synthetic assets, known as gAssets. ",,,,https://twitter.com/grandbase_fi,1160639448573284513,,https://medium.com/@grand.base,,,
Grape,a842rq,https://grap3.com/,BLOCKCHAIN_INFRA,ETHEREUM,GRP,grape-2,"Grape is a decentralized layer one ecosystem with key features that include VINE, a high-speed distributed ledger; ANNE, an AI engine simplifying smart contract and DApp development; and a Decentralized Cloud Storage.",,ZZ,,https://twitter.com/Grap3Inc,,,,,,
Graphlinq,ofzalk,https://graphlinq.io/,NOT_DEPIN,ETHEREUM,GLQ,graphlinq-protocol,The GraphLinq Protocol is designed to make it easy for users to create and deploy automation on-chain & off-chain without having to code.,,,,https://twitter.com/graphlinq_proto,,https://t.me/graphlinq,https://graphlinq.medium.com/,https://github.com/GraphLinq,https://www.linkedin.com/company/graphlinq-protocol/about/,
Grass,9qbidj,https://www.getgrass.io/,AI,,,,"Grass by Wynd Network is a transparent node marketplace enabling users to earn passive income by renting out their IP address, used for collecting datasets to train AI models.",,,,https://twitter.com/getgrass_io,,,https://medium.com/@wyndnetwork/,,https://www.linkedin.com/company/wynd-technologies-inc./,
Graviton,udwaws,https://graviton.xyz/,NOT_DEPIN,COSMOS,GRAV,graviton,"Graviton provides Web3 tools and infrastructure that allows artists to reach fans, advertise and monetize their work. NFT Torrent is a free decentralized storage solution for torrent enabled NFTs.",,,,https://twitter.com/Graviton_XYZ,1205739617693859900,,https://medium.com/graviton-xyz,https://github.com/GravitonINC,https://www.linkedin.com/company/graviton-xyz/?originalSubdomain=pr,
Gravvity,rxjew2,https://www.gravvity.ai/,NOT_DEPIN,,,,"Gravvity is building a gamified shopping/marketing and product testing platform, using the swipe model from dating apps while providing retailers and brands with a new data set on consumer tastes and a marketing channel that drives sales.",,ZZ,,,,,,,,
Green Fungible Energy,q3nyjk,https://www.gfe.foundation/,ENERGY,,GFE,,Green Fungible Energy (GFE) is an innovative platform tokenizing green energy to offer a sustainable investment opportunity that aligns environmental benefits with economic incentives.,,EV3 Sal,,,,,,,,
GreenPower,6t7pf0,https://www.greenpowern.com/,ENERGY,,,,GreenPower is a decentralized network of global sustainability activists.,,ZZ,,https://twitter.com/Greenpowertrus,978985389857570826,,https://medium.com/@marketing_84129,https://github.com/laurentphilippe/greenpower,https://au.linkedin.com/company/greenpower-australia,
Greensparc,j8knk9,https://www.greensparc.com/,COMPUTE,,,,Greensparc: Sustainable computing and ESG analytics.,"Environmental, Data",,,https://twitter.com/greensparc,,,https://www.greensparc.com/,,https://www.linkedin.com/company/greensparc/,
Gridcoin,u7p8wi,https://gridcoin.us/,COMPUTE,,GRC,gridcoin-research,"Gridcoin is an open source cryptocurrency that rewards volunteer computing for science through the BOINC platform and Folding@home. BOINC is an open source platform for volunteer computing that lets individuals use their computers & phones to help science research. ",,,,https://twitter.com/GridcoinNetwork,211637812968161280,https://t.me/gridcoin,,https://github.com/gridcoin,https://www.linkedin.com/company/gridcoin/,
Gridnet,my4p81,https://gridnet.org/,COMPUTE,,,,"GRIDNET OS is developing the first decentralized Operating System. The decentralized operating system aims to allow for user experience resembling the one known from DOS, LINUX, Windows and Mac OS X centralized operating systems.",,,,https://twitter.com/gridnetproject?lang=en,1159561046730735668,,,https://github.com/GRIDNETOS/GRIDNETOS,,
Griffy,4loe4v,https://griffy.app/,NOT_DEPIN,,,,Griffy is a poll-based prediction markets protocol.,Prediction Market,,,,,,,,,
Grove,ibr4u0,https://www.grove.city/,BLOCKCHAIN_INFRA,,,,"Backed by thousands of independent, globally distributed nodes, Grove enables teams to deliver a multi-chain user experience at scale.",,EV3 Sal,,,824324475256438814,,,,,
Growfitter,8ve4hw,https://www.growfitter.com/,SERVICES,,,,Growfitter is a gamified digital health reward platform that adds financial benefits to your physical activity.,Health & Fitness,,,https://twitter.com/growfitter?lang=en,,,http://www.linkedin.com/company/growfitter.com,,,
Guardian AI,dcth80,,AI,,,,Guardian AI is a network that safeguards DAOs and multisigs with decentralized AI agents.,,,,,,,,,,
Gun.Eco,fk3mfi,https://gun.eco/,BLOCKCHAIN_INFRA,,,,Gun.Eco is a decentralized distributed graph database engine for developers.,RPC/Indexing,ZZ,,https://twitter.com/databasegun?lang=en,,,,https://github.com/topics/gunjs,https://www.linkedin.com/company/gun-io,
Hacken,xvra0g,https://hacken.ai/,AI,ETHEREUM,HAI,hacken,"HackenAI is a blockchain cybersecurity application that protects users’ digital assets as well as incentivizes them to learn cybersecurity best practices. ",,ZZ,,,,,,,,
Hajime AI,8qt9zg,https://linktr.ee/hajimeai,COMPUTE,SOLANA,HJM,,"Hajime.AI is a decentralized P2P EdgeAI network, connecting idle edge devices efficiently to democratize access to AI resources, serving as a global incubator for small and medium AI startups.",ML,ZZ,,https://twitter.com/hajime__ai,,,,,,
Hal,686w74,https://chatwithhal.vercel.app/,COMPUTE,,,,Hal is a chatbot built on BitTensor.,,,,https://chatwithhal.vercel.app/platforms/twitter,1110297556606533744,https://chatwithhal.vercel.app/platforms/telegram,,,https://linkedin.com/company/vercel,
Halliday,vq2wa3,https://www.halliday.xyz/,BLOCKCHAIN_INFRA,,,,"Halliday provides a programmable ERC-4337 Smart Accounts that are fully non-custodial, built to scale, and most importantly, designed specifically for games.",,,,https://twitter.com/HallidayHQ,996214840882372639,,https://medium.com/@HallidayHQ,,https://www.linkedin.com/company/halliday/,
Handshake,m9gkfk,https://handshake.org/,NOT_DEPIN,,HNS,handshake,"Handshake is a decentralized, permissionless naming protocol where every peer is validating and in charge of managing the root DNS naming zone.",,,,https://twitter.com/hns,822591034202521641,https://t.me/handshake_hns,,https://github.com/handshake-org/hsd,https://www.linkedin.com/company/hns-handshake/,
Hapi,um75jm,https://hapi.one/,NOT_DEPIN,ETHEREUM,HAPI,hapi-one,Hapi Protocol: Cross-chain protocol for DeFi security.,DeFi,,,https://twitter.com/i_am_hapi_one,854680817661640754,https://t.me/hapiHF,https://medium.com/i-am-hapi,https://github.com/HAPIprotocol,https://www.linkedin.com/company/hapi-protocol/,
Harvest,gh0bso,https://goharvest.app/,NOT_DEPIN,,,,"Harvest is the world's first Tokenized Natural Resource Marketplace that will feature land, cattle, and other natural investments.",,ZZ,,https://twitter.com/HarvestMkpl,,,,,,
HashMind,8is5b3,https://hashmind.tech/,COMPUTE,ETHEREUM,HASH,,HashMind aims to revolutionize DePIN and bridge off-chain value to on-chain users. Their decentralized platform on the Ethereum mainnet primarily focuses on two core features: Cloud Computing/VM Service and Protocol-Owned Nodes/Miners(PON/POM).,,ZZ,,,,,,,,
HashMix,5v5xcz,https://www.hashmix.org/en/#intro,NOT_DEPIN,,,,"HashMix is a next-generation hashrate tokenization and marketplace protocol. It allows anyone to buy, sell, lend, and swap mining power for various PoW blockchains in a decentralized way.",,ZZ,,https://twitter.com/HashMixOfficial,1036550293455917096,https://t.me/HashMixChannel,https://hashmix.medium.com/,https://github.com/HashMixProject,,
Haven,29gzf9,,COMPUTE,,XHV,haven,Haven partners with Anchorage to provide secure staking services for Filecoin tokens.,Mining,,,,,,,,,
Healthblocks,qu45sj,https://www.healthblocks.ai/,SENSORS,IOTEX,,,HealthBlocks is a decentralized health-oriented community that rewards users for a healthy lifestyle.,Health & Fitness,,,https://twitter.com/HEALTHBLOCINC,,,,,https://www.linkedin.com/company/healthblocks-inc,
Healthtracka,mq0qgk,https://www.healthtracka.com/,BLOCKCHAIN_INFRA,,,,Healthtracka is a health tech startup decentralizing lab testing in Africa with at-home testing and digital results.,Health & Fitness,,,https://twitter.com/healthtracka?lang=en,,,https://blog.healthtracka.com/,,https://www.linkedin.com/company/healthtracka/,
heata,mcke93,https://www.heata.co/,ENERGY,,,,Heata is a green compute network that uses wasted heat from computers to warm water for homes.,,,,https://twitter.com/heatacompute,,,https://medium.com/@heata_cloud_compute,,https://www.linkedin.com/company/heatacompute/,
Hedera,zkb0bw,https://hedera.com/,NOT_DEPIN,NATIVE,HBAR,hedera,"Hedera is a decentralized, open-source, proof-of-stake public ledger that utilizes the leaderless, asynchronous Byzantine Fault Tolerance (aBFT) hashgraph consensus algorithm.",,,,https://twitter.com/hedera,373889138199494658,https://t.me/hederahashgraph,https://hedera.com/blog,https://github.com/hashgraph,https://www.linkedin.com/company/hashgraph/,
Hedgehog,r7jfzw,https://githedgehog.com/,NOT_DEPIN,,,,Hedgehog enables Cloud Native apps on edge compute and distributed cloud infrastructure.,,ZZ,,https://twitter.com/githedgehog,,,,https://github.com/githedgehog,https://www.linkedin.com/company/githedgehog/,
Heliotics,9nzov6,https://www.heliotics.com/,WIRELESS,,,,Heliotics provides a complete portfolio of Internet of Things (IoT) solutions leveraging existing LoRaWAN and NB-IoT network coverage and smart sensors integrated into a fully customized platform.,,EV3 Sal,,,,,,,,
Helium,5bm99m,https://www.helium.com/,WIRELESS,SOLANA,HNT,helium,"Helium is a decentralized network of networks with Mobile, IoT, & other subnetworks.",Mobile,,,http://twitter.com/helium,404106811252408320,https://telegram.me/s/HELIUM,https://heliuminc.medium.com/,https://github.com/helium,http://www.linkedin.com/company/heliumnetwork,
Helius,kj3v3r,https://www.helius.dev/,BLOCKCHAIN_INFRA,,,,Helius is the ultimate developer platform for building on Solana.,RPC/Indexing,,,https://twitter.com/heliuslabs,992616840251584633,--,https://www.linkedin.com/company/heliusapi/,https://www.helius.dev/blog,https://github.com/helius-labs,
Hello,k4h7w9,https://hello.app/,COMPUTE,ETHEREUM,HELLO,hello-labs,"Hello is a user-controlled, open-source, encrypted, geo-redundant decentralized storage software/ infrastructure.",Storage,ZZ,,https://twitter.com/joinhelloapp,,,,https://github.com/hello-storage,https://www.linkedin.com/company/hellostorage/,
Hera,hrymjy,https://hera.finance/,AI,ETHEREUM,HERA,hera-finance,Hera Finance is a multichain dex aggregator using AI for the widest token range and best route discovery.,,,,https://twitter.com/heraaggregator,963060487203983410,https://t.me/heraaggregator,https://heraaggregator.medium.com/,https://github.com/heraaggregator,,
Hermez,wkap7y,https://hermez.io/,NOT_DEPIN,ETHEREUM,"HEZ ",hermez-network,"Polygon Hermez is an open-source ZK-Rollup optimized for secure, low-cost, and usable token transfers on the wings of Ethereum.",,ZZ,,,,,,,,
Herodotus,aytyhd,https://herodotus.dev/,NOT_DEPIN,,,,Herodotus is building storage-proof technology to enable synchronous cross-layer data access between Ethereum blockchains.,ZK,ZZ,,https://twitter.com/herodotusdev,,,,,,
Heurist,kr9y4z,https://www.heurist.xyz/,AI,,,,"Heurist is a Layer 2 network for AI model hosting and inference, bridging GPU miners with the open-source AI community.",,ZZ,,https://twitter.com/heurist_ai,,,,,,
Hexagon,vwstsz,https://www.hexagonwireless.com/,BLOCKCHAIN_INFRA,,,,Hexagon builds and operates decentralized wireless infrastructure.,Mining,,,https://twitter.com/hexagonab?lang=en,,https://t.me/s/hexsecret?before=27,,https://github.com/hexagonkt,https://www.linkedin.com/company/hexagon_2,
Heylana,bonzt3,,AI,,,,Heylana offers voice-controlled devices for seamless audio on Solana blockchain.,ML,,,,,,,,,
HigherOrder,mue6ls,https://higherorderco.com/,NOT_DEPIN,,,,A tech startup with the goal of building the inevitable massively parallel future of computers.,,EV3 Sal,,,912426566838013994,,,,,
HILO,250jwq,https://www.hilomarket.com/,NOT_DEPIN,ETHEREUM,HILO,hilo,"The HILO dApp is a platform where users can place predictions on virtually anything in the world, all in a fully gamified, fun, and social manner.",,ZZ,,,,,,,,
Hippocrat,36sdcf,https://hippocrat.io/,NOT_DEPIN,ETHEREUM,HPO,hippocrat,Hippocrat is transforming healthcare by empowering individuals to take control of their health data through blockchain and zero-knowledge-proof technologies.,,ZZ,,,,,,,,
Hive,fnhg5q,https://www.hivenet.com/,COMPUTE,,,,hiveNet is a distributed data storage and computing platform that allows users to rent their computing resources and store and process their data in a co-located manner.,Storage,ZZ,,,,,,,,
Hivello,560f30,https://www.hivello.com/,WIRELESS,,,,Hivello is a startup providing Helium hotspots to expand the helium digital network and increase connectivity.,,,,,,,,,http://www.linkedin.com/company/hivello,
Hivemapper,o1qnxa,https://hivemapper.com/explorer,SENSORS,SOLANA,HONEY,hivemapper,Hivemapper is a decentralized network for street-level imaging and mapping.,Positioning,,,https://twitter.com/Hivemapper,715439007764316191,,https://medium.com/@hivemapper,https://github.com/hivemapper,https://www.linkedin.com/company/hivemapper/,
Holium,qaeque,https://www.holium.com/,BLOCKCHAIN_INFRA,,,,"Holium is building Realm, a platform for new social experiences. They're working in message boards/newsfeeds that incentivize quality engagement. ",,,,,,,,,,
Holo,lp1mgw,https://www.holochain.org/,COMPUTE,ETHEREUM,HOT,holotoken,"Holo: P2P, open-source framework for decentralized applications with a focus on privacy and security.",,,,https://twitter.com/holochain,919686143581253632,,https://medium.com/holochain,https://github.com/holochain,http://www.linkedin.com/company/holochain,
Homeqube,qmkwkt,https://www.homeqube.com/,NOT_DEPIN,,QUBE,,"HomeQube is a blockchain-powered gamified commerce for the home value chain industry that serves as a platform for the AEC industry, and homeowners to buy and sell products and services, as well as rent out properties.",,EV3 Sal,,https://twitter.com/QubeToken,,,,,,
Hooked,t03cbk,https://hooked.io/,NOT_DEPIN,BINANCE,HOOK,hooked-protocol,Hooked Protocol is a Web3 social learning platform that offers gamified Learn and Earn experiences.,,,,https://twitter.com/HookedProtocol,1042355429667258378,https://t.me/HookedProtocolOfficial,https://medium.com/hookedprotocolofficial,,https://www.linkedin.com/company/hooked-protocol-2023/about/,
HOPR,rdr178,https://hoprnet.org/,WIRELESS,ETHEREUM,HOPR,hopr,HOPR connects unused internet bandwidth for monetization.,,,,https://twitter.com/hoprnet,679586195529007116,https://t.me/hoprnet,https://medium.com/hoprnet,https://github.com/hoprnet,https://www.linkedin.com/company/hoprnet,
Horizen,951y23,https://www.horizen.io/en,NOT_DEPIN,NATIVE,ZEN,horizen,"Horizen is a layer0 blockchain that underpins the zero-knowledge network of blockchains powered by the largest node system and a massively scalable cross-chain protocol, Zendoo.",,ZZ,,,,,,,,
Hotspotty,8hmhev,https://hotspotty.net/,WIRELESS,,,,Hotspotty is a tool for ordering and managing helium hotspots.,,,,https://twitter.com/hotspotty,874255050929745930,,https://medium.com/hotspotty,https://github.com/hotspotty,https://www.linkedin.com/company/hotspotty-official/,
HPChain,hypd80,https://www.hpchain.ai/,COMPUTE,,HPC,,"HPChain is a cutting-edge platform that merges GPU rendering with blockchain technology, offering a decentralized network for high-performance computing, tailored for AI and cloud gaming applications.",,ZZ,,,,,,,,
Hub3,m2236c,https://hub3.ee/,NOT_DEPIN,,,,"Hub3 is a social-fi platform that enables creators to monetize their content and connect with exclusive communities while utilizing token-gated communities, one key ahead.",,,,https://twitter.com/hub3ee,1056847160597041262,https://t.me/hub3official,,,,
Hubble Protocol,ztuwxq,https://hubbleprotocol.io/,NOT_DEPIN,SOLANA,USDH,usdh,Hubble Protocol is exploring the universe of DeFi on Solana. Hubble begins this by minting USDH through zero-interest borrowing.,,,,https://twitter.com/hubbleprotocol,901231379587670066,https://t.me/hubbleprotocol,https://blog.hubbleprotocol.io/,https://github.com/hubbleprotocol,https://www.linkedin.com/company/hubbleprotocol/,
Huddle01,3r2xgz,https://huddle01.com/,COMPUTE,,,,"Huddle01 enables high-quality audio, video, and live-streaming in 1 day. Our SDKs are Faster, Secure, and Scalable for mobile and web apps.",,EV3 Sal,,,890224574761926756,,,,,
HUMAN Protocol,g2eg60,https://www.humanprotocol.org/,SERVICES,ETHEREUM,HMT,human-protocol,"HUMAN Protocol is a decentralized marketplace for humans to contribute their reasoning, skills, and knowledge to help businesses build global technologies.",,ZZ,,,,,,,,
Human,gs9m0p,https://joinhuman.com/,BLOCKCHAIN_INFRA,,,,"Human is a global financial and identity network with a unique digital ID, currency, and mobile wallet app.",L1/L2,ZZ,,https://twitter.com/humanapp,913558929995358228,https://t.me/joinhmn,,https://github.com/joinhuman,https://linkedin.com/company/joinhmn,
Humanity,8nfsmi,https://cfh.xyz/,NOT_DEPIN,,,,Humanity Protocol introduces a new palm recognition technology for establishing human proofs in Web3 while protecting privacy.,,EV3 Sal,,https://twitter.com/Humanityprot,,,,,,
Humanode,ful6z6,https://humanode.io/,BLOCKCHAIN_INFRA,,HMND,humanode,"Humanode is the first human-powered crypto-biometric network, where 1 human = 1 node = 1 vote.",,,,https://twitter.com/humanode_io,819836895739248700,https://t.me/humanode,https://blog.humanode.io/,https://github.com/humanode-network,https://www.linkedin.com/company/human-node/,
Humans.ai,c7sbzs,https://humans.ai/,AI,ETHEREUM,HEART,humans-ai,Humans.ai is a deep-tech company creating an ethical and scalable AI ecosystem on the blockchain.,,,,https://twitter.com/humansdotai,999302051538411671,https://t.me/humansdotai,https://medium.com/humansdotai,,http://www.linkedin.com/company/humansdotai,
Humanscape,6ixtt2,https://humanscape.io/en/index.html,NOT_DEPIN,,,,Humanscape is a blockchain-based decentralized patient network that can help patients overcome diseases through intellectual and emotional interaction based on community activities.,,,,,,,,,,
Humcen,0bvsxt,https://humcen.com/,NOT_DEPIN,,,,"Humcen is a global IP Aggregator service provider for Innovators, Creators, and Businesses worldwide.",NFTs,,,https://twitter.com/Humceng,,,http://www.linkedin.com/company/humcen-co,,,
Hybrid,pcaj2r,https://buildonhybrid.com/,AI,NATIVE,HYB,,"Hybrid is an EVM-compatible Layer 1 blockchain that integrates a Mixture of Experts (MoE) framework, enabling easy creation and monetization of AI agents in a plug-and-play approach.",Agents,ZZ,,https://twitter.com/buildonhybrid,,,,,,
Hylé,s6qmgb,https://www.hyle.eu/,NOT_DEPIN,,,,"Hylé is the core layer for the modular ZK stack, a secure, decentralized, censorship-resistant settlement layer for all ZK proofs.",ZK,ZZ,,https://twitter.com/hyle_org,,,,,,
Hyperaware,x2zh3j,https://hyperaware.io/,SENSORS,,,,"Hyperaware: a decentralized app for governing connected devices based on location, utilizing IoT and smart contracts.",IoT,,,,,,,,,
Hyperbolic,8heoo1,https://hyperbolic.xyz/,COMPUTE,ETHEREUM,HYPE,hyperbolic-protocol,Hyperbolic Labs is a decentralized microservices platform building the web for Web3.,GPUs,,,https://twitter.com/hyperbolic_labs,,,,,http://www.linkedin.com/company/hyperbolic-labs,
Hypercycle,cs121o,https://www.hypercycle.ai/,NOT_DEPIN,ETHEREUM,HYPC,hypercycle,"Hypercycle is a new blockchain network designed to supply massively scalable, low-cost infrastructure for decentralized AI.",,,,https://twitter.com/hypercycle_ai,,https://t.me/hypercycle_ai,,,https://www.linkedin.com/company/hypercycle-ai/,
HyperGPT,fc3wuj,https://hypergpt.ai/,AI,,HGPT,,"HyperGPT is a decentralized AI marketplace on the blockchain, offering a secure and transparent platform for buying, selling, and exchanging AI applications, enhanced by AI-driven features and smart contract automation.",,,,,1099928259115876432,,,,,
Hyperline,y0wpxj,https://www.hyperline.xyz/,BLOCKCHAIN_INFRA,,,,"Hyperline is a fully managed Blockchain Data Platform for Analytics, Data Science, and Machine Learning workloads.",,,,https://twitter.com/hyperline_xyz,,,,,,
Hypersign,nir8er,https://hypersign.id/,NOT_DEPIN,ETHEREUM,HID,hypersign-identity-token,Hypersign is a decentralized identity layer for the internet.,ZK,,,https://twitter.com/hypersignchain,777575858075861033,https://t.me/hypersignchain,https://www.linkedin.com/company/hyperminetech/,https://hypersign.id/blogs,https://github.com/hypersign-protocol,
Hyperspace,oevejl,https://hyperspace.foundation/,AI,,,,"Hyperspace is a decentralized prompt engine for making AI better, faster, and cheaper at-scale.",,,,https://twitter.com/hyperspaceorg,,,,,http://www.linkedin.com/company/hyperspacegl,
iAgent,1m2jmd,https://www.iagentpro.com/,AI,,AGNT,,"iAgent protocol enables world gamers to train their AI agents from gameplay footage, powered by a decentralized GPU infrastructure network, creating a new on-chain asset class.",,ZZ,,https://twitter.com/iAgentProtocol,,,,,,
Iagon,omgud6,https://iagon.com/,BLOCKCHAIN_INFRA,CARDANO,IAG,iagon,"Iagon is a decentralized cloud network built on Cardano, revolutionizing data storage and processing.",IoT,ZZ,,https://twitter.com/IagonOfficial,837215135999197246,https://t.me/Iagon_official,,,https://www.linkedin.com/company/iagon/,
Icenet,3746aq,https://www.icenet.app/,COMPUTE,,,,"ICE uses 256-bit AES encryption to nullify critical knowledge attacks and disguise all connections as encrypted web traffic. ",,W. L.,,,1079703982320132096,,,,,
IDriss,5w1adt,https://www.idriss.xyz/,NOT_DEPIN,,,,IDriss is a community-owned and operated suite of tools that makes web3 more usable for everyone.,Identity,,,https://twitter.com/IDriss_xyz,895318072179716106,,,,,
iExec,2drl3l,http://iex.ec/,COMPUTE,ETHEREUM,RLC,iexec-rlc,"RLC: Monetize or rent out computational resources, datasets, and applications through iExec.",,,,https://twitter.com/iEx_ec,841605628928458762,https://t.me/iexec_rlc_official,https://medium.com/iex-ec,https://github.com/iExecBlockchainComputing,http://www.linkedin.com/company/iex.ec,
iKnowSpots,46ij86,https://solana.iknowspots.com/,NOT_DEPIN,,,,iKnowSpots is a versatile event hosting & ticketing platform that simplifies the process for organizers and attendees.,NFTs,,,https://twitter.com/iknowspots,,,,,https://www.linkedin.com/company/iknowspots/,
Illuvium,jmqb38,https://illuvium.io/,NOT_DEPIN,ETHEREUM,ILV,illuvium,Illuvium is a video game developer and publisher of AAA play-to-earn crypto games.  Illuvium games are built on the Ethereum blockchain with collectible NFTs across the DeFi metaverse.,,ZZ,,,,,,,,
Imbue,i8a066,https://imbue.com/,NOT_DEPIN,,,,Imbue trains foundation models to create practically useful AI agents.,ML,,,https://twitter.com/imbue_ai,,,http://www.linkedin.com/company/imbue-ai,https://imbue.com/blog/,,
IMGNAI,du3f01,https://imgnai.com/,AI,ETHEREUM,IMGNAI,imgnai,"ImgnAI's flagship product is Nai, an AI bot that turns anything users write into an anime, 3D, or hyper-realistic image.",ML,,,https://twitter.com/imgn_ai,1053754972753383474,https://t.me/imgnAI,https://imgnai.medium.com/,https://github.com/search?q=nirvana+labs,http://www.linkedin.com/company/imgnai,
Immu3,d3nhk5,https://immu3.io/,BLOCKCHAIN_INFRA,,,,Immu3 is an ultimate Web3-Infra stack for building and utilizing on-chain communication applications.,,EV3 Sal,,https://twitter.com/immu3_io,,,,,,
impactMarket,p19y87,https://www.impactmarket.com/,NOT_DEPIN,ETHEREUM,PACT,impactmarket,ImpactMarket enables communities to implement financial inclusive mechanisms like Unconditional Basic Income (UBI).,,,,https://twitter.com/impactmarket,809102018827255868,https://t.me/impactMarketOfficial,https://medium.com/impactmarket,https://github.com/impactMarket,https://www.linkedin.com/company/impactmarket,
Impermax,d869lq,http://www.impermax.finance/,NOT_DEPIN,ETHEREUM,IBEX,impermax-2,Impermax: Cross-chain lending protocol offers yield for lenders and borrowers.,,,,https://twitter.com/ImpermaxFinance,782387768411815947,,https://impermax.medium.com/,https://github.com/Impermax-Finance,http://www.linkedin.com/company/impermax-finance,
Impossible Cloud,qcgu9q,https://www.impossiblecloud.com/,COMPUTE,,,,"Impossible Cloud is a decentralized, enterprise-grade cloud storage platform. It leverages a network of data centers to deliver low-cost object storage with a longer term goal to create a more comprehensive cloud offering.",,EV3 Sal,,,,,,,,
Inco Network,s1rmn5,https://www.inco.network/,NOT_DEPIN,,,,"Inco Network is an EVM Layer-1, utilizing fully homomorphic encryption (FHE) to enable composable and operable confidential states.",,,,,1150292382416392315,,,,,
Inco,5m5fev,https://www.inco.org/,BLOCKCHAIN_INFRA,,,,"Inco is a universal confidentiality layer for Web3, enabling the development of next-generation dApps, and providing confidentiality to existing blockchains.",,ZZ,,https://twitter.com/inconetwork,,,,,,
Incognito,g8ux2k,https://incognito.org/,COMPUTE,ETHEREUM,PRV,incognito-2,Incognito is a privacy hub for privately shielded cryptocurrency transactions.,,ZZ,,https://twitter.com/IncognitoChain,1046631732067184711,https://t.me/incognitochain,https://medium.com/@incognitochain,https://github.com/incognitochain,https://linkedin.com/company/incognitochain,
Indicio,m5wcp4,https://indicio.tech/,NOT_DEPIN,,,,"Indicio.tech is a professional services firm specializing in decentralized identity architecture, engineering, and consultancy.",,,,https://twitter.com/indicioid?lang=en,,,,,https://www.linkedin.com/company/indiciotech/,
Induced,m8lgxf,https://www.induced.ai/,NOT_DEPIN,,,,"Induced AI develops a cloud-based automation solution that allows businesses to input their workflows in plain English, instantly transforming these instructions into pseudo-code for handling repetitive tasks typically managed by back offices.",ML,EV3 Sal,,https://twitter.com/inducedai,,,,,,
Inery,l93p26,https://www.inery.io/,NOT_DEPIN,BINANCE,INR,inery,Provider of a decentralized database management system built on a layer-1 proprietary blockchain solution.,L1/L2,ZZ,,https://twitter.com/ineryblockchain,,https://t.me/inery_blockchain,https://www.inery.io/blog/,,https://www.linkedin.com/company/inery/,
Inference Labs,qi9eg6,https://inferencelabs.com/,AI,,,,"Inference Labs specializes in developing advanced infrastructure and products for AI on web3. Their focus is on AI inference interoperating on the blockchain, which is an essential step for building a future where anyone can access AI without risk.",,ZZ,,https://twitter.com/inference_labs,,,,,,
Inferix,adhfwc,https://inferix.io/,COMPUTE,,,,"Inferix is a Decentralized GPU network for 3D rendering, AI training & inference.",GPUs,Jonah,,https://twitter.com/inferixgpu,1139015527939981453,,,,,
InfraX,3zzj4y,https://infrax.network/,COMPUTE,ETHEREUM,INFRA,infrax,"InfraX is an innovative cloud-computing platform offering GPU and AI resources for rental, lending, and processing, to democratize access to advanced technologies.",,ZZ,,https://twitter.com/InfraX_,,,,,,
Ingonyama,cv434n,https://www.ingonyama.com/,NOT_DEPIN,,,,A next-generation semiconductor company that focus on finding and solving computational bottlenecks in ZKP. ICICLE is an open-source library for ZK acceleration using CUDA-enabled GPUs.,,,,https://twitter.com/Ingo_zk,1063033227788423299,,https://medium.com/@ingonyama,https://github.com/ingonyama-zk,https://www.linkedin.com/company/ingonyama/,
inheritance Art,0a4vnn,https://www.inheritance-art.com/,NOT_DEPIN,ETHEREUM,IAI,inheritance-art,Inheritance Art aims to be the largest NFT/AI-NFT producer and studio for mixed reality and hyper realistic productions.,,,,https://twitter.com/InheritanceArt,961723689324413008,,,,http://www.linkedin.com/company/inheritance-art,
Injective,t2mgs2,https://injective.com/,NOT_DEPIN,ETHEREUM,INJ,injective-protocol,"Injective is a finance-oriented blockchain for DeFi apps: exchanges, lending, and prediction markets.",L1/L2,,,https://twitter.com/Injective_,739552603322450092,https://t.me/joininjective,https://medium.com/injective-labs,https://github.com/InjectiveLabs,http://www.linkedin.com/company/injective-labs,
Inpersona,80egp2,https://www.inpersona.com/,SENSORS,,,,"InPersona is a Web3 Metaverse platform that incentivizes positive health and lifestyle behavior using wearable technology, together with novel HealthFi and SocialFi reward programs.",,ZZ,,https://twitter.com/inPersonaNFT,,,,,,
inSure,l4srh8,https://insuretoken.net/,NOT_DEPIN,ETHEREUM,SURE,insure,"inSure: Community-based crypto insurance, distributed ownership risks, dynamic pricing model.",,,,https://twitter.com/InsureToken,,https://t.me/insuredefi,https://insureteam.medium.com/,https://github.com/inSureToken/SmartContract/blob/master/inSure.sol,http://www.linkedin.com/company/insure-technologies,
INT,c77cyh,https://intchain.io/#/,SENSORS,NATIVE,INT,internet-node-token,INT: Intelligent ecosystem enabling free data flow and privacy in IoT.,,,,https://twitter.com/INTCHAIN,819034774252552262,https://t.me/INTchain_officialtelegram,https://medium.com/int-chain,https://github.com/intfoundation,,
Integritee,6hlk6x,https://www.integritee.network/,BLOCKCHAIN_INFRA,POLKADOT,TEER,integritee,Integritee is a TEE-based secure computation platform.,TEE,,,https://twitter.com/integri_t_e_e,877203191396192316,https://t.me/Integritee_Official,https://www.integritee.network/blog,,http://www.linkedin.com/company/integritee,
Interlock,ogli6i,https://www.interlock.network/,AI,,ILOCK,,Interlock is a blockchain-based security product for individuals and enterprises that leverages blockchain technology and AI and harnesses the power of the crowd to share essential threat intelligence data between consumers and enterprises.,,ZZ,,https://twitter.com/interlockweb3,,,,,,
Internet Computer,edypr6,https://internetcomputer.org/,NOT_DEPIN,NATIVE,ICP,internet-computer,Internet Computer (ICP) is a set of protocols that allow independent data centers around the world to band together and offer a decentralized alternative to the current centralized internet cloud providers.,,,,https://twitter.com/dfinity,,,https://internetcomputer.org/blog,https://github.com/dfinity,https://www.linkedin.com/company/internet-computer-protocol/,
Internxt,fsemso,https://internxt.com/,COMPUTE,ETHEREUM,INXT,internxt,"Internxt is a provider of decentralized, privacy-focused cloud storage services.",,ZZ,,,,,,,,
Intuition,kx9y1a,https://intuition.systems/,NOT_DEPIN,,,,"Intuition is a decentralized platform that enhances decision-making by leveraging crowd-sourced knowledge and attestations, empowering users with a peer-to-peer, data-driven ecosystem for intuitive and sovereign interactions.",,ZZ,,https://twitter.com/0xintuition,909531430881746974,,https://medium.com/0xintuition,,https://www.linkedin.com/company/0xintuition/,
InvArch,m2541n,https://www.invarch.network/,NOT_DEPIN,,,,InvArch allows organizations & individuals to manage assets & execute transactions across any blockchain using a single non-custodial account.,L1/L2,,,https://twitter.com/InvArchNetwork,876974985984487484,https://t.me/InvArch,https://invarch.medium.com/,,https://www.linkedin.com/company/invarch/,
Invision,74fmsb,https://invision.ai/,BLOCKCHAIN_INFRA,,,,Invision AI enables real-time object detection and tracking on mainstream processors.,Software,,,http://twitter.com/invisionai,,,,,https://www.linkedin.com/company/invisionai,
IO.Net,61zuw7,https://io.net/,COMPUTE,,,,IO.Net is a decentralized computing platform for ML applications built on Solana.,,,,https://discord.com/invite/kqFzFK7fg2,1080817368646819941,https://t.me/ionet_official,,https://github.com/ionet-official,https://www.linkedin.com/company/ionet-official/,
ioFog,g9rym4,https://iofog.org/,COMPUTE,,,,Eclipse ioFog: Open-source edge computing platform for ECN.,,,,,,,,,,
IOTA,gobzn5,https://www.iota.org/,BLOCKCHAIN_INFRA,NATIVE,IOTA,iota,"IOTA uses Tangle instead of blockchain, offering faster speeds for the Internet of Things ecosystem.",IoT,,,https://twitter.com/iota,,,https://medium.com/@iotafoundation,https://github.com/iotaledger,http://www.linkedin.com/company/iotafoundation,
IoTEdge,olcvcb,https://iotedge.co/,COMPUTE,,,,"IoTEdge is a decentralized edge computing network for Internet of Things, built on blockchain technology.",IoT,,,https://twitter.com/iotedgechain,,https://t.me/IotedgeOfficalEN,,,,
IoTeX,oqhdss,https://iotex.io/,BLOCKCHAIN_INFRA,IOTEX,IOTX,iotex,"IoTeX is a blockchain-based sensor solution called Pebble, integrating numerous functions in one device.",IoT,,,https://twitter.com/iotex_io,534888542648664074,https://t.me/IoTeXGroup,https://medium.com/fmfw-io/introducing-iotex-3c14699aeecd,https://github.com/iotexproject,http://www.linkedin.com/company/iotex,
IPFS,ebcetj,https://ipfs.tech/,COMPUTE,,,,"IPFS is a peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open. IPFS addresses files based on content, not location.",,,,https://twitter.com/ipfs,806902334369824788,,https://blog.ipfs.tech/,https://github.com/ipfs,https://www.linkedin.com/company/protocollabs/,
IPSX,8er1ir,https://ip.sx/,COMPUTE,,,,IPXS is a decentralized proxy marketplace connecting users peer-to-peer for monetizing unused IPs.,,ZZ,,https://twitter.com/ipexchange1,,https://t.me/IPExchange,https://medium.ip.sx/,https://github.com/ip-exchange,https://linkedin.com/company/ipsxnetwork,
IQ,8gkezm,https://iq.wiki/,AI,ETHEREUM,IQ,everipedia,IQ: AI and blockchain firm with applications like IQ.wiki and HiIQ for staking.,,,,https://twitter.com/everipedia,920369137828655144,https://t.me/everipedia,,https://github.com/EveripediaNetwork,http://www.linkedin.com/company/iqdotwiki,
Iris,otau6o,https://www.poweredbyiris.com/,AI,,,,"Iris Tech: decentralized AI platform with blockchain for data traceability, efficacy, and AI democratization.",,,,https://twitter.com/iris_technology,,,https://medium.com/@iriswrites,,https://www.linkedin.com/company/iristechnology/,
Iron Mill,eq79la,https://www.ironmill.xyz/,NOT_DEPIN,,,,"IronMill is a web3 infrastructure company that focuses on providing an integrated solution tailored for software developers, allowing them to seamlessly integrate zero-knowledge technology into new applications.",ZK,ZZ,,https://twitter.com/ironmill_xyz,,,,,,
Ironfish,h21nov,https://ironfish.network/,NOT_DEPIN,,,,"Iron Fish encrypts every transaction, shielding your sensitive asset information from public view.",,EV3 Sal,,,771503434028941353,,,,,
Irys,tjyvc7,https://bundlr.network/,COMPUTE,,,,"Irys is a multi-chain solution for Arweave, enabling native support for Arweave storage on different blockchains.",Storage,,,https://twitter.com/irys_xyz,864852288002850866,https://t.me/TheBundleCommunity,https://medium.com/bundlr-network,https://github.com/topics/bundlr,https://uk.linkedin.com/company/bundlr-network?trk=ppro_cprof,
Ispolink,vv9w8b,https://www.ispolink.com/,SERVICES,ETHEREUM,ISP,ispolink,"Ispolink is a GameFi AI-driven platform for Web3 developers. Their cross-chain ATS platform streamlines the hiring process and empowers Blockchain, DeFi, Gaming, and IT firms to source leading tech talents with AI-powered algorithms.",,ZZ,,,,,,,,
Itheum,tww5o4,https://www.itheum.io/,NOT_DEPIN,,ITHEUM,itheum,Itheum is a Decentralized Data Ownership Platform that enables seamless data asset tokenization for individuals and enterprises.,,ZZ,,,,,,,,
IX Swap,lgggcx,https://www.ixswap.io,NOT_DEPIN,ETHEREUM,IXS,ix-swap,RWA launchpad & DEX,RWA,EV3 Sal,,,,,,,,
Jackal,127k4x,https://jackalprotocol.com/,COMPUTE,NATIVE,JKL,jackal-protocol,Jackal is a decentralized cloud storage network designed to safeguard extremely sensitive data.,Storage,ZZ,,https://twitter.com/jackal_labs?lang=en,,https://twitter.com/jackal_protocol?lang=en,https://medium.com/@blockfito/testnet-jackal-97ccb631ed6a,https://github.com/JackalLabs,https://ca.linkedin.com/company/jackal-storage,
Jambo,37y7e6,https://www.jambo.technology/,NOT_DEPIN,,,,"Jambo is building an affordable web3 and gaming smartphone, JamboPhone for emerging markets to enhance Web3 accessibility and education.",Hardware,EV3 Sal,,https://twitter.com/jambotechnology,,,,,,
Jasmine,bwhoon,https://www.jasmine.energy/,ENERGY,,,,"Jasmine Energy is a decentralized market for claiming, trading, and redeeming renewable energy certificates.",,ZZ,,https://twitter.com/Jasmine_Energy,1012757430779789403,,https://medium.com/jasmine-energy?source=topics_v2-8-84022bb4b1_df6b_4af1_8461_679c57abc67d-17,https://github.com/jasmine,https://www.linkedin.com/company/jasmine-energy,
Jasmy,h1tz1v,https://jasmy.global/,BLOCKCHAIN_INFRA,ETHEREUM,JASMY,jasmycoin,Jasmy is a tokenized platform that champions the democratization of data by combining blockchain and IoT technology to provide an infrastructure that allows anyone to use and share their IoT data safely and securely.,,ZZ,,,,,,,,
JDI,cjfsd9,https://jdi.group/,BLOCKCHAIN_INFRA,,,,JDI builds hardware and software solutions for the Decentralized Wireless Network and IoT industry.,Hardware,,,https://twitter.com/jdiyield,,,https://medium.com/@jdi.gwh/about,,https://www.linkedin.com/company/jdi-data,
jfrazier.eth's stealth project,75exdm,,AI,,,,Developing a project that currently exploring new ways to architect how blockchains can handle AI-training data.,,,,,,,,,,
Jim,b9tawl,https://www.jimaistudios.com/,AI,ETHEREUM,JIM,roasthimjim,Jim is an AI Bot that responds intelligently on social platforms.,,,,https://twitter.com/JimAIstudios,,https://t.me/RoastHimJim,,,,
Jinni,xkquis,http://www.jinni.com/,AI,,,,"Jinni is an AI project making AI accessible to all, revolutionizing the global AI landscape.",,,,https://twitter.com/jinnidotcom,,,https://medium.com/@njinn,https://github.com/jinni,https://www.linkedin.com/company/jinni/?originalSubdomain=il,
Jiritsu,j68t8z,https://www.jiritsu.network/,COMPUTE,,,,Jiritsu specializes in decentralized and verifiable computing. Their new asset tokenization platform is built on their Unlimited Verifiable Compute (UVC) and decentralized Zero-Knowledge Multi-Party Compute (ZK-MPC) technologies.,,ZZ,,https://twitter.com/Jiritsu_Network,,,,,https://www.linkedin.com/company/jiritsunetwork/,
JobChain,zyhloi,https://www.jobchain.com/,BLOCKCHAIN_INFRA,ETHEREUM,JOB,jobchain,JobChain: Connects job seekers with employers for efficient job search and recruitment processes.,Labor,,,https://twitter.com/antigravity1729,527549139429490688,https://t.me/JobchainOfficial,,,https://www.linkedin.com/company/jobchainofficial/,
JPEG'd,ngxl5h,https://jpegd.io/,NOT_DEPIN,ETHEREUM,JPEG,jpeg-d,JPEGd is a decentralized lending protocol enabling businesses to borrow pETH or PUSd using NFTs as collateral.,DeFi,,,https://twitter.com/JPEGd_69,906554976178933840,,https://medium.com/@jpegd,https://github.com/topics/jpeg-decoder,https://www.linkedin.com/company/jpeg,
Juno,e277dp,https://junonetwork.io/,NOT_DEPIN,COSMOS,JUNO,juno-network,Juno is decentralized network for interoperable apps,,,,https://twitter.com/JunoNetwork,816256689078403103,https://t.me/JunoNetwork,https://medium.com/@JunoNetwork,https://github.com/CosmosContracts,http://www.linkedin.com/company/juno-network,
Jur,y5mzyr,https://jur.io/,BLOCKCHAIN_INFRA,VECHAIN,JUR,jur,Jur is a Web3 project building a decentralized protocol for the Digital Economy on the Polkadot ecosystem.,,ZZ,,https://twitter.com/JurProject,1012640826742018048,,,,https://linkedin.com/company/jur-network,
JurnyOn,r1g3pk,,BLOCKCHAIN_INFRA,,,,"JurnyOn AI is a ticketing app for train and bus travel, delivering digital access to Transport for Wales railcards.",Auto,,,,,,,,,
Kadena,ss5p8b,https://kadena.io/,NOT_DEPIN,COSMOS,KDA,kadena,"Kadena is a Layer-1 Proof-of-Work blockchain that scales with Pact, a human-readable smart contract language.",,,,https://twitter.com/kadena_io,502858632178958377,https://t.me/kadena_io,https://medium.com/kadena-io,https://github.com/kadena-io,https://linkedin.com/company/kadena-llc/,
Kaito,pgim2q,https://www.kaito.ai/,AI,,,,"Kaito AI is an AI-powered search and recommendation engine for digital assets,",,ZZ,,https://twitter.com/_kaitoai,,,,,,
Kalima,3wa5r0,https://www.kalima.io/,BLOCKCHAIN_INFRA,ETHEREUM,KLX,,"Kalima is a layer 1, 3rd generation blockchain made for the IoT industry that enables users to independently govern, manage, and monetize data, build decentralized applications, and create tokens for smart-rewarding systems.",,ZZ,,,,,,,,
Kandola,8y4g79,https://kandola.network/,COMPUTE,,,,Kandola is a decentralized Chip-to-Cloud IoT Protocol.,IoT,,,https://twitter.com/KandolaNetwork,958002050174709761,https://web.telegram.org/a/,https://medium.com/@KandolaNetwork,,https://www.linkedin.com/company/kandola-network/,
Kansi,3jrl09,https://www.kansi-solutions.de/,BLOCKCHAIN_INFRA,,,,Kansi Solutions is a DePIN hosting platform offering mining opportunities for end-users to earn passive income.,Mining,ZZ,,https://twitter.com/kanisolutions?lang=en,,https://t.me/s/kansi_hilfestellung?before=27,,https://github.com/KanisiTech,https://in.linkedin.com/company/kansi-solutions,
KaratDAO,6ptk5o,https://karatdao.com/,NOT_DEPIN,,KAT,karat,KaratDAO is a revolutionary crypto native engine in Web3 that offers a bilateral service data marketplace that helps users take control of their Web2 and Web3 data while earning rewards.,,ZZ,,,,,,,,
Karrier One,j9n1l6,https://karrier.one/,WIRELESS,POLYGON,,,Karrier One is a mobile network company running on decentralized telecom infrastructure.,,,,https://twitter.com/karrier_one?lang=en,1003510714666860695,,https://karrier-one.medium.com/celebrating-q1-2023-milestones-expanding-karrier-ones-global-wireless-telecom-network-33977918e52d,,https://www.linkedin.com/company/karrier-one/,
Kaspa,a2so9v,https://kaspa.org/,NOT_DEPIN,NATIVE,KAS,kaspa,"Kaspa (KAS) is a revolutionary cryptocurrency that stands out as the world's first blockDAG, a digital ledger that enables parallel blocks and instant transaction confirmation.",,,,,599153230659846165,,,,,
Katzentracker,6t9cvb,https://katzentracker.com/,SENSORS,,,,Katzentracker is a developer of a cat tracker system powered by Helium.,,,,https://twitter.com/katzentracker,,,https://blog.berlintracker.de/,,,
KebApp,3w1ai8,https://kebapp.club/,SENSORS,SOLANA,KEBABS,,"KEBAPP is a DePIN project on Solana, decentralizing kebab shops and boosting small owners democracy. It uses token rewards for incentivizing supply chain networks, offering decentralized data storage, and rewarding loyalty for RWAs.",Hardware,ZZ,,https://twitter.com/KebAppCoin,,,,,,
Keet,wskl5g,https://keet.io/,COMPUTE,,,,"Keet is a Peer-to-Peer Chat App, built with the Holepunch platform that allows anyone to create apps that don’t use any servers.",,EV3 Sal,,,985129863348371516,,,,,
Kenshi,n3l5qj,https://kenshi.io/,BLOCKCHAIN_INFRA,ETHEREUM,KNS,kenshi,"Kenshi is a blockchain company offering services such as Custom Oracle Network, blockchain IoT SDK, Deep Indexing, GraphQL, and Reverse-API (webhooks) on Ethereum, Arbitrum, Aurora, Avalanche, Fantom, Polygon, Bitgert, and the BNB Smart Chain.",,ZZ,,https://twitter.com/KenshiTech,,,,,,
Ketchup Republic,jktemz,https://gemgemgo.xyz/,SENSORS,,,,Ketchup Republic is a DePIN-driven fog network that allows consumers and merchants to enjoy decentralized peer-to-peer payment and customer loyalty services.,,EV3 Sal,,https://twitter.com/ketchuprepublic,,,,,,
Khalani,80qryr,https://khalani.network/,BLOCKCHAIN_INFRA,,,,Khalani is the first decentralized solvers platform for intent-driven generative coordination.,,EV3 Sal,,https://twitter.com/khalani_network,,,,,,
Kilt,bcanxl,https://www.kilt.io/,BLOCKCHAIN_INFRA,,,,"KILT is a blockchain-based identity platform offering decentralized, secure, and scalable solutions.",,,,https://twitter.com/Kiltprotocol,847445252663148565,,https://kilt-protocol.medium.com/,https://github.com/KILTprotocol,https://in.linkedin.com/company/kilt,
Kino,u1g1gw,https://www.kino.studio/,NOT_DEPIN,,,,KINO aims to make the film/tv industry more equitable for all.,NFTs,,,https://twitter.com/kinomakesmovies,,,https://www.linkedin.com/company/kinomakesmovies/,,,
KIP,wwnksh,https://kip.pro/,AI,,KIP,,"KIP Protocol is the decentralized base layer that AI models, apps, and data owners build on, to safely transact and monetize in Web3.",,,,https://twitter.com/KIPprotocol,,,,,,
Kizuna,gvclfq,https://kizunatoken.io/,AI,ETHEREUM,KIZUNA,kizuna,"Kizuna is the first token built from Decentralized AI, inspired by Ryoshi's principles of decentralized maximalism",,,,https://twitter.com/KizunaToken,,,https://kizunatoken.medium.com/,,,
KIZZY,tmsb4i,https://www.kizzy.io/,NOT_DEPIN,,,,The first content prediction marketplace.,Prediction Market,,,https://twitter.com/kizzymobile,,,,,,
Kleros,z2bo5e,https://kleros.io/,NOT_DEPIN,ETHEREUM,PNK,kleros,Kleros is a decentralized arbitration protocol for disputes in the web3 economy. It relies on game theoretic incentives to have anonymous jurors rule cases correctly.,,ZZ,,,,,,,,
Klever,xarvqb,https://klever.org/,NOT_DEPIN,,,,A peer-to-peer network for everyone.,,EV3 Sal,,,,,,,,
KlimaDao,8bbq2m,https://www.klimadao.finance/,ENERGY,POLYGON,KLIMA,klima-dao,"KlimaDAO is building an infrastructure for a transparent, neutral, and public Digital Carbon Market to accelerate climate finance on a global scale.",,,,,841390338324824096,,,,,
KnoxFS,1wbpqo,https://www.knoxfs.com/,COMPUTE,NATIVE,KFX,knoxfs,"Knox Project offers a secure, decentralized data storage solution using blockchain and IPFS, rewarding users with KFX tokens for participation and offering passive income through masternodes.",,ZZ,,,,,,,,
Koda,7z84do,https://www.koda9.com/,COMPUTE,,,,KODA is the world's first decentralized AI robotic dog with the option to store data on IPFS/Filecoin Network.,Robotics,ZZ,,https://twitter.com/KodaRobotDog,,,,,https://www.linkedin.com/company/kodarobot,
Koii,xfjtib,https://www.koii.network/,BLOCKCHAIN_INFRA,NATIVE,,,Koii is a platform enabling passive income by connecting idle devices to transparent apps and audit systems.,,,,https://twitter.com/KoiiNetwork,,https://t.me/koiinetwork,https://koii-network.medium.com/,https://github.com/koii-network/,http://www.linkedin.com/company/koii-network,
Koinos,83tc81,https://koinos.io/,NOT_DEPIN,NATIVE,KOIN,,Koinos is a blockchain network with free-to-use apps and dynamic resource pricing.,,,,https://twitter.com/koinosnetwork,613823471679438898,https://t.me/joinchat/SXe6mLnb8Ssywlq9,https://medium.com/koinosnetwork/tagged/koinos,https://github.com/koinos,http://www.linkedin.com/company/koinosnetwork,
Kondux,a3tmez,https://kondux.info/,NOT_DEPIN,ETHEREUM,KNDX,kondux-v2,"Kondux is a virtual design lab for artists, brands, and manufacturers that help bridge creativity & technology together.",,ZZ,,https://twitter.com/Kondux_KNDX,,,,,,
KonnektVPN,9rn01z,https://www.konnektvpn.com/,WIRELESS,,KPN,,"KonnektVPN is a Next Generation VPN powered and driven by AI to enhance user's digital experience. While users use the app, they help train the AI and earn rewards.",VPN,ZZ,,https://twitter.com/konnektVPN,,,,,,
Kontigo,45oymd,https://www.kontigo.lat/,SERVICES,,,,"Kontigo is developing a blockchain based, automated bank built-in Whatsapp for gig workers in LatAm.",,,,,,,,,,
Kosen,6b3lxu,https://www.kosen.ai/,AI,,,,Kosen Labs aims to be at the intersection of AI and web3. Their mission is to bring the benefits of advanced AI to the blockchain space to develop the decentralised future.,,,,https://twitter.com/kosenlabs?lang=en,,,https://medium.com/kosenlabs,https://github.com/kosen-labs,https://www.linkedin.com/company/kosenlabs/,
Kresko,pks4ee,https://www.kresko.fi/,NOT_DEPIN,,,,"Making wealth accessible to anyone, anywhere. An open platform for synthetic stocks, commodities, and crypto.",,,,https://twitter.com/kreskofi,,https://t.me/kreskofi,https://medium.com/kreskofi,https://github.com/kreskohq/,https://www.linkedin.com/company/kreskolabs/,
krest,tkmyxi,https://krest.peaq.network/,NOT_DEPIN,PEAQ,KREST,krest,Krest is Peaq network's sister network. It is the world's first and only simulation network for DePIN and the Economy of Things.,,,,https://twitter.com/krestnetwork,,,https://www.peaq.network/blog,,,
Kroo,z1mpcu,https://www.kroo.us/,WIRELESS,,,,"Kroo: 5G rooftop connectivity infra for real estate owners, harnessing power of 5G.",,,,https://twitter.com/KrooBank,,,https://medium.com/kroo,https://github.com/b-social,http://www.linkedin.com/company/kroous,
Kryptview,3zopno,https://kryptview.com/,BLOCKCHAIN_INFRA,NATIVE,KVT,kryptview,Kryptview rewards users for analyzing cryptos using P2P and Blockchain mechanisms.,,,,https://twitter.com/thekryptview?lang=en,925090445187506217,,https://kryptview.medium.com/,,,
Kunji,9zg5p3,https://www.kunji.finance/,NOT_DEPIN,ARBITRUM,KNJ,kunji-finance,Kunji Finance: Decentralized asset management platform on Arbitrum chain.,DeFi,,,https://twitter.com/kunjitweets,922736855097679892,https://t.me/+qUmTI8yQNQozNTc1,https://medium.com/@Kunjifinance,,http://www.linkedin.com/company/kunjiofficial,
Kurobi,j0o171,https://kurobi.io/,SERVICES,SOLANA,KURO,kurobi,"Kurobi is a blockchain-powered platform that offers borderless opportunities for experts, coaches, mentors, influencers to make money for their time.",,,,https://twitter.com/kurobi_io,1196209056747102268,https://t.me/kurobi_io,https://kurobi.medium.com/,,https://www.linkedin.com/company/kurobi/,
Kuva,77bx8k,https://kuva.com/,NOT_DEPIN,,,,We believe advanced financial services should be simple and borderless for consumers & businesses.,,,,https://twitter.com/KuvaNet,522509292490719235,https://t.me/kuvanetwork,,,https://www.linkedin.com/company/kuvanetwork/,
Kuzco,7syzhg,https://kuzco.xyz/,COMPUTE,SOLANA,KZO,,Kuzco is a distributed GPU cluster for LLM inference on Solana.,,EV3 Sal,,https://twitter.com/kuzco_xyz,,,,,,
KWAI,4ccixw,https://kwailabs.com/,AI,BINANCE,KWAI,kwai,"KWAI develops AI-powered smart assistant for Web3. Offers tools for crypto swapping, staking, and market tracking.",,,,https://twitter.com/kwai_labs,,https://t.me/kwai_labs_announcement,https://kwailabs.medium.com/,,,
Kwil,9xue69,https://www.kwil.com/,BLOCKCHAIN_INFRA,,,,Kwil is a permissionless SQL database for the decentralized internet.,Data,,,https://twitter.com/KwilTeam,819855804554543114,,https://medium.com/kwildb,https://github.com/kwilteam,http://www.linkedin.com/company/kwilteam,
Kwill,o0n1qq,https://www.kwil.com/,COMPUTE,,,,"Kwil is a decentralized, community-owned SQL database solution for building advanced dApps and protocols.",,ZZ,,https://twitter.com/KwilTeam,,,,,,
KYVE,u6mo76,https://www.kyve.network/,COMPUTE,COSMOS,KYVE,kyve-network,"KYVE connects nodes to Arweave storage, ensuring trustless uploads.",Storage,,,https://twitter.com/KYVENetwork,817113909957361664,https://t.me/kyvenet,https://kyve.medium.com/,https://github.com/KYVENetwork,http://www.linkedin.com/company/kyve,
LABEL Foundation,rmq528,https://label.foundation/,NOT_DEPIN,ETHEREUM,LBL,label-foundation,"LABEL has developed the world's first platform that includes a Listen-And-Earn mechanism, TRACKS, for the Web 3.0 music platform ecosystem.",,,,,991242808818159758,,,,,
Lagrange,romv3v,https://www.lagrange.dev/,NOT_DEPIN,,,,The Lagrange Protocol is a cross-chain infrastructure that enables the creation of generalized state proofs across all major blockchains.,ZK,ZZ,,https://twitter.com/lagrangedev,,,,,,
Lake,cpzurk,https://lakenetwork.io/,COMPUTE,,LNT,,"Lake is a Decentralized storage for DApps and Blockchains that incentivizes users to provide Storage and Bandwidth. ",Storage,ZZ,,https://twitter.com/_lakenetwork,,https://t.me/lakenetwork,,,http://www.linkedin.com/company/lakenetwork,
Lambda,129gin,https://lambda.im/,COMPUTE,,,,Decentralized Storage 3.0 Evolution - LWS Modular Storage Network,Storage,W. L.,,,,,,,,
Landshare,v4pxv7,https://www.landshare.io/,NOT_DEPIN,BINANCE,LAND,landshare,"Landshare turns real-world properties into asset-backed, yield-bearing, and fully tradeable asset tokens on the Binance Smart Chain.",,ZZ,,,,,,,,
Lanify,2sr2vy,https://www.lanify.ai/,AI,ETHEREUM,LAN,lanify,"Lanify is a browser extension that allows users to monetize their internet connection by selling unused network resources in real-time. It acts as a decentralized gateway to the public web, providing access to essential data for training AI models.",,ZZ,,https://twitter.com/LanifyAI,,,,,,
Latitude,n0489d,https://www.latitude.sh/,COMPUTE,,,,"Latitude.sh is provider of a network that allows developers to deploy and manage GPU and CPU servers globally and easily. ",,,,https://twitter.com/latitudesh,,,https://www.latitude.sh/blog,https://github.com/latitudesh,https://www.linkedin.com/company/22318494/,
Lava,jq8mvz,https://www.lavanet.xyz/,BLOCKCHAIN_INFRA,,,,Lava is a modular data access (RPC & indexing) layer for rollups and blockchains.,RPC/Indexing,ZZ,,,,,,,,
Lavita.AI,tylsdp,https://www.lavita.ai/,AI,NATIVE,LAVITA,lavita,"LAVITA is a blockchain and AI based next generation healthcare platform, that enables the use of massive biomedical datasets for research while preserving individual privacy and ownership of data.",Health & Fitness,ZZ,,https://twitter.com/LavitaAI,1041587307419017246,https://t.me/Lavita_AI,https://lavita-ai.medium.com/,,http://www.linkedin.com/company/lavita-ai,
Layer N,nvisfm,https://www.layern.com/,NOT_DEPIN,,,,"Layer N is an Ethereum StateNet—A novel L2 designed as a network of custom VMs, called XVMs, powered by a shared communication and liquidity layer.",,,,,1038972328828219462,,,,,
LayerAI,y3zupj,https://layerai.org/,AI,ETHEREUM,LAI,cryptogpt-token,"LayerAI is a blockchain for AI dev, providing layer-2 solution for efficient and secure applications.",,,,https://twitter.com/LayerAIorg,1158724762726584361,https://t.me/LayerAI_org,https://layeraiorg.medium.com/layerai-the-technology-ecosystem-for-the-data-first-age-8ffe4f25e236,,http://www.linkedin.com/company/layeraiorg,
LayerNet,mhypx1,https://layernet.ai/,AI,,,,LayerNet builds a decentralized AI ecosystem to empower native blockchain infrastructure and applications.,,ZZ,,https://twitter.com/layernet_ai,,,,,,
LayerZero,cpd9pq,https://www.layerzero.io/,BLOCKCHAIN_INFRA,,,,LayerZero builds DeWi infrastructure in LA.,Mining,,,,,,,,,
LBRY,jn69a0,https://lbry.com/,COMPUTE,NATIVE,LBRY,lbry-credits,"LBRY protocol is a decentralized network for content sharing and publishing. It enables users to access, publish, and share digital content without intermediaries, ensuring creators and consumers maintain control over their content and data.",,ZZ,,,,,,,,
LBS,elto7m,https://lbschain.org/,NOT_DEPIN,NATIVE,LBS,,"LBS Chain is the world's first location-based Layer 3 blockchain. It allows developers to craft Web3 local service Dapps with ease and affordability while enabling users to contribute and profit from LBS data. ",,,,https://twitter.com/lbschain,,,,,,
Leap,3w2wtc,https://www.leap.energy/,ENERGY,,,,Leap is the leading global platform for generating new value from grid-connected resources and devices through integration with energy markets.,,,,https://twitter.com/leapdex,,,https://www.leap.energy/blog,,https://www.linkedin.com/company/18116834/,
LENA,2qzmdn,https://www.lena.network/,NOT_DEPIN,,,,"LENA: Web3 liquidity provider for NFT lending and borrowing. ETH pools, user autonomy.",,,,https://twitter.com/LENA_Network,1003197622665879562,,https://medium.com/@LENA_Network,,http://www.linkedin.com/company/lena-network,
Lendwill,xofl5l,https://lendwill.com/,NOT_DEPIN,,,,"Lendwill is a sharing economy app where people invest money in each other, all while building a verifiable credit history on the blockchain.",DeFi,ZZ,,https://twitter.com/lendwill,,,,,https://www.linkedin.com/company/lendwill/,
Lever,2xb653,https://www.lever.io/,SERVICES,,,,"Lever is a Web3 influencer marketplace that offers an easy-to-use, all-in-one platform that makes booking influencers safe, quick, and easy for brands and creators alike.",,EV3 Sal,,,,,,,,
Libertai,c1lms4,https://libertai.io/,AI,,,,"Libertai is a decentralized artificial intelligence assistant that operates without a centralized server, allowing for increased privacy and security and employs machine learning algorithms for improved language processing capabilities.",,ZZ,,https://twitter.com/Libertai_DAI,,,,,,
Liberte,c6hicp,,COMPUTE,,,,Liberte is a DePIN compute framework for on-chain games.,Gaming,,,,,,,,,
libp2p,hsbb4a,https://libp2p.io/,BLOCKCHAIN_INFRA,,,,"Libp2p is an open-source network stack that lets you build modern, fully distributed applications.",,,,https://twitter.com/libp2p,,,https://blog.libp2p.io/,https://github.com/libp2p,https://www.linkedin.com/company/protocollabs/,
LIFE Network,8aa0dm,https://www.lifenetwork.ai/,BLOCKCHAIN_INFRA,,,,"LIFE Network is a privacy-first, AI-powered blockchain for the mass adoption of DeSci. It allows users to earn rewards by taking control of their genetic data while empowering researchers and companies with effortless data access.",DeSci,EV3 Sal,,https://twitter.com/LifeNetwork_AI,,,,,,
Lighthouse,24l8zf,https://www.lighthouse.storage/,COMPUTE,,,,Lighthouse is a permanent file storage protocol allowing one-time payment for storing files forever.,,,,https://twitter.com/lhediscovery,920900030771109908,https://t.me/LighthouseStorage,,https://github.com/GoogleChrome/lighthouse,https://www.linkedin.com/company/lighthouse-global/,
lilAI,4orxub,https://lilai.co/,AI,ARBITRUM,LILAI,lilai,"lilAI is an AI powered, smart automated community management solution built on Arbitrum.",,,,,,,,,,
Lilypad,2hvgy5,https://lilypad.tech/,COMPUTE,,,,"Lilypad develops a trustless, distributed compute network that enables internet-scale data processing, AI, ML & other arbitrary computation from blockchains while unleashing idle processing power & unlocking a new marketplace for computing.",,EV3 Sal,,,,,,,,
LimeWire,ubt5kj,https://limewire.com/,AI,ETHEREUM,LMWR,limewire,"LimeWire is an AI-powered content publishing platform that allows users to create, publish, and monetize images, videos, and music with the power of AI. ",,ZZ,,,,,,,,
Linea,xg7vy5,https://linea.build/,NOT_DEPIN,,,,Linea is an EVM-equivalent zk-rollup for scaling Ethereum dapps.,ZK,ZZ,,,,,,,,
Linera,avq9ep,https://linera.io/,NOT_DEPIN,,,,Linera is a Blockchain Infrastructure for Highly Scalable Web3 Applications that give users their own blockspace with microchains.,,,,https://twitter.com/linera_io,984941796272521226,https://t.me/linera_official,https://medium.com/@linera,,https://www.linkedin.com/company/linera-io/,
Lit,cv1odr,https://www.litprotocol.com/,COMPUTE,,,,"Lit Protocol is an autonomous cloud network for decentralized signing, encryption, and compute.",,ZZ,,https://twitter.com/LitProtocol,,,,,,
Lithium,iggqt8,https://lith.finance/,AI,ETHEREUM,LITH,lithium-finance,"Lithium Finance is the first decentralized protocol to harness the power of AI and crowd wisdom. Fundamentally, Lithium Finance uses machine learning algorithms to evaluate historical market data and to identify potential data issues.",,ZZ,,,,,,,,
LiveMind,yeobvh,https://livemind.ai/,AI,,,,"LiveMind.ai is an AI-powered platform designed to help businesses, creatives, and agencies transform their operations with innovative AI technology.",,,,,,,,,,
Livepeer,0dpzm4,https://livepeer.org/,COMPUTE,ETHEREUM,LPT,livepeer,Livepeer is a decentralized network for video encoders and streamers.,,,,https://twitter.com/livepeerorg,423160867534929930,,https://medium.com/livepeer-blog,,http://www.linkedin.com/company/livepeer,
LM Studio,vh0qps,https://lmstudio.ai/,AI,,,,LM Studio allows users to run local/open LLMs on their computers.,,,,https://twitter.com/LMStudioAI,1110598183144399058,,,https://github.com/lmstudio-ai,,
LocalPro,0pgbgt,https://www.getlocalpro.xyz/,BLOCKCHAIN_INFRA,,,,"LocalPro: gamifies experiences, promotes trust, quests, badges, rewards, enhances skills, incentivizes collaboration.",Rewards,,,https://twitter.com/localpro_,,,,,https://www.linkedin.com/company/localpro-x,
Lofty,a0pcew,https://www.lofty.ai/,NOT_DEPIN,,,,Lofty is a fractional real estate marketplace that consists of buyers (token investors) and sellers (people who want to sell their properties).,,,,,,,,,,
Log Store,bs5j3i,https://www.usher.so/technology/,BLOCKCHAIN_INFRA,ETHEREUM,LSAN,,"The Log Store Network is a decentralized, time-series database specializing in high-frequency, time-indexed cryptographic attestations, facilitating real-time data collection through a peer-to-peer data transport layer.",,ZZ,,https://twitter.com/usher_web3,,,,,,
Logion,p1vtxx,https://www.logion.network/,NOT_DEPIN,,LGNT,,Logion is a pioneering blockchain platform that transforms tokens into legal-grade digital assets.,,,,,786689460178911273,,,,,
Logos,dojvzb,https://logos.co/,BLOCKCHAIN_INFRA,,,,"Logos provides trust-minimized, corruption-resistant governing services and institutions for citizens.",Legal,ZZ,,https://twitter.com/Logos_state,,,,https://github.com/logos-co,https://linkedin.com/company/logos-internet-marketing-experts,
Loke,6b4f0x,https://getloke.com/,NOT_DEPIN,,LOKE,,Loke is a gamified social layer for action sports.,,EV3 Sal,,https://twitter.com/getloke,,,,,,
LongFi,nbam9o,https://www.longfisolutions.com/,WIRELESS,,,,LongFi Solutions: Decentralized Infrastructure for community connectivity,Mining,,,https://twitter.com/LongFiSolutions,,,,https://github.com/topics/longfi,https://www.linkedin.com/company/longfisolutions/,
Loom,el7s07,https://loomx.io/,NOT_DEPIN,ETHEREUM,LOOM,loom-network-new,"Loom Network is a production-ready, multichain interop platform for serious dapp developers.",,,,https://twitter.com/loomnetwork,,https://t.me/loomnetwork,https://medium.com/loom-network,https://github.com/loomnetwork,https://www.linkedin.com/company/loom-network/,
Loop,t38une,https://www.theloopnetwork.org/,NOT_DEPIN,BINANCE,LOOP,loopnetwork,Loop is a Layer-1 crypto ecosystem to address scalability in smart contracts.,L1/L2,,,https://twitter.com/loopnetwork3,,https://t.me/loopnetwork,,,,
Lox Network,noieih,https://loxnetwork.co.uk/,WIRELESS,,LOX,lox-network,Lox Network provides the world’s first global IMEI blacklist database for smartphone crime using blockchain. Their project is designed to target and dismantle the phone theft industry through a decentralized blacklist.,,ZZ,,https://twitter.com/LoxNetwork,,,,,,
Loxodrome,vvesfw,https://loxodrome.xyz/,NOT_DEPIN,,,,"Loxodrome is a pioneering DePIN-Focused Dex on the IoTeX, establishing itself as the first native liquidity marketplace focused on DePIN.",,ZZ,,,,,,,,
LTO Network,tny0s0,https://www.ltonetwork.com/,NOT_DEPIN,ETHEREUM,LTO,lto-network,"LTO Network is a Layer 1 blockchain with a Public and Private layer to bridge the gap between real-world and digital ownership, decentralized identities, and privacy.",,ZZ,,,,,,,,
LUKSO,saeow6,https://lukso.network/,NOT_DEPIN,ETHEREUM,LYX,lukso-token,"LUKSO is a next generation EVM blockchain based on Casper PoS and will be the foundation for the New Creative Economy. ",,,,,359064931246538762,,,,,
Lumerin,f0vw9s,https://lumerin.io/,NOT_DEPIN,ETHEREUM,LMR,lumerin,"Lumerin is the World's first P2P low-cost, decentralized marketplace for trading Bitcoin hashpower.",,,,,875744643378200577,,,,,
Lumino,3ttk4l,https://www.luminolabs.ai/,COMPUTE,,,,Decentralized GPU network built on Filecoin,,EV3 Sal,,,,,,,,
Lumishare,6s00n5,https://lumishare.io/,ENERGY,BINANCE,LUMI,lumishare,"LumiShare, powered by $LUMI, is a financial blockchain ecosystem focused on tokenizing renewable energy assets through its NFT Marketplace.",,ZZ,,,,,,,,
Lumoz,x60254,https://lumoz.org/,BLOCKCHAIN_INFRA,,,,Lumoz is a Modular Compute Layer and ZK-RaaS platform that utilizes a PoW mining mechanism to provide ZKP arithmetic for ZK-Rollup.,,ZZ,,https://twitter.com/LumozOrg,,,,,,
Lunyr,74rmzw,https://lunyr.com/,AI,ETHEREUM,LUN,lunyr,Lunyr is a blockchain-based world knowledge base that rewards users for peer-reviewing and contributing information.,,,,https://twitter.com/LunyrInc,365609106863816704,https://t.me/lunyrcommunity,https://medium.com/lunyr,,https://www.linkedin.com/company/lunyr/about/,
Lynq,jq8ero,https://lynqnetworks.com/,WIRELESS,,,,"Lynq enables innovators to design high-value products with infrastructure-free, long-range, and secure network connectivity through their software that can be integrated into any device, starting with drones, two-way radios, and mobile phones.",,,,https://twitter.com/lynqnetworks,,,,,https://www.linkedin.com/company/lynqnetworks/,
Lyzis Labs,hffbvt,https://www.lyzis.tech/,NOT_DEPIN,,,,Lyzis Labs is an incentive-driven and democratic protocol built upon a decentralized online marketplace based on blockchain technology.,,,,https://twitter.com/lyzislabs,984133538427338772,https://t.me/lyzislabsoff,https://medium.com/@lyzislabsofficial,,https://www.linkedin.com/company/lyzis-labs/about/,
M^ZERO,oane9t,https://www.m0.xyz/,NOT_DEPIN,,,,M^ZERO Labs aims to develop a decentralized network enabling institutional participants to reliably link assets to a decentralized infrastructure.,,,,,,,,,https://www.linkedin.com/company/m-zero-labs/?originalSubdomain=de,
M3tering,ae6gb1,https://m3tering.whynotswitch.com/,ENERGY,GNOSIS,,,M3tering incentivizes solar energy investment for underserved regions.,,ZZ,,https://twitter.com/whyNotSwitch,1128564139472736296,,,https://github.com/M3tering,http://www.linkedin.com/company/whynotswitch,
Macha,4i6mkb,https://macha.ai/,BLOCKCHAIN_INFRA,,,,Macha is a private and secured AI-powered search infrastructure for interoperable web powered by Data SDK.,,EV3 Sal,,https://twitter.com/macha0x,,,,,,
Magicblock,i15p9n,https://www.magicblock.gg/,BLOCKCHAIN_INFRA,,,,Magicblock is an open-source stack that enables anyone to build and play on-chain games on Solana & SVM,,,,,943797222162726962,,,,,
Magie,hoxww0,,NOT_DEPIN,,,,Magie aims to be a customer-aligned financial platform that starts with a WhatsApp-based payment assistant for power users and evolves into a network leveraging Open Finance and tokenization to offer competitive financial products and shared ownership.,DeFi,EV3 Sal,,https://twitter.com/dgntec,,,,,,
MagnetAI,1yb2sw,,AI,,,,"Magnet AI is a scalable, permissionless and cost-efficient platform for accessing compute power for inference.",GPUs,,,,,,,,,
MaidSafeCoin,ubmhxr,https://maidsafe.net/,COMPUTE,ETHEREUM,EMAID,maidsafecoin,MaidSafeCoin is a decentralized data network built on autonomous principles for secure and efficient data-sharing.,,,,https://twitter.com/maidsafe,106097460425846784,https://t.me/safenetwork,https://medium.com/safenetwork,https://github.com/maidsafe/maidsafe.net,https://www.linkedin.com/company/maidsafe/about/,
Mande,f3629t,https://www.mande.network/,BLOCKCHAIN_INFRA,,,,Mande is a decentralized reputation & credibility network.,,,,https://twitter.com/MandeNetwork,953348696098103366,,https://www.linkedin.com/company/mande-chain/,,,
Mangata,k4jlda,https://www.mangata.finance/,NOT_DEPIN,,,,"Mangata is a multi-rollup interchain infrastructure that allows users to trade any token, from any chain. Their goal is to build the world's first true interchain trading app using multi-chain ZK rollup technology.",,,,,776977650907480074,,,,,
Manta,m3djiu,https://manta.network/,NOT_DEPIN,POLKADOT,MANTA,,Manta utilises zero-knowledge proofs (ZKPs) to guarantee the secure and private minting of NFTs and SBTs while maintaining the confidentiality of crypto assets.,,,,https://twitter.com/mantanetwork,795390654628102165,https://www.t.me/mantanetworkofficial,https://mantanetwork.medium.com/,https://github.com/manta-network,https://www.linkedin.com/company/mantanetwork,
MANTRA,jnhaaq,https://www.mantraomniverse.com/,NOT_DEPIN,ETHEREUM,OM,mantra-dao,"MANTRA is a first of its kind, vertically-integrated and regulatory compliant blockchain ecosystem. ",DeFi,,,https://twitter.com/MANTRAOMniverse,821988232538357761,https://t.me/MANTRA_omniverse,https://mantraomniverse.medium.com/,,https://www.linkedin.com/company/mantraomniverse/,
Maple,622qp6,https://www.maple.finance/,BLOCKCHAIN_INFRA,ETHEREUM,MPL,maple,Maple Finance is an institutional capital marketplace powered by blockchain technology focused exclusively on serving Institutional and Individual Accredited Investors with high-quality lending opportunities.,,ZZ,,,,,,,,
Mapmetrics,lp6ty8,https://mapmetrics.org/,SENSORS,SOLANA,MMAPS,mapmetrics,Mapmetrics is a web3 navigation app that rewards users with tokens and NFTs.,Auto,ZZ,,https://twitter.com/MapMetrics?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,,https://github.com/MobileRoboticsSkoltech/map-metrics,https://nl.linkedin.com/company/mapmetrics,
MAPS,dp6jkl,https://maps.me/,NOT_DEPIN,SOLANA,"MAPS ",maps,Maps.me 2.0 aims to be the ultimate travel companion app that provides both online and offline maps while offering DeFi functionalities.,,ZZ,,,,,,,,
Marina,b6dsog,https://marina-protocol.com/,BLOCKCHAIN_INFRA,BINANCE,SURF,,"Marina Protocol is an app-based Global Web 3 tutorial platform, providing users new to blockchain and Web 3 with easy-to-use content and advanced interfaces for activities like mining, staking, launchpads, and transfers.",,ZZ,,https://twitter.com/MARINA_PROTOCOL,,,,,,
Marlin,7ipv0f,https://www.marlin.org/,COMPUTE,ETHEREUM,POND,marlin,Marlin is an open-source project aimed at scaling peer-to-peer platforms by optimizing the communication between nodes(incentivized libp2p).,,ZZ,,,,,,,,
Maro,q8qiuw,https://ma.ro/,NOT_DEPIN,ETHEREUM,MARO,maro,Developer of a token-incentivized social networking protocol designed to create blockchain-decentralized applications and promotions.,,,,,,,,,,
Masa,dahm7v,https://www.masa.finance/,COMPUTE,AVALANCHE,MASA,,"Masa is building a Decentralized Google, an open, secure, and incentivized economy for the world’s personal data.",ZK,,,https://twitter.com/getmasafi,https://discord.gg/masafinance,https://t.me/masafinance,https://medium.com/masa-finance,https://github.com/masa-finance/,https://www.linkedin.com/company/masa-network/,
Mask,ub9kgi,https://mask.io/,NOT_DEPIN,ETHEREUM,MASK,mask-network,"Mask Network is a protocol that allows users to seamlessly send encrypted messages, cryptocurrencies, and DApps (Defi, NFTs, DAO) over the top of social networks without migrating, thereby creating a decentralized Applet(DApplet) ecosystem.",,EV3 Sal,,https://twitter.com/realMaskNetwork,,,,,,
MASQ,0ezngt,https://masq.ai/,WIRELESS,ETHEREUM,MASQ,masq,"MASQ is a decentralized VPN network built on Polygon, providing secure and private internet browsing.",VPN,ZZ,,https://twitter.com/MASQ_ai,800920941861404733,https://t.me/MASQ_ai,https://medium.com/masq-project,https://github.com/MASQ-Project,https://linkedin.com/company/masqproject,
Massa,10vi0m,https://massa.net/,NOT_DEPIN,NATIVE,MASSA,massa,Massa is a new blockchain based on a multithreaded technology that supports more than 10'000 transactions per second in a fully decentralized network with thousands of nodes.,,,,https://twitter.com/massalabs,828270821042159636,https://t.me/massanetwork,https://massalabs.medium.com/,https://github.com/massalabs/massa,https://www.linkedin.com/company/massa-labs/,
Massive,s4glrh,https://www.joinmassive.com/,COMPUTE,,,,Massive is an SDK enabling developers to offer premium content to users by leveraging their unused processing power.,,,,,,,,https://github.com/topics/massive,https://www.linkedin.com/company/massive/about/,
MatchX,sr6yh3,https://matchx.io/,WIRELESS,,,,MatchX is a hardware and software company specializing in IoT solutions for the industry.,"IoT, Hardware, Software",,,https://twitter.com/matchx_iot,525329441371717675,,,,https://www.linkedin.com/company/matchx/,
Matrix AI,iev3ik,https://www.matrix.io/,AI,NATIVE,MAN,matrix-ai-network,Matrix combines neuroscience with AI and blockchain to create digital user avatars in the Metaverse.,,,,https://twitter.com/MatrixAINetwork,984618085023612999,https://t.me/matrixainetwork,https://matrixainetwork.medium.com/,https://github.com/MatrixAINetwork,http://www.linkedin.com/company/matrixainetwork,
Mawari,ygaj99,https://www.mawari.io/,COMPUTE,,,,Mawari: Decentralized 3D content delivery platform for mobile XR devices.,CDN,,,https://twitter.com/mawarijp,,,,,https://www.linkedin.com/company/mawari/,
MedeLeite,jtrmoh,https://www.medeleite.com/,BLOCKCHAIN_INFRA,,,,Full-stack supply chain platform for mlik production,Software,,,,,,,,,
Media,iqnvgc,https://www.media.network/,COMPUTE,ETHEREUM,MEDIA,media-network,Media Network is a decentralized hub for web services.,,,,https://twitter.com/Media_FDN,832942573642973194,https://t.me/Media_FDN,https://mediafoundation.medium.com/,https://github.com/mediafoundation,https://www.linkedin.com/company/media-network-inc./about/,
MedicalVeda,riq8lw,https://medicalveda.com/,NOT_DEPIN,ETHEREUM,MVEDA,medicalveda,"Medical Veda aims to be the world’s leading open-source health ecosystem for enabling decentralized ownership of patient data while enabling all industry players to get access to this data in a seamless, secure, and instant manner.",,ZZ,,,,,,,,
meet48,mvulhh,https://www.meet48.xyz/,NOT_DEPIN,,,,"MEET48 is an immersive intelligent social Metaverse that integrates AI large models & WEB3, featuring idol entertainment content, AI-driven content & Web3 game.",,EV3 Sal,,https://twitter.com/meet_48,,,,,,
Mem Tech,5fzcjp,https://www.mem.tech/,COMPUTE,,,,The web3-ready serverless functions platform. Build and deploy trustless dApps in record time,,EV3 Sal,,,999990037779333130,,,,,
MemoLabs,8ul10b,https://www.memolabs.org/,COMPUTE,,,,"Provide decentralized underlying data storage technology for Metaverse&NFT to open up data value transfer channels, and help human civilization survive forever. ",Storage,W. L.,,https://twitter.com/MemoLabsOrg,849100463441444894,,https://memolabs.medium.com/,https://github.com/memoio,,
MeMusic,lwwf21,https://www.memusic.io/,NOT_DEPIN,NATIVE,MMT,memusic,"MeMusic is a blockchain end-to-end platform designed to create, listen, and share music.",,ZZ,,https://twitter.com/MeMusicNews,,,,,,
Mentaport,y363g8,https://www.mentaport.xyz/,NOT_DEPIN,,,,"Mentaport provides a content-authenticating platform that protects the work of musicians, artists, and creators with its advanced fingerprinting technology to ensure authenticity and track ownership.",,EV3 Sal,,https://twitter.com/mentaportinc,,,,,,
Menthol,b9egeq,https://www.mentholprotocol.com/,ENERGY,,COOL,,Menthol Protocol is a multi-chain decentralized sustainability protocol that will automatically offset carbon emissions user or dApp transactions with verified renewable energy and carbon credits.,Environmental,,,https://twitter.com/MentholProtocol,852523511414784027,https://t.me/mentholprotocol,https://medium.com/mentholprotocol,https://github.com/mentholprotocolfoundation,https://www.linkedin.com/company/menthol-protocol/,
Meshmerize,s8j4j9,https://meshmerize.net/,WIRELESS,,,,"Meshmerize is an industry-grade mesh network software that enhances off-the-shelf WiFi hardware to deploy an ultra-reliable mesh network, ensuring highly reliable, resilient, and low-latency connectivity specifically designed for moving machines.",,,,https://twitter.com/meshmerizenet,,,https://meshmerize.net/blog/,,https://www.linkedin.com/company/meshmerize/,
Meshtastic,8b6kci,https://meshtastic.org/,WIRELESS,,,,"Meshtastic is an open source, off-grid, decentralized, mesh network built to run on affordable, low-power devices.",,,,https://twitter.com/TheMeshtastic,867578229534359593,,,https://github.com/meshtastic,,
Meson,wop23m,https://www.meson.network/,COMPUTE,ETHEREUM,MSN,meson-network,Meson is building a decentralized CDN and Bandwidth Exchange.,CDN,,,,784251111678148608,,,,,
Metablox,k5fxwj,https://metablox.io/,WIRELESS,,,,"Metablox is a provider of enterprise-grade WiFi roaming solutions, delivering worldwide public access.",,,,https://twitter.com/metablox,916937100744597548,,https://metabloxnetwork.medium.com/metablox-x-cryptolab-ama-recap-highlights-ba556d3ce506,https://github.com/MetaBloxIO,https://www.linkedin.com/company/metablox/,
MetaEngine,l7klou,https://www.metaengine.gg/,NOT_DEPIN,,,,MetaEngine is a decentralized all-in-one platform for the development and publishing of GameFi / Metaverse games and apps.,Gaming,,,https://twitter.com/meta_engine,915343753726799902,https://t.me/metaEngine_Community,https://metaengine.medium.com/,,https://www.linkedin.com/company/metaengine/,
Metafi,cu6hqb,https://www.metafi.org/,NOT_DEPIN,,,,MetaFi is a crowdfunding ecosystem that allows users to acquire tokens of upcoming technology innovators.,DeFi,ZZ,,https://twitter.com/MetaFi_Official,,,https://medium.com/easify-network/a-brief-about-metafi-cf3f1736e930,https://github.com/metafiofficial,https://uk.linkedin.com/company/meta-fi,
MetaFlyers,k9uwcc,https://www.metaflyers.xyz,NOT_DEPIN,,,,"MetaFlyers: a decentralized rewards marketplace connecting consumers, brands, and NFT communities.",Rewards,,,https://twitter.com/metaflyers,,,https://medium.com/@metaflyers,,https://www.linkedin.com/company/metaflyers?trk=similar-pages,
MetafourAI,wko5kg,,AI,,,,MetafourAI is developing telepathy-enabled apps using EEG signals and language models.,,,,,,,,,,
MetaGravity,jvfvyy,https://www.metagravity.com/,COMPUTE,,,,MetaGravity is a company building distributed compute infrastructure for metaverse gaming and virtual world simulations.,Gaming,,,https://twitter.com/MetaGravity_,885910230007951460,https://t.me/Felikxz,https://metagravity.medium.com/,,https://www.linkedin.com/company/metagravityltd,
Metale,qvmpry,https://www.metale.world/,NOT_DEPIN,,,,"Metale Protocol is a peer-to-peer web3 content distribution protocol that provides on-chain services for content subscription, transparent profit-sharing, and asset transactions.",,ZZ,,https://twitter.com/MetaleProtocol,,,,,,
MetaMirror,trtwoi,https://www.metamirror.space/,NOT_DEPIN,,,,"MetaMirror is specializing in Decentralized Identity (DID), focused on empowering individuals with control over their personal data.",,,,https://twitter.com/Auth3MetaMirror,885347675510288444,https://t.me/MetaMirror,https://medium.com/metamirror,,https://www.linkedin.com/company/metamirror/about/,
MetaPhone,prs8dc,https://metaphone.io/,SENSORS,,,,"MetaPhone is a Web3-native smartphone project powered by the TON blockchain, fostering a comprehensive TON ecosystem and enabling users to access sought-after TON applications while participating in a decentralized marketing network.",Mobile,ZZ,,https://twitter.com/metaphone_ton,,,,,,
MetaSafe,z41ick,https://metasafe.one/,COMPUTE,,,,The MetaSafe platform is a decentralized storage and peer-to-peer network that enables anyone with an Internet connection to store their information securely from any computing device.,Storage,W. L.,,,,https://t.me/+qAdGHkxRl_RjMjAx,,,http://www.linkedin.com/company/grupometasafe,
MetaSpace,65et59,https://www.metaspacechain.com/,NOT_DEPIN,,,,"MetaSpace: Decentralized 3D metaverse for interaction, gaming, concerts, and NFT trading.",,,,https://twitter.com/metaspace_verse,,https://t.me/MetaSpace_Metaverse,https://metaspace-metaverse.medium.com/,,http://www.linkedin.com/company/metaspace-academy,
Metaweave,4kyl37,https://metaweave.com/,BLOCKCHAIN_INFRA,,,,Metaweave is a social permadapp enabling direct interaction with the Blockweave using Arweave wallet.,,,,,,,,,,
Metaxar,kzbct0,https://metaxar.io/,NOT_DEPIN,NATIVE,XAR,,"Metaxar.io is a decentralized gaming marketplace and metaverse that offers a free-to-list platform for play-and-earn games, empowering developers and players globally by providing an ecosystem for creating games with earning potential.",,ZZ,,,,,,,,
Meterbox,smjywm,https://www.themeterbox.com/,ENERGY,,,,The Meter Box is used to accurately measure your power usage in live time.,,EV3 Sal,,,,,,,,
Metis,0mfb31,https://www.metis.io/,NOT_DEPIN,ETHEREUM,METIS,metis-token,Metis: Scalable platform for Ethereum & infrastructure development,L1/L2,,,https://twitter.com/MetisDAO,859838997874475008,https://t.me/MetisDAO,https://metisdao.medium.com/,https://github.com/MetisProtocol,http://www.linkedin.com/company/metis-io,
MEVFree,8sxorc,https://mevfree.com/,AI,ETHEREUM,MEVFREE,mevfree,MEVFree: Platform for crypto traders with tools and services to maximize profits.,,,,https://twitter.com/mevfree,1011294496123789322,https://t.me/MevFree,,https://github.com/mevfree,,
MicroAI,a69lpw,https://micro.ai/,NOT_DEPIN,,,,"MicroAI is an Edge AI-enablement company for the Manufacturing, O&G, Automotive, Telecom, and Silicon sectors.",ML,,,https://twitter.com/gomicroai?s=11,,,https://www.linkedin.com/company/microai-ai/,,,
MicroVisionChain,tt8j7l,https://www.microvisionchain.com/,NOT_DEPIN,NATIVE,SPACE,microvisionchain,"MicroVisionChain: UTXO-based public blockchain with PoW, high-concurrency, Layer-1 smart contracts, and DID solution.",,,,https://twitter.com/mvcglobal,1009003006408282112,https://t.me/mvcofficial,,https://github.com/mvc-labs/microvisionchain,https://www.linkedin.com/in/mvc-mvcglobal-3a3a24248/,
Millicent Labs,s1f9ke,https://www.millicent.io/,NOT_DEPIN,,,,Millicent Labs upgrades financial systems with distributed ledger technology.,,,,https://twitter.com/MillicentLabs,,,https://www.millicent.io/blog,,https://www.linkedin.com/company/millicentlabs/,
Mina,0mam0q,https://minaprotocol.com/,BLOCKCHAIN_INFRA,NATIVE,MINA,mina-protocol,"Mina is the world’s lightest blockchain, powered by participants. Rather than apply brute computing force, Mina uses advanced cryptography and recursive zk-SNARKs to design an entire blockchain that is and always will be about 22KB.",,ZZ,,,,,,,,
Mind Network,q3503f,https://mindnetwork.xyz/,NOT_DEPIN,,,,"Mind Network is a Zero Trust Layer that offers a security and data privacy solution that achieves true CrossFi scale, complying with regulatory requirements while staying true to Web3 principles of asset tokenization and individual data ownership.",FHE,EV3 Sal,,,,,,,,
Mindland,pheffj,https://mndlnd.xyz/,SENSORS,,,,Mindland is a meditation incentivization company that uses crypto incentives to encourage meditation practices.,Health & Fitness,ZZ,,https://twitter.com/MndlndOfficial,999441437743644782,,,,,
MindLanguage,mssc3j,https://mindlang.ai/,AI,,,,"Mind is an agnostic graph-based meta-programming language designed for both AI & humans, enabling easy program creation & modification through natural language.",,Sami,,,1184811001837797456,,,,,
Mindsync,gpjz8o,https://mindsync.ai/,AI,,MAI,,"Mindsync connects AI enthusiasts, miners, and businesses for AI solutions.",,,,https://twitter.com/mind_sync,,https://t.me/mindsyncai,https://medium.com/mindsync-ai,https://github.com/mindsync-ai,https://www.linkedin.com/company/mindsync/,
Minima,w75xgw,https://www.minima.global/,BLOCKCHAIN_INFRA,NATIVE,WMINIMA,wrapped-minima,Minima is a decentralized Layer 1 DePIN blockchain designed to be accessible to as many people as possible by making it compact enough to run on mobile and IoT devices.,"Mobile, IoT",,,https://twitter.com/Minima_Global,562272317930209280,https://t.me/Minima_Global,https://www.minima.global/,https://github.com/minima-global,http://www.linkedin.com/company/minimaglobal,
MintMe,6927wm,https://www.mintme.com/,NOT_DEPIN,ETHEREUM,MINTME,webchain,"MintMe secures Smart-Contract-powered DApps using internet-connected devices, leveraging CPU resources.",,,,https://twitter.com/mintmeproject,524539167720341514,https://t.me/joinchat/Hzio4lCr-95bHcbB1-RX9Q,,https://github.com/mintme-com,http://www.linkedin.com/company/mintme,
Mintstars,gt1ww4,https://www.mintstars.com/,NOT_DEPIN,,,,Mintstars is a subscription-based NFT platform empowering creators to control their content and earnings.,,,,https://twitter.com/MintStarsReal,938410181749002280,,,,http://www.linkedin.com/company/mintstars,
Mintycode,98du7c,https://mintycode.io/,WIRELESS,,,,MintyCode is a decentralized IP marketplace that offers new monetization opportunities and protects the copyright of software developers who contribute to open source.,,,,https://twitter.com/MintyCodeDao,,https://t.me/mintycodedao,https://mintycode.io/blog,,https://linkedin.com/company/mintycode-dao,
Mistral AI,dtkxu9,https://mistral.ai/,AI,,,,Mistral AI is an open and portable generative AI for devs and businesses.,,ZZ,,https://twitter.com/MistralAI,,,,,,
MobiFi,ars9qg,https://mobifi.io/,SENSORS,ETHEREUM,MOFI,mobifi,MobiFi rewards users for making smarter mobility decisions.,Ridesharing,,,https://twitter.com/mobifi,1141302849482006672,,https://medium.com/mobifi,,https://uk.linkedin.com/company/mobifi,
Mobilian,diyark,https://mobiliancoin.com/,AI,,,,Mobilian is a blockchain network empowering secure autonomous vehicles.,Auto,,,https://twitter.com/MobilianCoin,,https://t.me/mobiliancoin,,,https://www.linkedin.com/company/mobiliancoin/,
MODA,qwsoln,https://www.moda.audio/,NOT_DEPIN,ETHEREUM,MODA,moda-dao,"MODA DAO empowers music industry with NFTs, licensing, and DeFi.",,,,https://twitter.com/moda_dao,808463591102873601,https://t.me/modadao,,,https://www.linkedin.com/company/moda-foundation/,
Modal,xegpzk,https://modal.com/,COMPUTE,,,,"Modal Labs offers Modal, a runtime for data teams.",,,,https://twitter.com/modal_labs,,,,https://github.com/modal-labs,https://www.linkedin.com/company/modal-labs/,
Modulus,93up2s,https://www.moduluslabs.xyz/,AI,,,,An on-chain AI company that aims to bring AI on-chain with the world‚Äôs only ZKML prover,,,,https://twitter.com/ModulusLabs,,,https://medium.com/@ModulusLabs,https://github.com/Modulus-Labs,https://www.linkedin.com/company/moduluslabs/about/,
Moflix,u35fhl,https://www.moflixgroup.com/,WIRELESS,,,,Moflix enables telco operators to become the backbone of Web3.,,,,,,,,,,
Mogul,129mdn,https://www.mogul.club/,NOT_DEPIN,,,,Mogul is a blockchain-based platform enabling direct investment in cash-flowing properties for as little as $100.,RWA,,,,,,,,,
MOI,0wfhe4,https://iome.ai/,NOT_DEPIN,,,,MOI Protocol and IOMe: user-owned decentralized identities.,,,,,,,,,,
Molecule,w3p4bn,https://www.molecule.xyz/,NOT_DEPIN,ETHEREUM,IPT,,Molecule is a decentralized biotech protocol where drug development researchers and investors collaborate to invent therapeutics.,DeSci,ZZ,,https://twitter.com/Molecule_dao,,,,,,
Monad,b207ll,https://www.monad.xyz/,NOT_DEPIN,,,,"Monad is a decentralized, developer-forward Layer 1 smart contract platform that ushers in a new paradigm of possibility through pipelined execution of Ethereum transactions. ",,,,https://twitter.com/monad_xyz,1036357772826120242,https://t.me/monad_xyz,https://medium.com/monad-labs,,https://www.linkedin.com/company/monadlabs/,
monai,c9xdxq,https://monai.dev/,AI,ETHEREUM,MONAI,monai,"Monai is developing an uncensored suite of generative AI tools, including a flagship unrestricted LLM, integrated with the high-throughput, secure blockchain platform Monad for decentralized, scalable, and innovative AI applications.",,ZZ,,https://twitter.com/monaidev,,,,,,
Monte Carlo,tjf1xo,https://monte-carlo.ai/,AI,,,,Monte Carlo is a decentralized computing power protocol that incentivizes miners to provide off-chain computing power.,,,,https://twitter.com/montecarlostyle,,,,,http://www.linkedin.com/company/monte-carlo-fashions,
Moonbeam,xu30b0,https://moonbeam.network/,BLOCKCHAIN_INFRA,POLKADOT,GLMR,moonbeam,Moonbeam is a cross-chain smart contract platform allowing users to interact with multiple blockchains simultaneously.,,,,https://twitter.com/moonbeamnetwork,745382242326413442,,https://medium.com/moonbeam-network,,https://www.linkedin.com/company/moonbeaminc,
Moonwalk,vrcvor,https://moonwalk.fit/,SENSORS,,,,"Moonwalk is a fitness accountability app that combines daily goals with incentives. Users can set a daily step target, and stake their crypto. Achieving goals protects their deposit while failing leads to a forfeiture of a portion of their stake.",Health & Fitness,EV3 Sal,,https://twitter.com/moonwalkfitness,,,,,,
MOROS NET,adwvwk,https://morosnet.com/,AI,ETHEREUM,MOROS,moros-net,"MOROS NET is a radical, grassroots movement striving towards a truly decentralized AI landscape. They funding developers, hackers, and free-thinkers building systems that align with their egalitarian principles. MOROS is their governance token.",,,,,,,,,,
Morpheus,ocgn0p,https://www.morpheusai.org/,AI,ETHEREUM,MITX,morpheus-labs,"Morpheus is designed to incentivize the first peer-to-peer network of personal AIs, known as Smart Agents.",,EV3 Sal,,,1151741790408429580,,,https://github.com/MorpheusAIs/Morpheus/blob/main/ollama_instructions_in_pictures.md,,
Morpheus.Network,39uynx,https://morpheus.network/,BLOCKCHAIN_INFRA,ETHEREUM,MNW,morpheus-network,"Morpheus.Network is a supply chain SaaS middleware platform that integrates both legacy systems and emerging technologies like blockchain, IoT, and RFID.",,,,https://twitter.com/MNWSupplyChain,,https://t.me/MorpheusNetworkAnnouncements,https://news.morpheus.network/,,https://www.linkedin.com/company/morpheus-network/,
Moso,7xm8fe,https://moso.xyz/,NOT_DEPIN,,,,Moso is a crypto rewards platform and browser extension that enables users to earn the cryptocurrency of their choice while shopping from partnered merchants.,,ZZ,,https://twitter.com/mosohq,,,,,,
Motivus,6la025,http://motivus.cl/,COMPUTE,,,,Motivus: collaborative HPC for algorithm creation and distribution.,,,,https://twitter.com/motivushpcn,,,https://medium.com/@Motivus,https://github.com/motivus,https://www.linkedin.com/company/motivus/,
MoveZ,7gojkc,https://www.movez.me/,SENSORS,BINANCE,MOVEZ,movez,"MoveZ is a Web3 app designed with a sustainable move-to-earn economy that rewards users for hitting their exercise milestones. Whether it’s walking, running, swimming, surfing, or something else, anyone can earn token-based rewards for their efforts.",,ZZ,,,,,,,,
Multisynq,5c2tug,https://multisynq.io/,WIRELESS,,,,"Multisynq is a decentralized, low-latency Synchronization Network, allowing individuals to monetize their surplus internet connection by selling bandwidth to developers creating unified experiences on the Internet.",,ZZ,,https://twitter.com/multisynq,,,,,,
Muon,fhr20m,https://www.muon.net/,BLOCKCHAIN_INFRA,,MUON,,"Muon is a global data availability layer that enables running Web2 and Web3 applications, off-chain, on-chain, and cross-chain. The network acts as a base layer that receives and sends messages from the real world and between blockchains.",Oracle,ZZ,,,,,,,,
MurAll,kvmdaw,https://murall.art/home,AI,ETHEREUM,PAINT,paint,MurAll: A blockchain platform for artists to create art using limited token called PAINT.,,,,https://twitter.com/MurAll_art,648882111272714251,https://t.me/MurALLart,https://murall.medium.com/,https://github.com/murall-art,,
MVL,ucujvj,https://mvlchain.io/,SENSORS,ETHEREUM,MVL,mass-vehicle-ledger,"MVL(Mass Vehicle Ledger) is a new incentive-based blockchain mobility ecosystem and a zero-commission ride-hailing service. ",,ZZ,,https://twitter.com/mvlchain,,,,,,
MXC,h1l8jh,https://www.mxc.org/,SENSORS,ETHEREUM,MXC,mxc,MXC is a L3 zkEVM built on top of a decentralized network of LPWAN radio nodes.,,,,https://twitter.com/mxcfoundation,445679878004801547,https://t.me/mxcfoundation,https://medium.com/mxc,https://github.com/mxc-foundation,http://www.linkedin.com/company/mxc-foundation,
Mycelium,vi4exr,https://www.myceliumnetworks.com/,WIRELESS,,,,Mycelium is an enterprise DePIN deployer and operator of the Mycelium Testbed.,,,,https://twitter.com/myceliumx,787027688548073522,,https://medium.com/@MyceliumX,,http://www.linkedin.com/company/myceliumnetworks,
MyGrid,rpvm9n,https://www.mygrid.energy/,ENERGY,,,,MyGrid is a start-up on a mission to empower all households to partake in the energy transition and regain energy ownership.,,,,https://twitter.com/mygridgreen,,,https://www.mygrid.energy/blog,,https://www.linkedin.com/company/mygrid-energy/,
myMessage,1rcuf0,https://www.mymessage.io/,COMPUTE,,,,"myMessage is a decentralized data storage protocol enabling secure, low-cost storage and transfer.",Storage,ZZ,,https://twitter.com/myMessageOS,895919618034659349,https://t.me/mymessageEN,https://medium.com/@myMessage,https://github.com/myMessageio,https://linkedin.com/company/mymessageofficial,
Myna,wqoxyk,https://www.myna.co/,NOT_DEPIN,,,,"Myna is a platform built by collectors, for collectors, that empowers goods to be traded beyond their physical form.",,,,https://twitter.com/mynaswap,,,,,https://www.linkedin.com/company/mynaswap/,
Myria,2vu694,https://myria.com/,NOT_DEPIN,,,,Myria is a blockchain gaming ecosystem powered by Myria's Ethereum L2 scaling solution.,,,,,917422746823196682,,,,,
Myriad,lass0u,https://www.myriad.social/,NOT_DEPIN,,XMY,myriadcoin,"Myriad Social is a decentralized, censorship-resistant social network that enables users to host their own social network without centralized control.",,,,https://twitter.com/myriad_social,930740546799038494,https://t.me/myriadsocial,https://medium.com/myriad-social,https://github.com/myriadsocial,https://www.linkedin.com/company/myriad-social/,
MyShell,1gfb8a,https://myshell.ai/,AI,,SHELL,,"MyShell is a decentralized and comprehensive platform for discovering, creating, and staking AI-native apps.",,EV3 Sal,,,1122227993805336617,,,,,
Mysterium,8ci5ud,https://www.mysterium.network/,WIRELESS,NATIVE,MYST,mysterium,Mysterium is a decentralized wireless network.,,,,https://twitter.com/MysteriumNet,614079733663006750,https://t.me/mysterium_network,https://medium.com/mysterium-network,https://github.com/MysteriumNetwork,http://www.linkedin.com/company/mysteriumnet,
Mystiko,eakhga,https://mystick.network/,NOT_DEPIN,ETHEREUM,XZK,,"Mystiko operates as a universal ZK SDK, enhancing the scalability, interoperability, and confidentiality of blockchains.",ZK,ZZ,,https://twitter.com/MystikoNetwork,,,,,,
NakamotoGames,wdi885,https://www.nakamoto.games/,NOT_DEPIN,ETHEREUM,NAKA,nakamoto-games,"NakamotoGames is a play-to-earn gaming platform/ecosystem offering multiple fun and addictive crypto games. They aim to attract both gamers and game developers. Developers will also have the tools to launch and monetize their gaming creations. ",,ZZ,,,,,,,,
Naoris,h0wfdw,https://naorisprotocol.com/,COMPUTE,,CYBER,,Naoris Protocol is the Decentralized CyberSecurity Mesh that protects devices across the digital world from cyber threats and associated risks while enforcing CyberSecurity standards.,,EV3 Sal,,https://twitter.com/NaorisProtocol,,,,,,
Native Planet,tk0z9w,https://www.nativeplanet.io/hardware,COMPUTE,URBIT,,,Urbit hosting at home.,,EV3 Sal,,,,,,,,
NATIX,uq4s3v,https://www.natix.network/,SENSORS,,,,NATIX is a decentralized real-time mapping & surveillance network.,Auto,ZZ,,https://twitter.com/NATIXNetwork?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,https://medium.com/natix-io,https://github.com/natix-io,https://www.linkedin.com/company/natixio,
Navigate,sbfrwv,https://nvg8.io/,SENSORS,ETHEREUM,NVG8,,"Navigate is a platform that generates an AI-powered map using crowdsourced imagery from individuals who capture and upload content from devices like smartphones, drones, or dashcams. ",,ZZ,,,,,,,,
NavyAI,7m3jfl,https://navyai.xyz/,AI,,NAVY,,NavyAI is a Blockchain Layer on Solana for AI model training and self-learning.,,ZZ,,https://twitter.com/NavyAI_xyz,,,,,,
NEAR,dnmt6p,https://near.org/,NOT_DEPIN,NATIVE,NEAR,near,"NEAR is a layer one, sharded, proof-of-stake blockchain built with usability in mind. It allows developers to create and distribute decentralized apps on any blockchain",,,,https://twitter.com/nearprotocol,490367152054992913,https://t.me/cryptonear,https://near.org/blog,https://github.com/near/dx,https://www.linkedin.com/company/near-protocol-project/,
Nebula,dt5m92,https://nebulacloudnetwork.com/,COMPUTE,ETHEREUM,Nebula,nebula-2,"NEBULA is a blockchain project that simplifies cloud computing and decentralized storage, catering to both beginners and experienced users. It combines preconfigured machines, AI integration, and secure data storage to transform user interaction with digital and blockchain technologies.",,Mahesh | Escape Velocity,,https://twitter.com/NebulasCloud,,https://t.me/NebulasPortal,https://medium.com/@nebulateamsupport,,,
Nebulas,k6x5uj,https://www.nebulas.io/,BLOCKCHAIN_INFRA,ETHEREUM,NAS,nebulas,"Nebulas is an open-source, public blockchain focused on creating a true Autonomous Metanet. Nebulas' focus utilizing on-chain data for user interactions and collaboration.",,ZZ,,,,,,,,
Nectar,jd2kzh,https://trynectar.ai/,AI,,,,"Nectar AI is a decentralized AI companions platform, allowing users to interact with their dream AI partners through Image, Video, and AI Roleplay Chat.",,EV3 Sal,,https://twitter.com/TryNectarAI,,,,,,
Nephele,chs9nr,https://www.thenephelecloud.com/,COMPUTE,,NEP,,"Nephele is a cloud storage DePIN for web3 that is fully compatible with all Layer-2, services and applications from Ethereum.",Storage,ZZ,,https://twitter.com/nephelenetwork,,,,,,
Neptune Mutual,r4h43s,https://neptunemutual.com/,NOT_DEPIN,,NPM,neptune-mutual,Neptune Mutual is the first parametric insurance protocol created for Ethereum.,DeFi,,,https://twitter.com/neptunemutual,846975061163900938,https://t.me/neptunemutual,https://neptunemutual.com/blog/,https://github.com/neptune-mutual-blue,https://www.linkedin.com/company/neptune-mutual,
NerdBot,xk23m0,https://www.thedatanerd.io/,NOT_DEPIN,ETHEREUM,NERD,nerdbot,"NerdBot is the first on-chain, all-in-one analytics platform allowing users to analyze tokens and follow smart money while enabling DEX trade and portfolio management.",,,,https://twitter.com/onchaindatanerd?lang=en,,,,,https://www.linkedin.com/company/0xnerdbot/,
Nesa,5v5ofe,https://nesa.ai/,AI,NATIVE,NES,,"Nesa is a Layer-1 blockchain for AI that lets applications, protocols, and smart contracts seamlessly integrate with AI.",,ZZ,,https://twitter.com/nesaorg,,,,,,
Nesten,gazzlx,https://nesten.io/,WIRELESS,NATIVE,NIT,nesten,Nesten - telecom company revolutionizing industry with community-driven network ops & blockchain.,,,,,,,,,,
NetMind.AI,d2uaff,https://netmind.ai/home,COMPUTE,ETHEREUM,NMT,netmind-token,NetMind.AI enables deep learning model development for AI applications.,,,,https://twitter.com/NetMindAi,1050399764941906031,,,https://github.com/protagolabs,https://www.linkedin.com/company/netmind-ai/,
Nettensor,nmdg6j,https://www.nettensor.com/,AI,ETHEREUM,NAO,nettensor,Nettensor is an AI Infrastructure service provider that emphasizes ease of access and other additional features such as Privacy Layer and App Chain.,,ZZ,,https://twitter.com/nettensor,,,,,,
Network3,a246lv,https://network3.io/,WIRELESS,,,,Network3 enhances network security and privacy through distributed nodes.,VPN,,,https://twitter.com/network3_com,1073393648739307590,https://t.me/network3official,https://medium.com/@network3,,,
Neura,ly1om5,https://www.neuraprotocol.io/,AI,COSMOS,,,"Neura is a blockchain platform that integrates AI and cloud computing with Web3, offering decentralized GPU resources, IMOs for funding, and on-chain AI operations to revolutionize AI deployment and model training on the blockchain.",,ZZ,,https://twitter.com/Neura_io,,,,,,
Neurai,kntco7,https://neurai.org/,AI,,XNA,neurai,"Neurai: AI, analytics, decision making, predictive modeling, IoT using blockchain assets.",,,,https://twitter.com/neurai_io,1062678996208336896,,https://neuraiproject.medium.com/,,https://www.linkedin.com/company/neural-io/,
Neural Internet,b57y1r,https://neuralinternet.ai/,AI,,,,"Bittensor is a decentralized, blockchain-based machine learning network that powers Neural Internet, an AI R&D DAO.",,,,https://twitter.com/neural_internet,1039241590092353596,,https://medium.com/@neuralinternet,https://github.com/neuralinternet,https://linkedin.com/company/neural-internet,
Neural Radiance,p8tp6s,https://www.nerfbot.io/,AI,ETHEREUM,NERF,neural-radiance-field,Neural Radiance Fields enables users to generate immersive 3D environments and create realistic videos.,,,,https://twitter.com/nerf_erc20,,https://t.me/NERFERC20,https://medium.com/@NeRF_ERC20/nerf-bot-enabling-neural-radiance-fields-for-the-masses-aaa7bb63c4ab,https://github.com/Nerfbotxyz/,,
NeuralAgent,8deftt,https://neuralagent.ai/,WIRELESS,,,,NeuralAgent is a global network of low-cost transportation infrastructure.,,ZZ,,https://twitter.com/NeuralAgentGmbH,,,,https://github.com/neuralagent,https://www.linkedin.com/company/neuralagent,
Neuron,5fah7n,https://www.neuron.world/,SENSORS,,,,"Neuron is a decentralized network for building, finding, and connecting services. ​It provides IoT device discovery, connectivity, and settlement protocols for web, mobile, and embedded applications.",,ZZ,,https://twitter.com/Neuron_World,,,,,,
Neurosity,6bppe0,https://neurosity.co/,BLOCKCHAIN_INFRA,,,,Neurosity is a developer of neural devices and applications that translate human brain thoughts into actionable output.,Hardware,,,https://twitter.com/neurosity,635812828481323028,,https://medium.com/neurosity,https://github.com/neurosity,https://www.linkedin.com/company/neurosity,
Neutralx,1d8dh4,https://www.neutralx.com/,NOT_DEPIN,,,,Neutral is an exchange for environmental assets.,RWA,,,https://twitter.com/NeutralExchange,,,https://www.linkedin.com/company/neutral-exchange/about/,,,
Neutroon,uktna7,https://www.neutroon.com/,WIRELESS,,,,Neutroon is a Network-as-a-Service platform enabling seamless deployment and management of private cellular networks.,Software,ZZ,,https://twitter.com/Neutron_org,,https://t.me/NeutronCoin,,https://github.com/neutron-org,https://www.linkedin.com/company/neutroon/,
Nevermined,4rizhn,https://nevermined.io/,AI,,,,"Nevermined is a platform that enables the monetization and access control of digital assets, including AI services and data, using blockchain technology and Web3 principles.",,,,https://twitter.com/Nevermined_io,775670012446507028,,https://medium.com/nevermined-io,https://github.com/nevermined-io,https://www.linkedin.com/company/nevermined/,
NexBloc,i27v9c,https://www.nexbloc.com/,NOT_DEPIN,,,,Developer of a decentralized web platform intended to create a usable ecosystem of connected websites and applications using a domain naming system.,,,,https://twitter.com/nexbloc,,https://t.me/nexbloc,https://medium.com/nexbloc,,https://www.linkedin.com/company/nexbloc/,
NexGen Cloud,gw1fz5,https://www.nexgencloud.com/,COMPUTE,,,,NexGen Cloud is a European Cloud & Web3 IaaS business providing solutions for Web2 & Web3 ecosystems.,,ZZ,,https://twitter.com/CloudNexgen,,,,,https://www.linkedin.com/company/nexgen-cloud,
Nexis,8i0772,https://nexis.network/,BLOCKCHAIN_INFRA,NATIVE,NZT,,Nexis Network is a layer-1 blockchain infrastructure powering the decentralization of data for the future of AI and interoperable blockchain economies.,L1/L2,ZZ,,https://twitter.com/Nexis_Network,,,,,,
Nextdata,3wnonl,https://www.nextdata.com/,NOT_DEPIN,,,,Nextdata is unlocking the AI revolution with an operating system for decentralized data at scale.,,,,https://twitter.com/nextdatatec,,,,,https://www.linkedin.com/company/nextdata-technologies/about/,
Nexus,u7fpuf,https://nexus.io/,BLOCKCHAIN_INFRA,,NXS,nexus,"Nexus is a scalable, quantum-resistant blockchain securing a decentralized internet & OS, with auto-key management & free transactions.",,ZZ,,,,,,,,
NFAi,40loq1,https://nfa.ai/,AI,ETHEREUM,NFAI,not-financial-advice,"NFAi: decentralized hedge fund experiment focused on crypto data science, aiming to establish a profit-sharing fund.",,,,https://twitter.com/nfalabs,1065754973872341075,https://t.me/nfalabs,https://medium.com/@nfalabs,,,
NFPrompt,cellmj,https://nfprompt.io/,AI,BINANCE,NFP,nfprompt,"NFPrompt is the first Prompt Artist Platform in Web3, which lets users mint their imagination into an AI-generated NFT. Collectors and enthusiasts can buy/sell the NFT together with the prompt that was used to generate the image.",,ZZ,,,,,,,,
NFT3,z1ks7o,https://nft3.com/,BLOCKCHAIN_INFRA,,,,"NFT3 Labs is a virtual identity framework, enabling personal monetization and identity-lveraging in Web3 applications.",,,,https://twitter.com/nft3com,https://discord.com/invite/HgHuuS9wzx,https://t.me/nft3com,https://medium.com/nft3,https://github.com/nft3labs,http://www.linkedin.com/company/nft3,
NGRAVE,4tlww3,https://www.ngrave.io/,NOT_DEPIN,,,,NGRAVE is a blockchain company. Ngrave Zero is their air-gapped hardware wallet.,Wallet,,,https://twitter.com/ngrave_official,918179581201096765,,,https://github.com/ngraveio,https://www.linkedin.com/company/ngrave/,
nil Foundation,nnhjum,https://nil.foundation/,NOT_DEPIN,,,,"nil is a zkRollup that securely scales Ethereum to 60,000+ TPS through zkSharding, empowering web3 developers to build scalable, secure, and composable applications.",ZK,EV3 Sal,,,,,,,,
Nillion Network,qb5fdz,https://www.nillion.com/,NOT_DEPIN,,,,Nillion is a distributed computing platform that expands trustless infrastructure into new use cases and verticals.,L1/L2,,,https://twitter.com/nillionnetwork,248822834317492245,https://t.me/nillionnetwork,,,https://www.linkedin.com/company/nillionnetwork/,
Nimble,5x8vzf,https://www.nimble.technology/,AI,,NIMBLE,,"Nimble is building a composable AI protocol, enabling anyone to access state-of-the-art AI algorithms, data, and compute resources.",,ZZ,,,,,,,,
Nina,gbaodd,https://www.ninaprotocol.com/,NOT_DEPIN,,,,Nina is a self-publishing protocol for musicians.,,,,,829052641408450571,,,,,
Nirmaan,86xq79,,AI,,,,Nirmaan is a decentralized AI mining service democratizing access to AI networks through token staking and expert resource allocation.,,EV3 Sal,,https://twitter.com/nirmaanai,,,,,,
Nirvana,u2tfjc,https://nirvanalabs.io/,BLOCKCHAIN_INFRA,,,,Nirvana Labs: web3 infrastructure for blockchain apps.,RPC/Indexing,,,https://twitter.com/nirvanalabsai,934672374379479162,,https://blog.nirvanalabs.io/,https://github.com/search?q=nirvana+labs,https://www.linkedin.com/company/nirvana-labs-ai,
Nitro League,5m6iby,https://www.nitroleague.com/,NOT_DEPIN,ETHEREUM,NITRO,nitro-league,Nitro League is a decentralized game where players earn tokens racing futuristic cars and completing missions.,"Gaming, Rewards",,,https://twitter.com/nitroleaguegame,905746313247879209,https://t.me/nitroleaguegame,,,https://www.linkedin.com/company/nitro-league/,
Nitro,6ieha4,https://nitro.network/,WIRELESS,AVALANCHE,NCASH,nitro-network,"Nitro Network is building the largest decentralized private communication network powered by IoT combined with LoRaWAN and 3G/4G/5G. ",,ZZ,,,,,,,,
NKN,xi19vn,https://nkn.org/,COMPUTE,ETHEREUM,NKN,nkn,NKN is a peer-to-peer network connectivity protocol that enables decentralized and secure communication between devices.,,ZZ,,https://twitter.com/NKN_ORG,443413382737952778,https://t.me/nknorg,,https://github.com/nknorg,https://linkedin.com/company/nknorg,
NOBLEBLOCKS,t5iqmq,https://www.nobleblocks.com/,BLOCKCHAIN_INFRA,ETHEREUM,NOBL,,"NOBLEBLOCKS is a decentralized platform for scientific publishing, leveraging blockchain to democratize scientific knowledge and offering collaborative research, publication, and rewards in a global community.",DeSci,ZZ,,https://twitter.com/nobleblocks,,,,,,
Node,cxj848,https://nodes.ai/,COMPUTE,ETHEREUM,GPU,nodeai,"Node AI is a decentralized platform designed to facilitate access to GPU and AI resources, enabling users to rent or lend GPU power, and earn rewards.",GPUs,ZZ,,https://twitter.com/NodeAIETH,,,,,,
NodeOps,7qgg1c,https://nodeops.xyz/,AI,,,,"NodeOps provides AI Enabled simplified infrastructure specifically curated for Node Operators, and developers and designed to simplify the development process and operations for Web3 protocols.",,EV3 Sal,,,,,,,,
NodeShift,eivutq,https://nodeshift.com/,COMPUTE,,,,"NodeShift is a decentralized cloud provider that aims to commoditize storage and computing power, making it easier and more affordable for developers to build and host secure applications.",,ZZ,,https://twitter.com/nodeshiftcloud,,,,,,
NodeSynapse,zavzjq,https://nodesynapse.com/,COMPUTE,ETHEREUM,NS,nodesynapse,"NodeSynapse offers lend-and-rent nodes, RDPs, TPUs, Web3 infrastructure, web hosting, and GPU computing with a unique revenue-sharing model for token holders.",,ZZ,,https://twitter.com/nODESYNAPSE,,,,,,
Nodle,znawjs,https://www.nodle.com/,WIRELESS,ETHEREUM,NODL,nodle-network,Nodle is a smartphone-powered decentralized data network and payment infrastructure for IoT.,Positioning,,,https://twitter.com/nodlenetwork,804699025709465610,https://telegram.me/nodlecommunity,https://medium.com/nodle-io,https://github.com/NodleCode,https://www.linkedin.com/company/nodle,
noiseGPT,58bzlt,https://noisegpt.com/,AI,ETHEREUM,NOISEGPT,noisegpt,"NoiseGPT: decentralized AI ecosystem, offering unbiased and censorship-free AI tools and services.",,,,https://twitter.com/noisegpt,1079425803441426562,,https://medium.com/@noisegpt,,http://www.linkedin.com/company/noisegpt,
NomadPetition,fy5a0a,https://uprock.com/,NOT_DEPIN,,,,NomadPetition: Global citizens voices turned into actionable insights for governments.,Gov,,,,907363977527431270,,,,,
Nomota,9qmbef,https://nomota.nl/,AI,ETHEREUM,NMAI,nomotaai,"Nomota AI is a crypto ecosystem offering innovative solutions such as chatbots, image, voice, and music generation, alongside a VPS/GPU marketplace.",,ZZ,,https://twitter.com/nomotaai,,,,,,
NoorNation,dwfwvv,https://noornation.com/,ENERGY,,,,NoorNation is the first African Egypt-based renewable energy start-up bringing fully equipped decentralized energy and water infrastructure across Egypt and Sub-Saharan Africa.,,,,,,,,,https://www.linkedin.com/company/noornation/,
Nori,wy0s0u,https://nori.com/,ENERGY,,,,"Nori is a blockchain-based carbon removal marketplace that sells carbon credits to individuals and businesses to offset carbon emissions. Its marketplace provides financial rewards to farmers, who use regenerative farming practices that involve soil carbon sequestration.",,,,https://twitter.com/nori,,,https://nori.com/blog,https://github.com/nori-dot-eco,https://www.linkedin.com/company/noricarbonremoval/,
NorthTensor,7xmv35,https://www.northtensor.ai/,AI,,,,Our mission is to catalyze the decentralized AI movement by strategically investing in and developing on the most promising projects in the space.,,,,https://twitter.com/NorthTensorAI,,,,,,
Nosana,hdcghq,https://www.nosana.io/,COMPUTE,SOLANA,NOS,nosana,Nosana is a decentralized crowd computing network revolutionizing the development process of Metaverse projects.,,Sami,,https://twitter.com/nosana_ci,1177634967765909615,https://t.me/NosanaCI,https://nosana.medium.com/,https://github.com/nosana-ci,https://linkedin.com/company/nosana,
Nosh,k270zx,https://www.noshdelivery.co/,SERVICES,,,,Nosh is a food delivery provider aiming to economically sustain independent restaurants through their delivery service.,,,,,,,,,http://www.linkedin.com/company/noshdelivery,
Notus,b4jy5r,https://notuslabs.org/,NOT_DEPIN,,,,Notus Labs is a decentralized blockchain platform for dapp development.,L1/L2,ZZ,,https://twitter.com/NotusLabs,,,https://medium.com/@notus-labs,https://github.com/notus-labs,https://www.linkedin.com/company/notus-labs,
Nous Research,vj5riw,https://nousresearch.com/,AI,,,,"Nous Research is a private applied research group. They publish open-source work in the LLM domain, including local models, datasets, and core architectural improvements.",,,,https://twitter.com/NousResearch,,,,https://github.com/NousResearch,https://www.linkedin.com/company/nousresearch,
NovaNet,sc28us,https://www.novanet.xyz/,NOT_DEPIN,,,,NovaNet is a fast and highly portable peer-to-peer decentralized proving network for zero-knowledge proof.,ZK,EV3 Sal,,https://twitter.com/novanet_zkp,,,,,,
NovaRealChain,8igpcy,https://novarealchain.com/,ENERGY,,,,"Nova Real Chain is an RWA Layer-2 on Ethereum, Boosting Hydro Energy Yields. By combining computational power with real-world assets users can maximize their Hydro Mining Yields while contributing to a more sustainable and secure network.",,EV3 Sal,,https://twitter.com/novarealchain,,,,,,
NovaX,u9wqqu,https://novax.finance/,SENSORS,BINANCE,NOVAX,novax,"NovaX is a lifestyle fitness app that rewards users with blockchain tokens for engaging in physical activities like running, cycling, swimming, and yoga.",Health & Fitness,EV3 Sal,,https://twitter.com/NovaXM2E,,,,,,
Novelty,epv76j,https://novelty.today/,SERVICES,,,,"Novelty Today is a company that utilizes blockchain technology to create customizable and decentralized identities, providing individuals with a verifiable record of their skills & achievements.",,,,,,,,,https://www.linkedin.com/company/novelty-today/,
NOYA,qh9grw,https://noya.ai/,NOT_DEPIN,,,,"NOYA executes scalable Omnichain DeFi Strategies using Smart Liquidity that uses AI to predict and optimize yields, bridging fees, slippage, and rewards",,ZZ,,https://twitter.com/networknoya,,,,,,
nRide,x5z0mq,https://www.nride.com/,SERVICES,,,,"nRide is developing a peer-to-peer ride-hailing protocol that connects riders and drivers directly, eliminating intermediaries.",Ridesharing,W. L.,,https://twitter.com/nRide12,1084777014537502800,,,https://github.com/nride,https://www.linkedin.com/company/nride/,
Nuco Cloud,ldlosm,https://nuco.cloud/,COMPUTE,ETHEREUM,NCDT,nuco-cloud,Nuco.cloud is a sharing economy platform for network computing based on BOINC (Berkeley Open Infrastructure for Network Computing).,Storage,,,https://twitter.com/nucocloud,921502629551542332,https://t.me/officialnucocloudgroup,https://nucocloud.medium.com/,https://github.com/IronEagleCapital,https://www.linkedin.com/company/nuco-cloud,
Nuklai,avvhjq,https://www.nukl.ai/,BLOCKCHAIN_INFRA,AVALANCHE,NAI,nuklai,"Nuklai is a layer 1 blockchain infrastructure hosting a collaborative data ecosystem, providing world-class data to power the next generation of AI and Large Language Models (LLMs).",L1/L2,ZZ,,https://twitter.com/NuklaiData,,,,,,
Nulink,mdyk9b,https://www.nulink.org/,NOT_DEPIN,,,,NuLink is a Web3-based ZK Provable Data Privacy Solution for DApps.,ZK,EV3 Sal,,https://twitter.com/NuLink_,,,,,,
Numbers Protocol,9a91pe,https://www.numbersprotocol.io/,BLOCKCHAIN_INFRA,NATIVE,NUM,numbers-protocol,Numbers Protocol is an open and decentralized protocol designed to ensure provenance for all types of creative works created by humans & AI.,,ZZ,,https://twitter.com/numbersprotocol,,,,,,
Numerai,lw588k,https://numer.ai/,AI,ETHEREUM,NMR,numeraire,Numerai is an Ethereum-based platform for developers to experiment and create machine learning models.,,,,https://twitter.com/numerai,894652647515226152,https://t.me/NMR_Official,https://medium.com/numerai,https://github.com/numerai,http://www.linkedin.com/company/numerai,
NuNet,6wpm8m,https://www.nunet.io/,COMPUTE,ETHEREUM,NTX,nunet,NuNet is a computing framework that offers global distributed computing power and storage for decentralized networks.,,ZZ,,https://twitter.com/nunet_global,1033727051158536242,https://t.me/NuNet_community,https://medium.com/nunet,,https://www.linkedin.com/company/nunet-global/,
Nutbox,45u6hy,https://nutbox.io/,BLOCKCHAIN_INFRA,,,,Nutbox is a web3 DAO infrastructure enabling users to easily build blockchain-based organizations.,,,,https://twitter.com/NutboxDao,767954342132318260,https://t.me/nutbox_defi,https://medium.com/@nutbox.dao,https://github.com/nutbox-dao,http://www.linkedin.com/company/nutbox-defi,
Nuveaux,epici3,https://nuveauxtrading.com/,NOT_DEPIN,,,,Stealth trading system in progress.,,,,,,,,,,
Nym,5gc718,https://nymtech.net/,WIRELESS,ETHEREUM,NYM,nym,"Nym protects communication patterns, IP addresses and metadata for end-users, enterprise and infrastructure operators",,,,https://twitter.com/nymproject,824256813200834580,https://t.me/nymchan,https://blog.nymtech.net/,https://github.com/nymtech,http://www.linkedin.com/company/nymproject,
Oamo,74kro7,https://www.oamo.io/,BLOCKCHAIN_INFRA,,,,Oamo is a decentralized data broker that empowers internet users to own and monetize the value of their data,,,,https://twitter.com/Oamo_io,1104117518471270460,,https://medium.com/@Oamo_io,,https://ca.linkedin.com/company/oamo-io,
Oasis AI,bv4ah1,https://www.oasis.ai/,AI,,OAI,,"Oasis AI is a provider of a platform that offers AI services such as chat assistants, image generators, and speech-to-text. Users can earn $OAI by connecting to their network and leveraging existing GPU and CPU resources to power supported models.",,EV3 Sal,,https://twitter.com/OasisAI,,,,,,
Oasis Network,6exf75,https://oasisprotocol.org/,NOT_DEPIN,COSMOS,ROSE,oasis-network,"Oasis is a L1 blockchain network designed to be uniquely scalable, privacy-first and versatile. The Network has two main architectural components, the consensus layer and the ParaTime layer.",,,,,748635004384313474,,,,,
Obi,0ixv4e,https://www.rideobi.com/,SERVICES,,,,"Obi - The cheapest ride, every time.",,EV3 Sal,,,,,,,,
Obligate,v187v2,https://www.obligate.com/,BLOCKCHAIN_INFRA,,,,"Obligate is a revolutionary fintech company leveraging blockchain to streamline the debt securities market, reducing issuance time and cutting costs.",,ZZ,,,,,,,,
Obol,56jqa5,https://obol.tech/,NOT_DEPIN,,,,"The Obol Network is an Ethereum-aligned Distributed Validator Middleware for trust-minimized staking that enables people to create, test, run & co-ordinate distributed validators.",,,,,849256203614945310,,,,,
OBORTECH,c95uzb,https://www.obortech.io/,SENSORS,ETHEREUM,OBOT,obortech,"OBORTECH is developing a decentralized and democratic collaboration ecosystem called Smart Hub, a unified communication and data exchange hub underpinned by blockchain and IoT for all actors in the supply chain.",,ZZ,,https://twitter.com/OBORTECHhub,,,,,,
Ocean,qbhkmt,https://oceanprotocol.com/,BLOCKCHAIN_INFRA,ETHEREUM,OCEAN,ocean-protocol,Ocean Protocol is a data exchange protocol enabling decentralized data sharing and monetization.,,,,https://twitter.com/oceanprotocol,612953348487905282,https://t.me/OceanProtocol_Community,https://medium.com/@TeamOcean,https://github.com/oceanprotocol,http://www.linkedin.com/company/ocean-protocol,
OceanFi,cq1hg8,https://oceanfi.io/,SENSORS,,,,"OceanFi is an innovative fitness app that combines blockchain with AI personalization, offering a wellness ecosystem for activities such as bodyweight exercises, yoga, and breathing techniques.",Health & Fitness,EV3 Sal,,https://twitter.com/OceanFi2023,,,,,,
OctaSpace,eppbxs,https://octa.space/,COMPUTE,NATIVE,OCTA,octaspace,OctaSpace is a decentralized cloud computing network.,"Storage, VPN",,,,973249548245925958,,,,,
Ojo,e21cru,https://ojo.network/,BLOCKCHAIN_INFRA,,,,Ojo is a decentralized security-first oracle network built to securely support ecosystem-native assets. Ojo sources price data from a catalog of on and off-chain sources and uses advanced security mechanisms to guarantee the integrity of the data.,Oracle,ZZ,,https://twitter.com/ojo_network,,,,,,
Ola,ajkc7b,https://www.olavm.org/,NOT_DEPIN,,,,"Ola is an open-source hybrid ZK-Rollup that contributes to a fair, decentralized, permissionless web3 world by empowering users through data ownership.",ZK,ZZ,,,,,,,,
OliveX,ww19sz,https://www.dosetoken.com/,SENSORS,ETHEREUM,DOSE,dose,"OliveX is a gamified fitness metaverse platform that enables real-world fitness to merge with the digital universe in order to engage consumers with brands, influences, and coaches.",Health & Fitness,ZZ,,https://twitter.com/olivexai,,,,,,
OMEGA Labs,9gnf5s,https://anytoany.omegatron.ai/,NOT_DEPIN,BITTENSOR,,,"OMEGA Labs is the builder of the largest open-source, decentralized, multimodal dataset for AGI research, powered by Bittensor.",,EV3 Sal,,https://twitter.com/omegalabsai,,,,,,
onaji,774cer,https://onaji.io/,AI,,,,"onaji is an ML infrastructure for blockchain asset market intelligence. The modular trading technology uses ML to contextualize digital assets and anticipate individual trader behaviors and market movements. ",,EV3 Sal,,https://twitter.com/onaji_AI,,,,,,
OnchainToolkit,r89wwl,https://www.onchaintoolkit.com/,NOT_DEPIN,,,,"OnchainToolkit is a multichain trading ecosystem equipped with smart autonomous AI Agents supercharged with GPUs, Fiat On-Ramp, and crosschain swaps.",,ZZ,,https://twitter.com/OnchainToolkit,,,,,,
ONINO,vybtqu,https://www.onino.io/,NOT_DEPIN,BINANCE,ONI,oni-token,ONINO enables developers to create identity-based dapps with privacy by default.,L1/L2,ZZ,,https://twitter.com/onino_io?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,969202888565993533,,https://medium.com/@OninoOfficial/5becebdee2fb,https://github.com/ONINO-IO,https://de.linkedin.com/company/onino-io,
Oniri,s8n10q,https://www.oniri.io/,NOT_DEPIN,,,,"Oniri is the world leading app related to dreams, helping people remember, understand and control their dreams.",,,,,,,,,http://www.linkedin.com/company/oniriapp,
Only1,ennb7m,https://only1.app/,BLOCKCHAIN_INFRA,SOLANA,LIKE,only1,Only1 is a membership-based social platform to enable creators to earn and engage with fans.,,,,https://twitter.com/JoinOnly1,842169399272013824,https://t.me/only1nft,,https://github.com/only1nft,https://www.linkedin.com/company/joinonly1/,
Onocoy,n77nem,https://www.onocoy.com/,SENSORS,SOLANA,,,Onocoy is a decentralized GNSS reference station network enabling high-precision geopositioning.,Positioning,,,https://twitter.com/onocoyRTK,1019999556747935794,,https://www.onocoy.com/news,https://gist.github.com/nathandem/0caa1b01a21ffe4d9a8f4c264ebf0c13,https://linkedin.com/company/onocoy,
Oone World,w8cnxv,http://oone.world/,SENSORS,,,,OONE World is a blockchain-based sustainable driving app that optimizes fuel usage and offers rewards for eco-driving.,Auto,ZZ,,https://twitter.com/Oone_World,,,,,,
Oort,apu26o,https://www.oortech.com/,COMPUTE,,,,"Oort is an AI-powered data cloud that unifies compute and storage resources, maximizing privacy and savings.",Storage,ZZ,,https://twitter.com/oort_io?lang=en,845638507610243152,https://t.me/oortechkorea,,,https://www.linkedin.com/company/oort-inc/,
Opacity,5276zx,https://www.opacity.io/,COMPUTE,ETHEREUM,OPCT,opacity,"Opacity is a secure, blockchain-based file storage service that ensures anonymity and encryption.",Storage,,,,,,,,,
OpClouds,getu2x,https://opclouds.tech/,COMPUTE,ETHEREUM,OPC,opclouds,"OpClouds is a decentralized Computing-Resource-as-a-Service (CRaaS) platform that provides GPU/VM rentals, GPU Cloud mining & AI Train-to-Earn for individuals and enterprises.",,ZZ,,https://twitter.com/opclouds_tech,,,,,,
Open Campus,uuubzi,https://www.opencampus.xyz/,NOT_DEPIN,,,,"Open Campus utilizes a new protocol allowing communities to create, own, and promote content they want to see in the world and enables educators to earn revenue and gain recognition for their contributions.",,EV3 Sal,,,1088034981814738995,,,,,
Open Forest Protocol,cu066p,https://www.openforestprotocol.org/,NOT_DEPIN,,,,"Open Forest Protocol (OFP) is a platform that allows forest projects of any size, anywhere in the world, to measure, report, and verify forest data on a blockchain. ",RWA,EV3 Sal,,https://twitter.com/OpenForest_,,,,,,
OPEN GPU,5ivasm,https://opengpu.network/,COMPUTE,ETHEREUM,OGPU,open-gpu,"OPEN GPU Network is a decentralized GPU Ecosystem that aims to optimize global AI research through scalable, decentralized GPU computing infrastructure. ",,ZZ,,https://twitter.com/openGPUnetwork,,,,,,
OPEN Ticketing Ecosystem,0pkfmg,https://onopen.xyz/,NOT_DEPIN,,OPN,,"OPEN is an ecosystem of builders, projects, and backers with the shared goal of bringing the ticketing industry on-chain through state-of-the-art accessible infrastructure that anyone can build upon and integrate for their ticketing needs.",RWA,EV3 Sal,,https://twitter.com/onopenxyz,,,,,,
OpenAgents,zh7o1l,https://openagents.com/,AI,,,,"OpenAgents is an open platform for AI agents. ",Agents,ZZ,,https://twitter.com/OpenAgentsInc,,,,,,
Openfabric AI,vzfbpq,https://openfabric.ai/,AI,BINANCE,OFN,openfabric,"Openfabric is a decentralized AI platform where the collaboration between AI innovators, data providers, businesses, and infrastructure providers.",,,,https://twitter.com/openfabricai,1080095228171665418,https://t.me/OpenFabricAI,https://openfabric.ai/blog,https://github.com/Openfabric,https://www.linkedin.com/company/openfabricai/,
OpenRank,i50yyy,https://openrank.com/,BLOCKCHAIN_INFRA,,,,OpenRank is building a decentralized reputation protocol to enable developers to create applications and run communities using an open ranking and recommendation layer.,,ZZ,,https://twitter.com/karma3labs,,,,,,
OpenSand,4heaha,https://opensand.ai/,BLOCKCHAIN_INFRA,,,,"OpenSand is an on-chain trustworthy AGI governance protocol that leverages decentralized storage, hybrid consensus mechanisms, and zero-knowledge proofs, to create AGIs that are transparent, auditable, and reflective of diverse community values.",,EV3 Sal,,https://twitter.com/opensand_ai,,,,,,
OpenServ,7x2h0s,https://openserv.ai/,AI,,OPEN,,OpenServ is a Marketplace for Autonomous AI Agents.,Agents,ZZ,,https://twitter.com/openservai,,,,,,
Opensquare,u11wz8,https://www.opensquare.network/,COMPUTE,POLKADOT,OSN,,"Opensquare is building a decentralized, trusted collaboration network. The collaboration data will be stored on blockchain, and personal credit will be built on it.",,,,,,,,,,
Operator,h3eeod,https://operator.io,AI,,,,"Build and deploy agents truly owned by you, then make them available to the world. Now in closed beta.",,EV3 Sal,,,,,,,,
Opis,jduldq,https://opisgroup.io/,COMPUTE,,,,"Opis Group is a British blockchain tech company focusing on computing, cloud, and gaming apps.",,ZZ,,,,,,,https://www.linkedin.com/company/opis-group-ltd/?originalSubdomain=uk,
Opolis,ees7sx,,,,,,"Opolis is a member-owned digital employment platform that uses blockchain technology to supply tools that independent workers can use to manage their employment benefits, payroll, and shared services.",,,,https://twitter.com/opolis,,,,,,
OpSec,bmg83m,https://opsec.software/,COMPUTE,ETHEREUM,OPS,opsec,"OpSec Ecosystem is a privacy-focused network dedicated to making operations on the cloud very seamless and efficient. OpSec decentralized cloud solutions range from high-level nodes to light-speed router devices, GPUs, and hosting services.",,ZZ,,,,,,,,
Optimism,3lytvj,https://www.optimism.io/,NOT_DEPIN,NATIVE,OP,optimism,OP Mainnet is a low-cost and lightning-fast Ethereum L2 blockchain that uses optimistic rollups. Optimism also has a Superchain thesis. This is the idea of connecting multiple Layer 2 networks through shared code and the ability to interact with each other.,,,,,667044843901681675,,,,,
Ora,l6awms,https://www.ora.io/,BLOCKCHAIN_INFRA,,,,Ora is a programmable zkOracle for blockchain security and developer empowerment.,Oracle,,,https://twitter.com/OraProtocol,1021130462317523027,,https://hyperoracle.medium.com/,https://github.com/hyperoracle,http://www.linkedin.com/company/hyperoracle,
Oraichain,qzneji,https://orai.io/,AI,ETHEREUM,ORAI,oraichain-token,Oraichain: AI oracle and ecosystem aiming to be the first AI Layer 1 in the Blockchain sphere.,,,,https://twitter.com/oraichain,943096297735487488,https://t.me/oraichain,https://oraichain.medium.com/,https://github.com/oraichain,http://www.linkedin.com/company/oraichain,
Orakl,01mwsx,https://orakl.network/,BLOCKCHAIN_INFRA,,,,"Orakl Network is a fast, reliable native token oracle that provides Data Feed, Verifiable Random Function, Request-Response, and Proof of Reserve solutions.",Oracle,ZZ,,https://twitter.com/oraklnetwork,,,,,,
Orbofi AI,1sydts,https://www.orbofi.com/,AI,ETHEREUM,OBI,orbofi-ai,"Orbofi is the ultimate AI-generated content engine for web3, games, and every online community.",,,,https://twitter.com/Orbofi,935221939797127309,https://t.me/orbofi,https://orbofi.medium.com/,,https://www.linkedin.com/company/orbofi/,
Orbuculum,7tvays,https://orbuculum.xyz/,NOT_DEPIN,,,,Orbuculum is a fully open-source and geopolitically neutral platform (dApp) to monetize and process (Earth Observation) Data & AI models.,,,,https://twitter.com/dlt_eo,,,,,https://www.linkedin.com/company/dlteo-gmbh,
Orchai,h6vfie,https://orchai.io/,AI,,,,Orchai: AI-powered DeFi platform optimizing asset flow.,DeFi,,,https://twitter.com/orchai_protocol,1001025635302522960,https://t.me/orchaiofficial,,,https://www.linkedin.com/company/orchai/?originalSubdomain=vn,
Orchid,vg1qec,https://www.orchid.com/,WIRELESS,ETHEREUM,OXT,orchid-protocol,Orchid is a decentralized onion routing network incentivized through multi-hop VPN clients.,VPN,,,https://twitter.com/OrchidProtocol,804699025709465610,https://www.t.me/OrchidOfficial,,https://github.com/OrchidTechnologies,https://www.linkedin.com/company/orchidprotocol,
Ore,o17tkv,https://ore.supply/,BLOCKCHAIN_INFRA,SOLANA,ORE,,"Ore is a digital currency that users can mine from anywhere, at home or on their phone. It uses a novel proof-of-work algorithm to guarantee no miner can ever be starved out from earning rewards.",,ZZ,,https://twitter.com/OreSupply,,,,,,
Origin,5kkva3,https://originsystems.xyz/,AI,,,,Origin Systems is a company that simplifies the process of getting started with LLMs.,,,,https://twitter.com/useorigin,,,,,https://www.linkedin.com/company/origin-financialsf/,
OriginTrail,v9wsjb,https://origintrail.io/,AI,POLKADOT,TRAC,origintrail,OriginTrail is a decentralized knowledge graph enabling trustless knowledge sharing for everyone.,Mobile,,,https://twitter.com/origin_trail,460837319025623050,https://t.me/origintrail,https://medium.com/origintrail,https://github.com/OriginTrail,http://www.linkedin.com/company/origintrail,
Otacon,4fbpu6,https://otacon.ai/,AI,ETHEREUM,OTACON,otacon-ai,"Otacon is a cybersecurity protocol that bridges the gap between cybersecurity demand and supply, by enabling anyone with a computer to become a Bug Bounty Hunter.",,Mahesh | Escape Velocity,,,1097834584693035078,,,,,
Othentic,krz8o6,https://www.othentic.xyz/,BLOCKCHAIN_INFRA,,,,Othentic Stack is a library of components to build distributed systems in the shared security environment.,,ZZ,,https://twitter.com/0xOthentic,,,,,,
OtoCo,h8fk7d,https://otoco.io/,BLOCKCHAIN_INFRA,,,,"OtoCo builds tools for forming, funding, and governing legal entities on blockchain.",Legal,ZZ,,https://twitter.com/otoco_io,,https://t.me/TheRoadToOtoco,,https://github.com/otoco-io,https://linkedin.com/company/otoco,
Over the Reality,140geb,https://www.overthereality.ai/,SENSORS,ETHEREUM,OVR,ovr,Over the Reality is a Spatial Computing AR Platform that allows users to create immersive digital versions of actual locations using their smartphones and earn rewards.,,ZZ,,https://twitter.com/OVRtheReality,,,,,,
Overlai,fy5d5m,https://www.overlai.app/,BLOCKCHAIN_INFRA,,,,"Overlai is an AI photo protection app for creators that combines Distributed Ledger Technology (DLT), decentralized storage, and advanced watermarks to protect photos from being added to AI datasets.",,ZZ,,https://twitter.com/overlai_app,,,,,,
Overtime,ak9wb5,https://www.overtimemarkets.xyz/,NOT_DEPIN,,,,THE WEB3 SPORTS MARKETS REVOLUTION,,EV3 Sal,,,906484044915687464,,,,,
OVOO,xmgk65,https://ovoo.pl/,WIRELESS,,,,"OVOO is a Telco systems development company that offers Online Charging Systems, Real-time recharging systems, VPABX, and eSIM solutions.",,EV3 Sal,,,,,,,,
Owl,ok01cq,https://owlnetwork.xyz/,COMPUTE,,OWL,,Owl is a blockchain-powered decentralized location data network designed for Web3 projects.,,EV3 Sal,,,,,,,,
OxAI,x3l1h6,https://oxai.com/,AI,ETHEREUM,OXAI,oxai-com,OxAI: Decentralized AI & blockchain for accessible secure computation.,,,,https://twitter.com/oxfordai,1067787661076594698,,https://medium.com/oxai,,https://www.linkedin.com/company/oxai/,
P00LS,6bqyjx,https://www.p00ls.io/,NOT_DEPIN,ETHEREUM,0,zer0zer0,P00LS is the premier platform for Web3 community-building.,,,,https://twitter.com/p00ls_,1175849217617559643,,https://medium.com/@P00LS,,https://www.linkedin.com/company/p00ls/,
PAAL AI,wmad1s,https://paalai.io/,AI,ETHEREUM,PAAL,paal-ai,PAAL AI is a decentralized network of autonomous agents that empowers artificial intelligence technology.,,,,https://twitter.com/PaalMind,1112405068717768824,https://t.me/paal_ai,,,,
Pacific NW Rural Broadband,6lqv0x,https://nwbroadbandalliance.org/,NOT_DEPIN,,,,The Pacific Northwest Rural Broadband Alliance is a registered non-profit ISP dedicated to facilitate the adoption of next generation blockhain-based decentralized infrastructure technologies.,,,,,834465390028521512,,https://nwba.medium.com/,,https://www.linkedin.com/company/nw-rural-broadband-alliance/,
PADS,dqmv0o,https://www.padsfinancial.com/,BLOCKCHAIN_INFRA,,,,Pads Financial is a Montreal based Fintech startup serving Canadian homeowners.,,,,,,,,,,
PaLM,5m1p6r,https://palmai.tech/,AI,ETHEREUM,PALM,palm-ai,"PaLM AI is a versatile AI chatbot that operates across multiple platforms, leveraging Google's AI technology to provide comprehensive conversational, coding, image generation, and vision capabilities",,ZZ,,,,,,,,
Pano AI,111p2s,https://www.pano.ai/,SENSORS,,,,Pano AI detects wildfires using deep learning AI & computer vision for real-time event identification & classification.,Environmental,ZZ,,https://twitter.com/Pano_AI,,,,,https://www.linkedin.com/company/pano-ai/about/,
Panther,srjeix,https://www.pantherprotocol.io/,NOT_DEPIN,ETHEREUM,ZKP,panther-protocol,Panther is a cross-protocol layer that uses zero-knowledge technology to build DeFi solutions that meet regulatory requirements and satisfy users' on-chain data privacy needs.,ZK,ZZ,,,,,,,,
Paradex,h4uvxu,https://www.paradex.trade/,BLOCKCHAIN_INFRA,,,,Stamp Network is an L2 blockchain focusing on supporting digital entities.,Prediction Market,,,,,,,,Healthdirect Australia | LinkedIn,
Parallel Colony,1thsxx,https://parallel.life/,NOT_DEPIN,,,,Parallel Colony is a simulation game where users partner with an AI Avatar to navigate a mining colony. Each avatar controls a 6551 wallet - meaning they own digital possessions [ERC 1155s and PRIME].,,EV3 Sal,,,,,,,,
PARSIQ,95eysn,https://parsiq.net/,NOT_DEPIN,ETHEREUM,PRQ,parsiq,PARSIQ is a full-suite data network to build the backend for web3 dApps and protocols.,,,,https://twitter.com/parsiq_net,803590539021778945,https://t.me/parsiq_group,https://medium.com/parsiq,https://github.com/parsiq,https://www.linkedin.com/company/parsiq/,
Particle,mcgnta,https://particle.network/,NOT_DEPIN,,,,The Intent-Centric Modular Access Layer of Web3,,EV3 Sal,,,973055032368967711,,,,,
Passage,aqaszb,https://www.passage.io/,NOT_DEPIN,NATIVE,PASG,passage,Passage connects virtual and physical experiences through creator-built games.,Gaming,,,https://twitter.com/passageio,932715756423086090,,,,https://linkedin.com/company/passageio,
Peach,3p49fs,https://peachinu.com/,NOT_DEPIN,,PEACH,peach-inu-bsc,Peach Inu is a memecoin bringing together a community of Princess Peach fans and creating a space for fun and exchange.,,,,,,,,,,
Peaq,vx7fas,https://www.peaq.network/,NOT_DEPIN,PEAQ,,,Peaq provides decentralized infrastructure and tools for dapp builders and users.,L1/L2,,,https://twitter.com/peaqnetwork?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,943486047625572392,https://t.me/s/peaqnetwork?before=165,https://medium.com/peaqnetwork,,https://www.linkedin.com/company/peaq-network/,
Peeranha,88zzed,https://peeranha.io/,NOT_DEPIN,,,,Peeranha is a free and distributed question and answer protocol for Web3 professionals. It helps structure the community knowledge base and rewards communities with crypto incentives.,,,,https://twitter.com/Peeranhaio?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,1013827920709554276,,https://medium.com/peeranha,https://github.com/peeranha,https://www.linkedin.com/company/peeranha/,
Penomo,48w7km,https://penomo.io/,ENERGY,,,,"Penomo is a platform for onchain capital financing of real-world renewable assets, powered by tokenization.",,,,https://twitter.com/penomoprotocol,,,,https://github.com/penomoprotocol,,
Perkable,z6715d,https://www.perkable.co/,BLOCKCHAIN_INFRA,IOTEX,,,Perkable is a decentralized advertising network connecting brands to local live events.,Rewards,,,https://twitter.com/perkableco,,,,,https://linkedin.com/company/perkableco,
Perpetual,z6ss7w,https://perp.com/,NOT_DEPIN,ETHEREUM,PERPS,perpetual-protocol,Perpetual Protocol is a software that seeks to incentivize a distributed network of computers to operate an exchange where users can buy and sell derivative contracts.,DeFi,,,https://twitter.com/perpprotocol,687397941383659579,https://t.me/perpetualprotocol,https://perpetualprotocol.medium.com/,,https://www.linkedin.com/company/perpetualprotocol/,
PerpsTech,x0ftnx,https://www.perps.tech/,NOT_DEPIN,ETHEREUM,,,"PerpsTech reimagines decentralized trading with its advanced on-chain perpetual contracts, anchored by the dynamic Friendtech share prices.",DeFi,,,https://twitter.com/perpstech,,https://t.me/perpstech,,,,
Petastic,g32gdz,https://www.petastic.com/,SENSORS,,,,"Petastic is a blockchain-based platform for Pet Parents, Service Providers, and Brand Companies.",,,,,,,,,https://linkedin.com/company/petastic-inc,
Phala,2zgyts,https://phala.network/,COMPUTE,ETHEREUM,PHA,pha,Phala Network is a decentralised off-chain compute infrastructure enabling developers to enhance smart contracts.,,,,https://twitter.com/PhalaNetwork?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,697726436211163147,,,https://github.com/Phala-Network,https://sg.linkedin.com/company/phala-network,
Phantasma,37fysf,https://phantasma.io/,NOT_DEPIN,ETHEREUM,SOUL,phantasma,"Phantasma is a scalable layer 1 smart contract blockchain designed for Gaming, Smart NFTs, and dApp integration.","L1/L2, Gaming",ZZ,,https://twitter.com/PhantasmaChain,404769727634997261,https://t.me/phantasma_io,,,https://linkedin.com/company/phantasmachain,
Phaver,oumqih,https://www.phaver.com/,NOT_DEPIN,,,,Phaver: decentralized social app rewarding users with tokens for sharing content.,,,,https://twitter.com/phaverapp?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,930833706460004402,,,,https://fi.linkedin.com/company/phaver,
Phisheye,tkra00,https://www.phisheye.io/,NOT_DEPIN,,,,"Phisheye is a proactive phishing prevention platform for the Web3 ecosystem, using Proof of Protection and NFT badges.",,,,,,,,,,
Phoenix,xper4k,https://phoenix.global/,AI,BINANCE,PHB,phoenix-global,Phoenix Global: Blockchain company enabling decentralized AI with AI model compute and federated learning.,,,,https://twitter.com/wix,,,https://phoenixglobal.medium.com/,,https://www.linkedin.com/company/phnxglobal/,
Photon,0k8gq4,https://www.photon.storage/,COMPUTE,,,,"Photon is a decentralized storage protocol for the metaverse, Web3, and cloud storage.",Storage,ZZ,,https://twitter.com/photon_storage,,https://t.me/photonstorage,https://medium.com/@photon.storage,https://github.com/photon-storage,,
Pi,xpggzk,https://minepi.com/,SENSORS,ALGORAND,PI,pi-network-iou,Pi is a decentralized environmental data collection network.,"Mining, Mobile",,,https://twitter.com/PiCoreTeam,,,https://pinetwork-official.medium.com/,,https://www.linkedin.com/company/pi-net/,
Picante,nu6vir,https://picante.io/index.html,NOT_DEPIN,,,,"PICANTE is a crypto portfolio and treasury management platform for Web3 companies, DAOs and investors.",,,,,,,,,,
Picogrid,ay3ajm,https://picogrid.com/,NOT_DEPIN,,,,Picogrid builds a common platform to connect defense and autonomous systems.,ML,,,https://twitter.com/zanemountcastle,,,https://medium.com/@zanemountcastle,https://github.com/zanemountcastle,https://www.linkedin.com/in/zanemountcastle/,
PiKNiK,9ixfcz,https://www.piknik.com/,COMPUTE,,,,PiKNiK is a turnkey Web3 storage provider that simplifies storage and facilitates Filecoin network access.,Storage,ZZ,,https://twitter.com/PiKNiK_US,,,,,http://www.linkedin.com/company/piknikus,
Pinata,u4rg0n,https://www.pinata.cloud/,NOT_DEPIN,,,,Pinata is an emerging web3 development platform that offers the advantage of scalable storage through IPFS.,,,,,908735106594779198,,,,,
Pindora,1pu75v,https://www.pindora.io/,COMPUTE,,,,"Pindora is a DePIN Aggregator that unifies major DePINs into one platform, connecting Web2 use cases with Web3 infrastructure through an Independent DePIN Marketplace powered by a decentralized node network and a Unified DePIN API.",,EV3 Sal,,https://twitter.com/depindora,,,,,,
PINGPONG,npspo4,https://pingpong.build/,COMPUTE,,,,PINGPONG is building a DePIN liquidity and service aggregator with a developer-facing all-in-one SDK and a community-facing DePIN liquidity mining through their DePIN liquidity hook money market.,,EV3 Sal,,https://twitter.com/pingpongbuild,,,,,,
Pink BNB,9abqiu,https://pnb.world/,AI,BINANCE,PNB,pink-bnb,Pink BNB categorizes and analyzes data for crypto predictions.,,,,https://twitter.com/pnbworld,,https://t.me/pnbworld,https://medium.com/@pnbworld,,,
Piphi,ksvenu,https://piphi.network/,SENSORS,ALGORAND,PIPHIN,,Piphi is a decentralized environmental data collection network.,"Environmental, Data",,,,,,,,,
Pitch,utndo1,https://pitch.com/,NOT_DEPIN,,,,Pitch is the collaborative presentation software for modern teams.,,,,https://www.twitter.com/pitch,,,https://www.linkedin.com/company/pitchhq,https://pitch.com/blog,https://github.com/pitch-io,
PixiaAI,fu1ijd,https://pixia.ai/,AI,ETHEREUM,PIXIA,pixiaai,"PixiaAI: Generates images/videos, collaboratively creates Blind Minting NFTs in minutes.",,,,https://twitter.com/PixiaAi,,https://t.me/PixiaAi,https://medium.com/vendettadao-blog/partnership-announcement-pixia-ai-37d71a071717,,,
Planck,y56p4w,https://plancknetwork.com/,COMPUTE,NATIVE,PLN,,Planck is a decentralized computing and AI platform that allows people to easily share their unused computer capacity and make money while providing developers with computing power and AI models to build AI-driven applications.,GPUs,ZZ,,https://twitter.com/PlanckNetwork,,,,,,
Planetwatch,qxqpla,https://www.planetwatch.io/,SENSORS,ALGORAND,PLANETS,planetwatch,Planetwatch is a decentralized network of air quality monitors.,,,,https://twitter.com/planetwatchsas,855002894717419521,https://t.me/planetwatch,https://medium.com/planet-watch,,https://www.linkedin.com/company/planetwatch/,
Plato,5onhxw,https://www.getplato.app/,SENSORS,,FAT,,Plato Protocol is a rewards protocol that rewards consumers for creating verified photo and video reviews of their restaurant experiences.,,EV3 Sal,,https://twitter.com/Plato2Earn,,,,,,
PlatON,3ic5uj,https://platon.network/,COMPUTE,ETHEREUM,LAT,platon-network,"PlatON is a Decentralized Privacy-Preserving AI Network that consists of a decentralized computation network, a decentralized AI marketplace, and a decentralized AI collaboration network.",,,,https://twitter.com/PlatON_Network,816899460478926870,https://t.me/PlatONNews,https://platon-network.medium.com/,https://github.com/PlatONnetwork,https://www.linkedin.com/company/platonnetwork/,
PlayZap,wypvyu,https://www.playzap.games/,NOT_DEPIN,BINANCE,PZP,playzap,"PlayZap Game is a skill-based competitive gaming platform that's Free to Play, however, their skill and performance in the games will enable them to earn rewards and tokens.",,ZZ,,,,,,,,
PlotX,ma0gu4,https://plotx.io/,NOT_DEPIN,ETHEREUM,PLOT,plotx,PlotX is an all-new crypto-based fantasy trivia game that allows users to answer simple questions and win crypto.,,ZZ,,,,,,,,
Plural,5uioqo,https://www.pluralenergy.co/,ENERGY,,,,"Plural Energy leverages blockchain to unlock new sources of capital to finance renewable energy projects by making it possible for anyone to invest directly. ",,ZZ,,https://twitter.com/pluralenergy,,,,,https://linkedin.com/company/drifeofficial,
Pokt,wreq2k,https://www.pokt.network/,BLOCKCHAIN_INFRA,NATIVE,POKT,pocket-network,Pokt is a company that empowers developers with reliable and performant RPC access to the open internet.,RPC/Indexing,,,https://twitter.com/POKTnetwork,553741558869131266,https://t.me/POKTnetwork,https://medium.com/@POKTnetwork,https://github.com/pokt-network,,
Polkamarket,qybaeu,https://www.polkamarkets.com/,NOT_DEPIN,ETHEREUM,POLK,polkamarkets,Polkamarket is an Autonomous Prediction Market Protocol.,,,,https://twitter.com/polkamarkets,829288369943085066,https://t.me/polkamarkets_announcements,https://medium.com/polkamarkets,https://github.com/Polkamarkets,https://www.linkedin.com/company/polkamarkets/,
Pollen Mobile,goiapt,https://www.pollenmobile.io/,WIRELESS,SOLANA,,,"Pollen Mobile is an anonymous, decentralized, high-speed, open-source, data-only wireless network enabled by a crypto-economy and owned/operated by its user community.",Private Wireless,ZZ,,https://twitter.com/PollenMobile,,,https://medium.com/@pollenmobile,https://github.com/pollen-mobile,https://www.linkedin.com/company/pollenmobile,
Polybase,a8p168,https://polybase.xyz/,COMPUTE,,,,"Polybase is a decentralized storage, index and query protocol for structured data.",RPC/Indexing,ZZ,,https://twitter.com/polybase_xyz?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,989985926434394192,https://twitter.com/polybase_xyz?lang=en,https://medium.com/@polybase,https://github.com/polybase,https://www.linkedin.com/company/polybase,
Polyhedra,1rz6f3,https://polyhedra.network/,BLOCKCHAIN_INFRA,ETHEREUM,ZK,polyhedra-network,"Polyhedra Network designs and implements zkBridge, providing trustless and efficient cross-chain infrastructures for layer-1 and layer-2 interoperability.",,ZZ,,https://twitter.com/PolyhedraZK,,,,,,
Polymathic,ba6xjm,https://polymathic-ai.org/,NOT_DEPIN,,,,Polymathic AI develops versatile foundation models for machine learning applications in various scientific fields.,,,,https://twitter.com/PolymathicAI,,,,,https://github.com/PolymathicAI,
Polymesh,8ou3di,https://polymesh.network/,NOT_DEPIN,POLKADOT,POLYX,polymesh,"Polymesh is an institutional-grade permissioned blockchain built specifically for regulated assets. It streamlines antiquated processes and solves challenges around governance, identity, compliance, confidentiality, and settlement.",,,,,,,,,,
PolySwarm,evuxhc,https://polyswarm.network/,NOT_DEPIN,ETHEREUM,NCT,polyswarm,PolySwarm is a crowdsourced threat intelligence marketplace where commercial solutions and specialized engines compete to detect threats and get compensated based on performance.,,ZZ,,https://twitter.com/PolySwarm,,,,,,
Polytrade,t247l9,https://www.polytrade.finance/,NOT_DEPIN,,TRADE,,"Polytrade is a decentralized finance platform that specializes in tokenizing real-world assets, offering a marketplace for investing in and managing trade finance.",RWA,,,,1072833135697481859,,,,,
Polywrap,efuprt,https://www.polywrap.io/,AI,,,,"Polywrap leverages AI agents to make peer-to-peer protocols easier to use, compose, and integrate into powerful applications.",Agents,ZZ,,https://twitter.com/polywrap_io,,,,,,
Ponder,84yzdf,https://ponder.one/,NOT_DEPIN,ETHEREUM,PNDR,,"Ponder is the ultimate, fully integrated, comparison engine that allows users to compare and select the best rates for Bridging, Swapping, Borrowing, Lending, NFTs, Insurance, and more.",Data,ZZ,,https://twitter.com/Ponder_One,,,,,,
Pool,ueuvax,https://www.pooldata.io/,NOT_DEPIN,,POOL,,"Pool provides a platform and associated services to support Data Unions to develop, scale and monetize.",,,,https://twitter.com/pooldata,,,https://www.pooldata.io/blog,,https://www.linkedin.com/company/pool-data/,
Port3,i6pg99,https://port3.io/,AI,ETHEREUM,PORT3,port3-network,"Port3 Network is a decentralized AI servicing protocol that connects extensive on-chain and off-chain datasets. It integrates and computes these datasets to establish a globally accessible data layer, empowering the automation of Web3 AI applications.",,ZZ,,https://twitter.com/Port3Network,,,,,,
Portalverse,6uwhcg,https://www.portalverse.net/,COMPUTE,,,,Decentralized cloud gaming and rendering network for immersive metaverses.,Gaming,,,https://twitter.com/Portalverse_Net,,,https://medium.com/@PORTALVERSE_NETWORK,https://github.com/Portalverse-Network,http://www.linkedin.com/company/portalverse-network,
Poseidon,hosx2o,https://www.poseidon.network/,COMPUTE,ETHEREUM,QQQ,,"Poseidon Network is a decentralized global network that collects and distributes idle resources from P2P devices, allowing everyone to build their own services in the fastest and cheapest way. This includes decentralized CDN, storage, and computing.",,ZZ,,https://twitter.com/QQQtoken,789323748267524097,https://t.me/QQQ_Poseidon_En,https://medium.com/poseidonnetwork,https://github.com/poseidon-network,https://www.linkedin.com/company/poseidon-network,
Postmint,rbr871,https://www.postmint.xyz/,SERVICES,,,,"Postmint is a Web3 creator marketplace that offers a post-to-earn feature that rewards creators for marketing Web3 projects to their audience, with a refer-to-earn affiliate program.",,EV3 Sal,,,,,,,,
PowBlocks,hsnpun,https://powblocks.com/,NOT_DEPIN,ETHEREUM,XPB,powblocks,"PowBlocks is a dedicated decentralized layer-1 proof-of-work blockchain designed for the mining community. It distinguishes itself through its unique emission model, ingrained 5% block reward reduction per month, and commitment to decentralization. ",,,,,1148694380635488256,,,,,
PowerLedger,9a54pc,https://www.powerledger.io/,ENERGY,ETHEREUM,POWR,power-ledger,Powerledger is developing the world-first blockchain enabled energy and environmental commodity trading platform to make energy markets more efficient.,,,,,,,,,,
Powerloom,gex7ot,https://powerloom.io/,BLOCKCHAIN_INFRA,,,,"Powerloom Protocol is a composable data network for web3 that helps users build advanced smart contract-based applications in DeFi, web3 gaming, and more with their streamlined cross-chain data integration.",,EV3 Sal,,https://twitter.com/PowerloomHQ,,,,,,
PowerPod,8l06hb,https://www.powerpod.pro/,ENERGY,ETHEREUM,PPD,,"PowerPod is a decentralized electric vehicle (EV) charging network, designed to rapidly establish and maintain low maintenance costs through a decentralized organizational structure and GamiFi scenes.",,ZZ,,https://twitter.com/PowerPod_People,,,,,,
PPIO,wnnyld,https://www.ppio.cloud/,COMPUTE,,,,PPIO is a distributed cloud computing company that provides decentralized distributed cloud services.,,,,https://twitter.com/ppio_official?lang=en,,,https://www.ppio.cloud/blog/,https://github.com/PPIO,https://www.linkedin.com/company/ppio/,
Praan,gzaq62,https://praan.io/,SENSORS,,,,Praan is a deep tech company that aims to build the world's most advanced air purification technologies for commercial and industrial applications.,,EV3 Sal,,,,,,,,
Pragma,yt094j,https://www.pragmaoracle.com/,BLOCKCHAIN_INFRA,,,,Pragma is a decentralized oracle network that enhances the transparency and reliability of accessing real-world data for smart contracts while leveraging zero-knowledge cryptography for security.,,,,https://twitter.com/PragmaOracle,1014980263895375923,,https://mirror.xyz/pragmagic.eth,https://github.com/Astraly-Labs/Pragma,https://www.linkedin.com/company/pragma-oracle/about/,
Precipitate,wapwul,https://www.precipitate.ai/,AI,ETHEREUM,RAIN,precipitate-ai,"Precipitate is building an AI Blockchain infrastructure that enables developers to leverage the protocol's processing power, data rendering, computation, storage, and bandwidth to develop and deploy dApps loaded with an Artificial Intelligence System.",,ZZ,,,,,,,,
PredX,7x1eif,https://predx.ai/,AI,,,,Predx is an AI-powered prediction market allowing users to propose and trade on the likelihood of various events across diverse topics.,,EV3 Sal,,https://twitter.com/PredX_AI,,,,,,
Prem,ygrlcj,https://www.premai.io/,AI,,,,Prem AI is a provider of an easy to use Generative AI Developer Platform. The Prem Network is a cutting-edge platform that leverages a distributed mesh of GPU provider to optimize the processing of large Open Source models.,,,,https://twitter.com/premai_io,1106634690825310228,,https://blog.premai.io/,https://github.com/premAI-io/,https://www.linkedin.com/company/premai/,
Presearch,7mrkii,https://presearch.io/,AI,ETHEREUM,PRE,presearch,Presearch is a decentralized search engine.,Rewards,,,https://twitter.com/presearchnews,961810036420665364,,-vhttps://news.presearch.io/-,,https://www.linkedin.com/company/presearchofficial/,
PrimeIntellect,qjinko,https://www.primeintellect.ai/,AI,,,,"PrimeIntellect commoditizes intelligence through a decentralized AI lab to advance scientific progress and human flourishing. It empowers developers with distributed computing, state-of-the-art open models, and an ecosystem to reach users.",,ZZ,,https://twitter.com/PrimeIntellect,,,,,,
Print Mining,1r3hw5,https://www.printmining.com/,BLOCKCHAIN_INFRA,ETHEREUM,PRINT,print-mining,"Print Mining operates a decentralized infrastructure network, utilizing renewable energy sources and DePIN technology to secure blockchain networks, while allowing users to stake their tokens and earn rewards from the mining process.",,ZZ,,https://twitter.com/Print_Mining,,,,,,
Privasea,2qrtt6,https://www.privasea.ai/,AI,,,,Privasea is a privacy-focused AI network utilizing Fully Homomorphic Encryption to secure data during computations.,,,,https://twitter.com/Privasea_tech,1100689673078190180,https://t.me/Privasea_ai,,,http://www.linkedin.com/company/privasea-tech,
PrivateAI,ox1kcr,https://www.privateai.com/,AI,NATIVE,PGPT,,"PrivateAI is a Peer-to-Peer Data-as-a-Service Platform that enables data owners and producers to upload, showcase, and monetize datasets in a secure environment with prospective buyers and users(AI engineers, data analysts, and research institutions).",DeSci,ZZ,,https://twitter.com/privateAIcom,,,,,,
Privio,x4ccoy,https://privio.co/,AI,,,,"Privio: AI B2B SaaS software offering Workflow Mgmt, Timekeeping, CRM, and more.",Software,,,https://twitter.com/PrivioTech,,,,,https://www.linkedin.com/company/privio/,
Prodia,51ffds,https://prodia.com/,NOT_DEPIN,,,,Prodia is an easy-to-use Stable Diffusion API for AI-powered image generation.,,,,https://twitter.com/prodialabs,961289090886692964,,,,https://www.linkedin.com/company/prodia-labs/,
Proof of Play,f0g5ra,https://www.proofofplay.com/,BLOCKCHAIN_INFRA,,,,Proof of Play is a game studio and blockchain technology company that makes decentralized games and gaming infrastructure.,,,,https://twitter.com/ProofOfPlay/,933037216811319327,,https://piratenation.medium.com/,,https://www.linkedin.com/company/proof-of-play/,
Propbase,687b4m,https://www.propbase.app/,NOT_DEPIN,,PROPS,,"Propbase is a highly-scalable, fast, and secure blockchain-based platform for property tokenization and transaction.",RWA,,,,1030685279327105044,,,,,
Propchain,pe85na,https://propchain.com/,NOT_DEPIN,,PROPC,,"Propchain develops on a blockchain-based ecosystem for real-world assets and proptech solutions. Prop.com is a consumer-focused platform for tokenized real estate investments, ensuring seamless access to real-world assets and a digitally intuitive interface for asset ownership.",RWA,,,,,,,,,
Prophetic,n08otn,https://propheticai.co/,SENSORS,,,,Prophetic is a neurotech company pioneering a lucid dream-inducing device.,Hardware,,,https://twitter.com/propheticai?s=21&t=fIjcfJIO-bBnd1u8k55iLQ,,,,,https://www.linkedin.com/company/propheticai/,
Protico,ourync,https://protico.io/,NOT_DEPIN,,,,Protico is a Web3 Chatting network aiming to realize a universal chatting interface for enterprises and users across all Apps.,,,,https://twitter.com/protico_io,,,,,https://www.linkedin.com/company/protico/,
Proto,uq5rfx,https://www.proto-geo.xyz/,SENSORS,,,,Proto is a geospatial data company revolutionizing the industry through a user-generated mapping platform.,Positioning,W. L.,,,,,,,http://www.linkedin.com/company/dp-proto,
Protomaps,qppebc,https://protomaps.com/,NOT_DEPIN,,,,A free and open source map of the world.,,EV3 Sal,,,,,,,,
Proton,zidol7,https://proton.me/mail,NOT_DEPIN,,,,Keep your conversations private. Proton Mail is an encrypted email service based in Switzerland.,,EV3 Sal,,,,,,,,
ProvenRun,f0pj2v,https://provenrun.com/,NOT_DEPIN,,,,ProvenRun is a developer of a cybersecurity platform for connected vehicles and smart devices.,Auto,EV3 Sal,,,,,,,,
ProximaX,nwrj6s,https://www.proximax.ltd/en/,COMPUTE,BINANCE,XPX,proximax,"ProximaX is a next-generation Integrated and Distributed Ledger Technology (IaDLT) infrastructure development platform that includes off-chain, peer-to-peer storage, streaming, database, Supercontracts, and blockchain layers.",,ZZ,,https://twitter.com/ProximaXGang,,,,https://github.com/proximax-storage,https://www.linkedin.com/company/proximaxltd,
Proximum,ciuuhf,https://www.proximum.xyz/,BLOCKCHAIN_INFRA,,,,"Proximum is a network protocol designed to enhance spacetime with nodes that provide secure, speed-of-light consensus, enabling trustless proximity-based interactions and fostering local economies through regional flatcoins.",,EV3 Sal,,https://twitter.com/proximum_xyz,,,,,,
PublicAI,11aqyc,https://www.publicai.io/,AI,,,,PublicAI is a decentralized network focused on RHLF.,,,,https://twitter.com/PublicAI_,1067993454468153426,https://t.me/Public_AI,https://medium.com/@contact_88042,https://github.com/PublicAI01,http://www.linkedin.com/company/publicai01,
PulseFolio,ry8vac,https://pulsefolios.com/,AI,BINANCE,PULSE,pulsefolio,Decentralized AI protocol for personalized investment strategies.,,,,https://twitter.com/PulseFolio/,,https://t.me/PulsefolioPortal,,,,
Puml,1zh76b,https://puml.io/,BLOCKCHAIN_INFRA,ETHEREUM,PUMLX,pumlx,"PUML Better Health is a Web3 Sports, Fitness and Wellness company gamifying healthy behaviours via challenges in the metaverse and real-world.",,,,https://twitter.com/pumlhealthio,,https://t.me/pumlofficial,https://pumlhealthio.medium.com/,https://github.com/pumlapp,https://www.linkedin.com/company/pumlhealthio/,
Pundi X,i0kfij,https://pundix.com/,SENSORS,ETHEREUM,PUNDIX,pundi-x-new,Pundi X is a leading developer of blockchain-powered devices to transform retail businesses with its blockchain-based point-of-sale solution. It allows retail merchants and consumers to conduct instantaneous in-store transactions on its blockchain.,,ZZ,,,,,,,,
Purebet,iaysmn,https://www.purebet.io/,NOT_DEPIN,,,,Purebet is a cryptocurrency gambling platform that offers secure and transparent betting options for users worldwide.,Gaming,,,https://www.twitter.com/Purebet_io,904758233233752094,,https://purebet.medium.com/,,,
PureFi,5u6ch6,https://purefi.io/,AI,ETHEREUM,UFI,purefi,PureFi: DeFi AML protocol providing cryptoasset analytics and AML/KYC procedures to protect users from risks.,,,,https://twitter.com/Purefi_Protocol,,https://t.me/purefiprotocol,https://medium.com/purefi,,http://www.linkedin.com/company/purefi,
Purple AI,n8xvmu,https://purplesquare.ai/,AI,ETHEREUM,PAI,purple-ai,PAI is a pioneering platform offering the ability to create custom-made image-generating AI bots.,ML,ZZ,,https://twitter.com/PurpleSquareAI,,,,,,
PurpleAir,3gn5ce,https://www2.purpleair.com/,SENSORS,,,,"PurpleAir makes high-precision air quality monitors that empower Community Scientists by collecting hyper-local, real-time air quality data and sharing it with the public.",,EV3 Sal,,,,,,,,
Purrfeed,vlqwqk,https://purrfeed.tech/,SENSORS,,CATCAT,,Purrfeed is a revolutionary DePIN platform leveraging blockchain to connect cat lovers with stray felines globally.,,EV3 Sal,,https://twitter.com/Purrfeed,,,,,,
Push,nhurl1,https://push.org/,WIRELESS,ETHEREUM,PUSH,ethereum-push-notification-service,"Push Protocol: web3 cross-chain network for dapps, wallets, and services.",,,,https://twitter.com/pushprotocol,717089384838594695,,https://medium.com/push-protocol,,https://www.linkedin.com/company/push-protocol,
Pyse,44h60y,https://pyse.in/,ENERGY,,,,Pyse enables retail investing in renewable energy assets.,RWA,,,,,,http://www.linkedin.com/company/pysefin,,,
Pyth,5fwmoi,https://pyth.network/,BLOCKCHAIN_INFRA,SOLANA,PYTH,pyth-network,"Pyth Network is an innovative decentralized oracle that sources financial market data from over 90 first-party publishers, including major exchanges and market-making firms worldwide (e.g., CBOE, Binance, OKX, Bybit, etc.), and distributes the data across 40+ blockchains",,EV3 Sal,,https://twitter.com/PythNetwork,826115122799837205,https://t.me/Pyth_Network,https://pyth.network/blog,https://github.com/pyth-network,https://www.linkedin.com/company/pyth-network,
Q Blocks,j988an,https://qblocks.cloud/,COMPUTE,,,,Developer of a decentralised GPU computing platform.,,,,https://twitter.com/blocks_q,,,,,https://www.linkedin.com/company/q-blocks/,
q-ctrl,69yd7k,https://q-ctrl.com/,NOT_DEPIN,,,,"Q-ctrl uniquely addresses the problem of hardware error and instability in quantum computing, entirely through software.",Quantum,,,https://twitter.com/qctrlHQ,,,,https://github.com/qctrl,https://www.linkedin.com/company/q-ctrl/,
QANplatform,w0b37b,https://qanplatform.com/en,NOT_DEPIN,ETHEREUM,QANX,qanplatform,QANplatform - quantum-resistant Layer 1 hybrid blockchain platform for developers and enterprises to build on top.,"L1/L2, Quantum",,,https://twitter.com/QANplatform,867778552534138941,https://t.me/QANplatform,https://qanplatform.medium.com/,https://github.com/QANplatform,https://www.linkedin.com/company/qanplatform/,
Qiro,alkph8,https://www.qiro.fi/,NOT_DEPIN,,,,Qiro is a unified credit protocol enabling RWA-backed DeFi lending.,RWA,ZZ,,,,,,,https://www.linkedin.com/company/qiro-group/,
QLC,xpng8u,http://www.qlcchain.org/,WIRELESS,,,,QLC Chain is a next-gen public Blockchain enabling service providers and network operators.,,,,https://twitter.com/kepple_io,,https://t.me/KeppleAnnouncements,https://keppleio.medium.com/,,http://www.linkedin.com/company/qlcchain,
QnA3,zllg2h,https://qna3.ai/vote,AI,BINANCE,QNA,,QnA3 is an AI-powered Web3 Knowledge Sharing Platform that helps users get answers to web3 questions.,,ZZ,,,,,,,,
QoWatt,ak3umt,https://qowatt.network/en/,ENERGY,MULTIVERSX,QWT,qowatt,"QoWatt is the first European public EV charging operator powered by Web3, integrating blockchain, NFT governance, and decentralized finance to promote sustainable electric mobility.",,ZZ,,https://twitter.com/QoWattEcosystem,,,,,,
QRL,qc35tq,https://www.theqrl.org/,NOT_DEPIN,NATIVE,QRL,quantum-resistant-ledger,QRL: Post-quantum secure value store and decentralized communication.,,,,https://twitter.com/QRLedger?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,https://medium.com/@QRL,https://github.com/topics/qrl,https://www.linkedin.com/company/qrl/about/,
Quadency,8tp7y2,https://quadency.com/,AI,ETHEREUM,QUAD,quadency,"Quadency simplifies crypto trading. It offers portfolio management, trading bots, and automation.",,,,https://twitter.com/quadency,,https://t.me/joinchat/Fbj0HRHlGePeT8QeV-4uBg,,https://github.com/quadency,https://www.linkedin.com/company/quadency,
Quai,38r0xr,https://qu.ai/,BLOCKCHAIN_INFRA,ETHEREUM,QUAI,,"Quai Network is a dynamic set of EVM-compatible blockchains that achieves 50,000+ TPS without compromising security or decentralization.",,ZZ,,,,,,,,
Quakecore,vpltzt,https://quakecore.com/,SENSORS,,,,"Quakecore is a decentralized earthquake detection network with IoT devices that provide real-time seismic data for early warnings, empowering communities.",,ZZ,,https://twitter.com/Quakecore_com,,,,,,
Qualoo,cfy81h,https://www.qualoo.io/,WIRELESS,,QXT,,"Qualoo is a global test network that utilizes user-generated connectivity data by incentivizing users to run tests and share data about their internet connectivity. ",,ZZ,,https://twitter.com/Qualoo_Network,,https://t.me/QualooNetwork,,,https://linkedin.com/company/qualoo,
Quant,7u7rag,https://quant.network/,NOT_DEPIN,ETHEREUM,QNT,quant-network,Quant is a blockchain project aiming to improve global information communication efficiency.,,,,https://twitter.com/quant_network,,,,,https://www.linkedin.com/company/quantnetwork/,
Quantinum,m5egmn,https://quantinium.cc/,WIRELESS,,,,"Quantinum: Institutional-grade blockchain, integrating decentralization, scalability, sustainability, and cybersecurity.",,,,,,,,,,
Quantria,puyp76,,SENSORS,,QNA,,Quantria aims to advance LLM training with the world's largest health data protocol by incentivizing users to share and monetize their anonymized health data from wearables and health apps.,,EV3 Sal,,https://twitter.com/quantria_xyz,,,,,,
Qubic,8hzipe,https://web.qubic.li/,AI,,,,Qubic Network is a smart contract platform for AI applications.,,,,https://twitter.com/qubic_network,768887649540243497,,,https://github.com/qubic-li,,
Quenta,mitdph,https://quenta.io/,NOT_DEPIN,,,,"Quenta is a derivatives trading platform built on IoTeX. ",,EV3 Sal,,https://twitter.com/Quenta_io,,,,,,
Questbook,c5xom1,https://questbook.app/,NOT_DEPIN,,,,Grants program management software.,,,,,,,,,,
Quick Intel,c46wsw,https://quickintel.io/,AI,ARBITRUM,QUICKI,quick-intel,"Quicki is a suite of safety and security multi-chain tools for Blockchain, providing real-time scam detection.",,,,https://twitter.com/quicki_erc,1080146033264312320,https://t.me/Quicki_TG,,,,
r datadao,t1hujj,https://www.rdatadao.org/home,NOT_DEPIN,,,,r/datadao is a community-owned data collective focused on reddit data and allows users to export their reddit data and contribute it to earn points based on their karma.,Data,ZZ,,https://twitter.com/rdatadao,,,,,,
Rad Live,ugl60x,https://rad.live/,NOT_DEPIN,,,,The first NFT-powered streaming service,,EV3 Sal,,,,,,,,
Radicle,n2u1ny,https://radicle.xyz/,SERVICES,,,,"Radicle is a peer-to-peer stack for building software together. Radicle functions as a peer-to-peer protocol where each user on the network runs identical software, known as the Radicle Stack.",,,,https://twitter.com/radicle,,,,,https://www.linkedin.com/company/radicleproject/,
Radiologex,0afttx,https://radiologex.com/,BLOCKCHAIN_INFRA,ETHEREUM,RDGX,r-dee-protocol,"The R-DEE Protocol by Radiologex is a bespoke blockchain network for healthcare IT, enhancing data security and operational efficiency in the medical sector.",Health & Fitness,ZZ,,https://www.linkedin.com/company/radiologex/,,,,,,
Radius,kttpsl,https://www.radius.space/,SERVICES,,,,Radius is a decentralized network that connects independent workers and teams to the best projects in web3.,,,,https://twitter.com/joinradius,943268752001228820,,https://mirror.xyz/joinradius.eth,,https://www.linkedin.com/company/tephralabs/about/,
Rádius,wy42w1,https://www.theradius.xyz/,NOT_DEPIN,,,,_Radius is a shared sequencing layer designed to eliminate harmful MEV and censorship while creating economic value for rollups.,,,,,,,,,,
Radix,orblk8,https://www.radixdlt.com/,NOT_DEPIN,ETHEREUM,XRD,radix,"Radix is a decentralized layer 1 protocol and public network designed specifically for DeFi applications that offers a scalable, secure, and developer-friendly platform.",,,,https://twitter.com/RadixDLT,417762285172555786,https://t.me/radix_dlt,https://www.radixdlt.com/blog,https://github.com/radixdlt,https://www.linkedin.com/company/radixdlt/,
Radworks,c6z05o,https://radworks.org/,NOT_DEPIN,ETHEREUM,RAD,radworks,"Radworks is building a sovereign developer stack that enables developers to host, collaborate on, and reward open-source code securely.",,ZZ,,https://twitter.com/radworks_,,,,,,
Raiinmaker,bw9zs2,https://www.raiinmaker.com/,AI,BINANCE,COIIN,,"Raiinmaker is a Web3 and AI tech company that offers the Raiinmaker AI Super App and Network Protocol, leveraging decentralized AI and Web3 to reward users for contributing to AI content creation, AI model training, and DePIN Node operation.",,ZZ,,https://twitter.com/Raiinmakerapp,,,,,,
Railbird,xlbuml,https://railbirdexchange.com/,NOT_DEPIN,,,,HyperCycle is building a tiny but essential component that enables AI Machines to transact with other AI machines in a sub-second finality which results in unprecedented emergence,Environmental,,,,,,,,https://www.linkedin.com/company/railbird/,
Railgun,9g0voz,https://railgun.org/,BLOCKCHAIN_INFRA,ETHEREUM,RAIL,railgun,"RAILGUN is a privacy protocol built on Ethereum, BSC, Polygon, and Arbitrum that uses Zero-Knowledge cryptography to enable private transactions and DeFi interactions without leaving the user's chosen blockchain. ",,ZZ,,,,,,,,
Rainfall,jtmdi1,https://rainfall.one/,AI,,,,Empower billions of people via self-sovereign Personal AI.,,EV3 Sal,,,,,,,,
Raiz,or2okw,https://www.raiz.farm/,BLOCKCHAIN_INFRA,,,,Raiz Building is a sustainable farming company providing energy efficient urban farms for local consumers.,,,,https://twitter.com/RaizFarms,,,https://medium.com/nearweek/an-introduction-to-raiz-vertical-farms-the-farms-of-the-future-e62094b782c3,,http://www.linkedin.com/company/raiz-vertical-farms,
RAK,v959ss,https://www.rakwireless.com/en-us,WIRELESS,,,,"RAKwireless is an industrial-leading connectivity provider that builds infrastructures and Modular Edge devices for IoT, Smart City, and Smart Agriculture markets.",Mining,,,https://twitter.com/RAKwireless,,,,https://github.com/RAKWireless,https://www.linkedin.com/company/rakwireless/,
Rangeview,u0jkdv,https://rangeview.co/,NOT_DEPIN,,,,Developer of industrial machinery designed to make aerospace parts.,,,,,,,,,https://www.linkedin.com/company/rangeview,
Rapidata,y47135,https://www.rapidata.ai/,SERVICES,,,,A startup offering a new method for human-verified data processing at scale. Rapidata solves a fundamental problem faced by the modern AI industry.,,,,,,,,,https://www.linkedin.com/company/rapidata/,
Raven,r3vxyu,https://www.ravenprotocol.com/,AI,BINANCE,RAVEN,raven-protocol,Raven Protocol is a decentralized compute network using idle power for fast AI training.,Training,ZZ,,https://twitter.com/raven_protocol,,https://t.me/ravenprotocol,https://medium.com/ravenprotocol,,https://linkedin.com/company/ravenprotocol,
RDDL,wbocde,https://www.rddl.io/,WIRELESS,,,,RDDL Network is a secure Refi and Defi protocol with trust anchors.,IoT,,,http://twitter.com/RDDLNetwork,1044693472390697011,,,https://github.com/rddl-network,https://www.linkedin.com/company/rddl/,
Re,v7t50o,https://re.xyz/,BLOCKCHAIN_INFRA,,,,"Re is a blockchain-powered protocol that connects its Members with insurance companies and baskets of insurance policies, allowing them to earn premiums and yield.",,ZZ,,,,,,,,
Reactions,57ba4r,https://reactions.wtf/,NOT_DEPIN,,,,"Reactions is a decentralized social curation protocol that let users react to NFTs, allowing consumers to build influence and earn with communities.",,,,https://twitter.com/reactions_lab,869644271068778616,,,,https://www.linkedin.com/company/reactions-wtf/about/,
READYgg,wjko90,https://ready.gg/,NOT_DEPIN,,,,READYgg is a Layer3 gaming infrastructure for the Web3 creator economy.,Gaming,,,https://twitter.com/TheReadyGames,449614151262928897,https://t.me/readygamesofficial,,,https://www.linkedin.com/company/ready-makers-inc/,
REAKTOR,q0snad,https://www.reaktortoken.com/,BLOCKCHAIN_INFRA,ETHEREUM,RKR,reaktor,Reaktor is a Gaming Layer 1 Blockchain and a Web3 gaming platform where users can generate and sell NFTs within their gaming store and players can play with P2E games.,Gaming,ZZ,,https://twitter.com/ReaktorToken,,,,,,
Realio,tg1g7b,https://realio.network/,NOT_DEPIN,ETHEREUM,RIO,realio-network,Realio manages real-world assets across multiple chains using Cosmos SDK and Tendermint.,,,,https://twitter.com/realio_network,1016319560581914747,https://en.telghub.com/content?id=43971,https://medium.com/@Realio_Network,https://github.com/realiotech,https://www.linkedin.com/company/realio,
Really,twhfdd,https://www.really.com/,WIRELESS,,,,"Really Wireless is a decentralized mobile network based in Austin, Texas.",,,,https://twitter.com/reallywireless,,,,,http://www.linkedin.com/company/reallywireless,
ReapChain,15hta4,https://reapchain.com/,NOT_DEPIN,ETHEREUM,REAP,reapchain,ReapChain: Hybrid blockchain solving trilemma and integrating IoT through distributed storage and PID.,IoT,,,https://twitter.com/ReapChain,,https://t.me/ReapchianOfficial,https://medium.com/reapchain,https://github.com/reapchain/testnets,,
Rebase,k8ft4w,https://rebase.gg/home,SENSORS,SOLANA,IRL,rebase-gg-irl,"Rebase is an AR Adventure and Move-to-Earn, Web3 Lifestyle App powered by Geo-Technology.",Health & Fitness,ZZ,,https://twitter.com/REBASEgg,,,,,,
Receipts,zowtah,https://receipts.xyz/,NOT_DEPIN,,,,zk verified credentials minting,ZK,EV3 Sal,,,,,,,,
Reclaim,6kjw4f,https://www.reclaimprotocol.org/,NOT_DEPIN,,,,User consent & data integrity guaranteed cryptographically.,ZK,,,,,,https://blog.reclaimprotocol.org/,,,
redacted,wprila,https://redacted.onl/,WIRELESS,,,,"redacted is developing a Decentralized VPN for Web3 with a pay-as-you-go model, on Solana",,ZZ,,,,,,,,
RedStone,ap3amn,https://redstone.finance/,BLOCKCHAIN_INFRA,,REDSTONE,redstone,"RedStone is an Oracle that delivers frequently updated, reliable, and diverse data feeds for your dApp and smart contracts on multiple L1s & L2s.",,,,https://twitter.com/redstone_defi,,https://t.me/redstonefinance/,,https://github.com/redstone-finance,https://www.linkedin.com/company/redstone-finance/,
ReGen,sbgvjh,https://www.regen.network/,NOT_DEPIN,COSMOS,REGEN,regen,"ReGen focuses on Hydrogen, Ammonia, and Methanol trading for the New Fuel Economy.",Environmental,,,https://twitter.com/regen_pk,,,,,https://www.linkedin.com/company/regen-sw/,
Rejuve,4v0sqt,https://www.rejuve.ai/,AI,,RJV,,"Rejuve.AI is a decentralized, AI-driven longevity research network allowing people from all over the world to track their health data, receive valuable insights, contribute to cutting-edge longevity research, and earn rewards.",,,,,1120812469334577232,,,,,
Relation,t8wbyf,https://www.relationlabs.ai/home,NOT_DEPIN,,REL,relation-native-token,Relation Protocol is a decentralized social graph protocol for encoding relations in Web3.,,,,https://twitter.com/relationlabs,935837847511003186,https://t.me/therelationlabs,https://medium.com/@RelationLabs,https://github.com/relationlabs,,
Relative.FI,owdd6z,https://relative.fi/,AI,,,,"Relative Finance is building cross-sector dApps for derivatives and skill-based wagering across SocialFi, DeFi, and GameFi.",Social,,,https://twitter.com/relativefi,1074744445980909678,https://t.me/RelativeFinance,,https://github.com/relativefi,https://www.linkedin.com/company/supermetafi/about/,
Relay,b0vnal,https://www.relaywireless.com/,WIRELESS,,,,"Relay is a provider of tools for DeWi deployers and WISPs, facilitating telecom network building and management.",,,,https://twitter.com/relaydevice,,,,https://github.com/relay-tools,https://www.linkedin.com/company/relaypro,
Remix,up2zx1,https://remix.ai/,AI,,,,"Remix AI is a social mobile app on iOS and Android, that unites users to create, share, and remix AI images and video.",,EV3 Sal,,,,,,,,
Renatus,83jvhp,https://www.renatus-robotics.com/,BLOCKCHAIN_INFRA,,,,Renatus is the first logistics system completing orders at one station.,Robotics,,,https://twitter.com/renatusgaming?lang=en,,,https://discord.com/invite/G9SCvAE,,https://ie.linkedin.com/company/renatus-capital-partners,
Render,drs2bu,http://renderfoundation.com/,COMPUTE,ETHEREUM,RNDR,render-token,Render is a decentralized rendering platform for next-gen media production.,GPUs,,,https://twitter.com/rendernetwork,976195870825529354,https://t.me/rendernetwork,https://medium.com/@rendernetwork,https://github.com/rendernetwork/,http://www.linkedin.com/company/render-network-foundation,
Repl,n4gf96,https://repl.fi/,NOT_DEPIN,,,,"Repl is the first repledging Protocol for pledged DePIN assets. It aims to enhance the efficiency of locked DePIN tokens, remove idiosyncratic risks among DePIN service providers, and lower the complexity for people to earn DePIN protocol rewards.",,EV3 Sal,,https://twitter.com/Repl_fi,,,,,,
Reppo,wbxh04,https://reppo.xyz/,AI,,,,Reppo is a pioneering AI-powered Open Composable Reputation Infrastructure to scale DePINs.,,EV3 Sal,,,,,,,,
Reputable,ph8ydx,https://www.reputable.health/,SENSORS,,,,"Reputable Health is a pioneering digital health platform dedicated to delivering trusted, accessible, and personalized healthcare insights. It allows users to optimize their health and earn rewards.",,ZZ,,,,,,,,
ResearchHub,844cf4,https://www.researchhub.com/,BLOCKCHAIN_INFRA,ETHEREUM,RSC,researchcoin,"ResearchHub is a collaborative platform that accelerates scientific research by incentivizing researchers to share, summarize, and discuss articles in specialized Hubs.",,,,https://twitter.com/ResearchHubF,957082465258848266,,https://mirror.xyz/blog.researchhubfoundation.eth,https://github.com/ResearchHub,https://www.linkedin.com/company/researchhubtechnologies/,
Resistor AI,y8ivn4,https://resistorai.org/,AI,ETHEREUM,TOR,resistor-ai,"Resistor AI is a pioneering Layer 2 Blockchain platform with Decentralized AI Services On-Chain, such as an AI Marketplace, Renting & Lending Hardware, Remote Code Execution, and API.",,ZZ,,https://twitter.com/resistorai,,,,,,
Revert,hcinar,https://www.revert.dev/,NOT_DEPIN,,,,Revert makes it incredibly easy to build integrations with any third party API.,,,,https://twitter.com/revertdotdev,1126480907881160714,,https://www.linkedin.com/company/90436779/,,https://github.com/revertinc/Revert,
Revest Finance,68z42k,https://revest.finance/,NOT_DEPIN,ETHEREUM,RVST,revest-finance,Revest Protocol is an EVM-based system for the tokenization of financial positions in DeFi.,,,,https://twitter.com/RevestFinance,836435050086137906,,https://revestfinance.medium.com/,https://github.com/Revest-Finance,https://www.linkedin.com/company/revest-finance/,
RevoFi,bdxcwj,https://revofi.com/,WIRELESS,,,,RevoFi is a decentralized wireless infrastructure platform.,,ZZ,,https://twitter.com/revofico?lang=en,839162257862295554,,,,https://www.linkedin.com/company/revofi,
rhino.fi,d3ignz,https://rhino.fi/,NOT_DEPIN,,,,rhino.fi is the ultimate Layer 2 bridge for effortless multi-chain token movement.,,,,,745570257808130058,,,,,
Riddle&Code,cn2pt1,https://www.riddleandcode.com/,SENSORS,,,,Riddle&Code: Connecting physical assets with Web3 technology for secure communication and transactions.,IoT,,,https://twitter.com/riddleandcode,999216778393698364,,,,https://www.linkedin.com/company/riddle-&-code/,
Ridotto,dth4ai,https://www.ridotto.io/,NOT_DEPIN,ETHEREUM,RDT,ridotto,"Ridotto is a cross-chain Gaming and lottery protocol based on complete transparency, anonymity, security, and fairness.",,ZZ,,,,,,,,
RightsfuAlly,stk33p,https://rightsfually.com/en/,NOT_DEPIN,,,,We help usher artists and independent content creators into the world of FAIR content attribution.,NFTs,,,https://twitter.com/RightsfuAlly?t=CF-wuGubyRb9dG8K_dnP5Q&s=08,,,https://www.linkedin.com/showcase/rightsfually/?trk=organization_guest_main-feed-card_reshare-text,,,
Rilla,ufqo0i,https://rilla.network/,COMPUTE,,,,Rilla Network is a peer-to-peer live-streaming solution leveraging the potential of audience bandwidth to save on traditional infrastructure costs and distribute the value to creators and their communities.,CDN,EV3 Sal,,https://twitter.com/RillaNetwork,,,,,,
RingFence,v84vfv,,AI,,,,"Ringfence is a generative AI platform that allows creators to create, mint, protect, and monetize their work.",,,,https://twitter.com/RingfenceAI,,,,,,
RISC Zero,2sl1de,https://www.risczero.com/,NOT_DEPIN,,,,RISC Zero is a zero-knowledge verifiable general computing platform based on zk-STARKs and the RISC-V microarchitecture.,ZK,ZZ,,,,,,,,
Ritual,ntppvh,https://ritual.net/,AI,,,,"Ritual is an open, sovereign execution layer for AI. It allows users to seamlessly integrate AI into their app or protocol on any chain, enabling them to fine-tune, monetize, and perform inference on models with cryptographic schemes",,,,https://twitter.com/ritualnet,,,,https://github.com/ritual-net,,
Rivalz,4r3sn3,https://rivallz.network/,AI,NATIVE,RIZ,,"Rivalz is an AI-driven Data Provenance DePIN RollApp focusing on AI data provenance and creating a modular ecosystem for AI applications and agents. ",,EV3 Sal,,https://twitter.com/Rivalz_AI,,,,,,
Roam,345ael,https://www.roamnetwork.xyz/,WIRELESS,,,,Roam is a crypto-native telco initiative enabling easy setup of mobile networks for 4G or 5G connectivity.,Mobile,,,https://twitter.com/roam_network,1074654906436296734,https://t.me/+Xk2-5Sa02yFjMDE0,https://medium.com/@Roam_Network,,http://www.linkedin.com/company/roamnetwork,
Robonet,ecb4bs,https://robonet.finance/,NOT_DEPIN,,,,"RoboNet is an AI-powered DeFi protocol that leverages several new developments in decentralized MI and zkML to enable more advanced AI-powered DeFi strategies. It consists of three types of participants: strategists, liquidity providers, and traders.",,ZZ,,https://twitter.com/RoboNetHQ,,,,,,
Robonomics,47a3ty,https://robonomics.network/,NOT_DEPIN,ETHEREUM,XRT,robonomics-network,"Robonomics is an open-source platform for IoT applications which enables the exchange of technical and economic information between user applications, IoT services, and complex robotics.",,,,,803947358492557312,,,,,
Robot AI,12ku5r,https://www.0xrobot.ai/,NOT_DEPIN,IOTEX,ROBA,,"Robot AI is an innovative blockchain project on IoTeX integrating unique features including POW, DePIN, 404, and Meme culture.",,ZZ,,https://twitter.com/0xrobot_ai,,,,,,
RobotEra,t7b6bu,https://robotera.io/,NOT_DEPIN,,,,RobotEra: play-to-earn gaming with NFTs and metaverse world-building.,Gaming,,,https://twitter.com/robotera_io,,https://t.me/+_wOHpPocsxE3NjBh,,,https://www.linkedin.com/company/robot-era/,
Robotized,n87ym5,https://www.robotiz3d.com/,BLOCKCHAIN_INFRA,,,,Robotiz3d is building the world‚Äôs first autonomous road maintenance vehicle to help tackle the pothole problem.,,,,,,,,,,
Roko,kz7n8o,https://roko.network/,AI,ETHEREUM,ROKO,roko-network,Roko is a self-organizing human-machine network focused on deep-tech R&D protocol bootstrapping.,Agents,ZZ,,,1080924910018367630,https://t.me/RokoNetwork,,,,
Rollbit Coin,3m9m9c,https://rollbit.com/,NOT_DEPIN,ETHEREUM,RLB,rollbit-coin,"Rollbit offers casino games, sportsbook, futures trading, and NFT trading.",Gaming,,,https://twitter.com/rollbitcom,698240441316802589,,https://medium.com/coinmonks/what-is-rlb-rollbit-the-solution-for-crypto-degens-ef9af8d35d9e,,,
Roso,36f3to,https://roso.vip/,NOT_DEPIN,ETHEREUM,ROSO,roso-elite-gamblers-mansion,"Roso is a diverse online casino and gaming platform, offering a wide range of gambling experiences.",Gaming,,,,,,,,,
Routie,v0g1yx,https://routie.io/,WIRELESS,NATIVE,PKT,pkt,"Routie enables businesses to offer free internet, collect customer data, and earn revenue through captive portals.",,ZZ,,https://twitter.com/helloroutie,,,,,http://www.linkedin.com/company/routie,
ROVI,tpkifk,https://www.rovimobility.com/,BLOCKCHAIN_INFRA,,,,The ROVI is one of the most innovative power-bases ever created.,Health & Fitness,,,https://twitter.com/rovimobility,,,,,,
Rowan Energy,erdh9p,https://www.rowanenergy.com/,ENERGY,,RWN,rowan-coin,Developer of a Community Supported Green Energy Blockchain. Members will be able to buy their energy from other members who produce it using solar panels.,,,,https://twitter.com/RowanRewards,,,,,https://www.linkedin.com/company/rowanenergy/,
Royal,t62qym,https://royal.io/,NOT_DEPIN,,,,Royal is a marketplace built on top of the Polygon blockchain that enables anyone to invest in music and earn royalties alongside artists.,,,,https://twitter.com/join_royal,867511488151683083,,https://support.royal.io/hc/en-us,,https://www.linkedin.com/company/joinroyal/,
Royale,csbwex,https://www.royale.finance/,NOT_DEPIN,ETHEREUM,ROYA,royale,Provider of cross-chain decentralized finance services intended to serve the iGaming industry.,,,,https://twitter.com/Royale_Finance,,https://t.me/RoyaleFinance,https://officialroyale.medium.com/,,https://www.linkedin.com/company/officialroyale/about/,
RPS AI,k014yh,https://www.rpslabs.io/,AI,,,,"RPS is building AI infrastructure to power tomorrow's autonomous agents, DApps, and next-gen blockchain analytics. The infrastructure allows anyone to build autonomous AI agent apps securely with the full context of the blockchain in real time.",Agents,ZZ,,https://twitter.com/RPS_Labs,,,,,,
RSS3,1tdy5h,https://rss3.io/,AI,ETHEREUM,RSS3,rss3,RSS3 is a next-gen feed protocol for decentralized applications.,,,,https://twitter.com/RSS3_,837332113677090876,https://bit.ly/3e6FZoV,https://medium.com/tag/rss3,https://github.com/NaturalSelectionLabs,http://www.linkedin.com/company/rss3,
RTK Direct,i2rdst,https://rtkdirect.com/,WIRELESS,POLYGON,RTK,,RTK Direct is a blockchain powered RTK Hotspot. The solution refines and boosts GPS/GNSS data which can then be used to improve the accuracy in that area. With this proven concept they can improve accuracy from 5 meters to 1 centimeter in real-time.,,W. L.,,https://twitter.com/rtkdirect,,,,,,
Ruff,la5o39,http://ruffchain.com,NOT_DEPIN,ETHEREUM,RUFF,ruff,Ruff is a blockchain-based architecture combining IoT with a public chain and distributed operating system.,IoT,,,,,,,,https://www.linkedin.com/company/ruffllc/,
Rumi,3x8glb,https://www.rumi.finance/,NOT_DEPIN,,RUMI,rumi-finance,Rumi is a permissionless platform for DeFi asset management.,DeFi,ZZ,,https://twitter.com/rumilabs/status/1325733403686133760,1030554262670942208,,,,https://pt.linkedin.com/company/rumi-finance,
Runloop,f9rhe0,https://runloop.xyz/,AI,,,,"Runloop builds DeFi simulation environment for training agents in liquidity provision, risk management, and trading.","Agents, DeFi",,,https://twitter.com/runloop?lang=en,,,,,https://www.linkedin.com/company/runloop/about/,
Ruuvi,3mrg2q,https://ruuvi.com/,SENSORS,,,,"Ruuvi creates simple and powerful environmental sensor products for consumers and businesses.The Ruuvi sensors measure air temperature, humidity, pressure, and acceleration, depending on the models.",,,,https://twitter.com/ruuvicom,,https://t.me/ruuvicom,https://ruuvi.com/blog/,https://github.com/ruuvi,https://www.linkedin.com/company/ruuvi,
RWA Inc,6xg4oq,https://www.rwa.inc/,NOT_DEPIN,,RWA,,RWA.Inc is a Real World Asset Tokenization eco-system enabling issuers of Real World Assets to tokenize any asset instantly and investors to safely invest in digital assets.,RWA,ZZ,,https://twitter.com/RWA_Inc_,,,,,,
Rymedi,aexn5y,https://rymedi.com/,BLOCKCHAIN_INFRA,,,,Rymedi is a blockchain-enabled platform empowering health workers and patients to improve the quality of care.,Health & Fitness,,,,,,,,,
RyuChain,8w0s7k,https://ryuchain.io/,AI,NATIVE,RYU,,Ryu Chain is decentralized software enabling everyone to use the full capability of NFTs in combination with decentralized Software and the power of AI.,,ZZ,,,,,,,,
SAC,pl7sq2,https://sac-nft.com/,SENSORS,ETHEREUM,SAT,super-athletes-token,SAC is a Sports To Earn project that allows users to exercise with the SAC APP and earn tokens that can be converted into real assets.,Health & Fitness,ZZ,,https://twitter.com/sacnft_official,,,,,,
Safe Haven,ewlwyh,https://safehaven.io/,AI,BINANCE,SHA,safe-haven,Decentralized digital inheritance,,,,https://twitter.com/safeHavenio,951025651463385129,https://t.me/safehavenio,http://www.linkedin.com/company/safe-haven-sha,,https://github.com/Safehaven-io,
SAFE,t4fjen,https://safenetwork.org/,COMPUTE,NATIVE,SAFE,safe-anwang,SAFE Network is a decentralized data storage and communications network that uses spare computing resources of users.,Storage,ZZ,,https://twitter.com/safenetworktech?lang=en,,,https://medium.com/safenetwork/about,,,
Saga,95fcvd,https://www.saga.xyz/,NOT_DEPIN,,SAGA,,Saga is a Layer 1 protocol that allows developers to automatically spin up parallelized and interoperable dedicated chains that elastically scale with their Web3 application needs.,,,,,950275843949736006,,,,,
Sahara,a2h6y8,https://www.saharalabs.ai/,AI,,,,Sahara is a decentralized AI network enabling everyone to securely deploy and leverage custom AI agents.,Agents,ZZ,,https://twitter.com/SaharaLabsAI,,,,,,
Saito,i86y1x,https://saito.tech/,NOT_DEPIN,ETHEREUM,SAITO,saito,"Saito: Layer-1 blockchain empowering web 3.0 apps, with distributed infrastructure.",L1/L2,,,https://twitter.com/SaitoOfficial,595860623901065237,https://t.me/SaitoIO,https://saito.tech/blog/,,http://www.linkedin.com/company/saitonetwork,
Sapien,k2xr2i,https://www.sapien.io/,AI,,,,"Sapien is building a large network of human data labelers for the AI industry, utilizing gamification and blockchain incentives to power high-performance models.",,ZZ,,https://twitter.com/SapienGamified,,,,,,
Sarcophagus,se7wj7,https://sarcophagus.io/,BLOCKCHAIN_INFRA,ETHEREUM,SARCO,sarcophagus,Decentralized dead man's switch,,,,https://twitter.com/sarcophagusio,753398645507883099,,http://www.linkedin.com/company/sarcophagusio,,https://github.com/sarcophagus-org,
Satea,7piuxo,https://satea.io/,BLOCKCHAIN_INFRA,,,,"Satea is a fully managed Web3 infrastructure, democratizing access to computing resources worldwide for Depin and AI projects through tailored solutions and managed services.",,ZZ,,https://twitter.com/SateaLabs,,,,,,
Sator,jxy5nc,https://sator.io/,WIRELESS,ETHEREUM,SAO,sator,Sator is a Blockchain-enabled TV engagement that allows users to earn crypto rewards for watching TV.,,,,,839345964129320970,,,,,
Satori,gp6a8t,https://satori.finance/,BLOCKCHAIN_INFRA,,,,Satori is a decentralized financial derivatives platform with an “off-chain aggregation and on-chain settlement” design.,,EV3 Sal,,https://twitter.com/SatoriFinance,,,,,,
Saturn,dar2ui,https://saturn.tech/,COMPUTE,FILECOIN,,,"Saturn is an open-source, community-run Content Delivery Network (CDN) built on Filecoin.",CDN,ZZ,,https://twitter.com/FilecoinSaturn,,,,,,
Sayver,zk9cf4,https://sayver.net/,COMPUTE,,,,Sayver is a blockchain-based platform that enables users to immortalize anything on the blockchain.,Storage,,,,,,,,,
Scalia,4d015n,https://scalia.app/,COMPUTE,ETHEREUM,SCALIA,scalia-infrastructure,"Scalia Infrastructure is a pioneering platform that aggregates and scales DePIN resources to democratize access to decentralized infrastructure resources, enabling individuals, enterprises, and organizations to leverage decentralized technologies.",,EV3 Sal,,https://twitter.com/scaliainfra,,,,,,
SCINET,exm7xr,https://www.scinet.one/,NOT_DEPIN,,,,SCINET is a decentralized life sciences research and investment platform that revolutionizes the way people do and support science.,,,,https://twitter.com/scinet_inc,933419136934101013,,,,https://www.linkedin.com/company/scinet-us/,
ScPrime,ui2nbm,https://scpri.me/,COMPUTE,NATIVE,D2X,d2,ScPrime is a decentralized network of enterprise-grade cloud storage providers.,Storage,ZZ,,https://twitter.com/ScPrimeCloud,500467593375645706,,https://scpri.me/articles/,https://gitlab.com/scpcorp/,https://www.linkedin.com/company/scp-corp,
Script TV,3yilwl,https://token.script.tv/,WIRELESS,ETHEREUM,SCPT,script-network,Script TV is a decentralized video delivery network that furnishes an expansive range of blockchain-enabled solutions to the problems related to the traditional video-streaming sector.,,,,,849605237185970196,,,,,
ScyNet,5kz9p0,https://scynet.ai/,COMPUTE,,,,ScyNet is a Decentralized network for creating and training autonomous AI agents.,,ZZ,,https://twitter.com/ScynetAI,484370483739885608,,,https://github.com/comrade-coop/scynet,,
SDrive,hvlpd4,https://sdrive.app/,COMPUTE,SOLANA,SCOIN,sdrive-app,"SDrive is a decentralized storage solution offering secure, immutable file storage with user-friendly access and strong privacy features on the Solana blockchain, complemented by robust developer tools including CLI, SDKs, and APIs.",,ZZ,,,,,,,,
Sealink,spnzni,https://sealink.network/,WIRELESS,NATIVE,SLK,sealink-network,"The Sealink Network integrates Proof of Stake (PoS) and a unique Proof of Work (uPoW) blockchain technology to offer a decentralized, secure, and free virtual private network (VPN) service, which includes features like remote access and port mapping.",,ZZ,,,,,,,,
SecondLive,6qvjpf,https://secondlive.world/,BLOCKCHAIN_INFRA,,,,"SecondLive: a metaverse for avatars, virtual spaces, art exhibitions, and gaming.",,,,https://twitter.com/SecondLiveReal,864036969851650048,https://t.me/SecondLiveCommunity,https://medium.com/@SecondLiveReal,https://github.com/SecondLive23,,
SEDA,mbv7cs,https://www.seda.xyz/,BLOCKCHAIN_INFRA,ETHEREUM,SEDA,seda-protocol,"SEDA is an intent-based, modular data layer that enables developers to conduct data queries for any data type from any blockchain, facilitating permissionless integration of external data within their native blockchain environments.",Oracle,ZZ,,,,,,,,
Seed Labs,ixg6ts,,NOT_DEPIN,,,,"Seed Labs is a collectively owned, community-first, open early stage venture capital.",,,,,,,,,https://www.linkedin.com/in/seed-lab-my-9246951a8/,
SEI,qijvwz,https://www.sei.io/,NOT_DEPIN,,SEI,,"Sei is a specialized Layer 1 blockchain optimized for digital asset exchanges, offering unparalleled speed and a unique consensus mechanism to solve the Exchange Trilemma, enhancing user experience across trading, gaming, and NFT marketplaces.",,,,,973057323805311026,,,,,
SelfChain,151ado,https://selfchain.xyz/,AI,,,,Self Chain Is The First Modular Intent-Centric Access Layer L1 Blockchain And Keyless Wallet Infrastructure Service That Uses MPC-TSS/AA For Multi-Chain Web3 Access,Software,,,https://twitter.com/selfchainxyz,1146385445563944961,https://t.me/selfchainxyz,,,,
SelfKey,b12fse,https://selfkey.org/,NOT_DEPIN,ETHEREUM,KEY,selfkey,SelfKey is a blockchain-based identity platform.,,,,https://twitter.com/selfkey,897002577831526460,https://t.me/selfkeyfoundation,https://medium.com/@SelfKey,https://github.com/SelfKeyFoundation,http://www.linkedin.com/company/selfkey,
Semaphore,4ubfgn,,NOT_DEPIN,,,,The Semaphore Network is developing an EthSIM Wallet to allow anyone to turn ANY cellphone into a secure air-gapped hardware wallet for Ethereum transactions.,,EV3 Sal,,,,,,,,
Sending Labs,xe4qlj,https://www.sending.network/,BLOCKCHAIN_INFRA,,,,"SendingNetwork is a Web3 Communication Stack that helps developers create secure dapps that include in-app or cross-app chats, notifications, wallet or decentralized ID logins, and non-fungible token (NFT) transactions.",,EV3 Sal,,,,,,,,
Sensecap,4mztfe,https://www.sensecapmx.com/,BLOCKCHAIN_INFRA,,,,"Sensecap: LoRaWAN IoT hardware for Helium hotspots, building decentralized networks.",IoT,,,https://www.sensecapmx.com/blogs/,,,,,https://www.linkedin.com/company/seeedstudio/,
Sentinel,r77x1a,https://sentinel.co/,COMPUTE,COSMOS,DVPN,sentinel,Sentinel is a global ecosystem of autonomous dVPN apps enabling private censorship-resistant internet access.,VPN,ZZ,,https://twitter.com/Sentinel_co,436630361313640469,https://t.me/sentinel_co,https://medium.com/sentinel,https://github.com/sentinel-official,https://linkedin.com/company/sentinelco,
SEOR,wpruwu,https://www.seor.io/#/home,NOT_DEPIN,BINANCE,SEOR,seor-network,"SEOR is the next generation of decentralized Web3.0 application technology development infrastructure, which aims to provide users and developers of Web3.0 with an easy-to-use blockchain technology development platform.",,,,https://twitter.com/SEOR001,882647441193725953,https://t.me/SeorGroup,https://medium.com/@SEOR,,,
Serenity Shield,yc3xgv,https://www.serenityshield.io/,COMPUTE,BINANCE,SERSH,serenity-shield,"StrongBox is a fully decentralized and privacy-preserving app for storing, transferring, and recovering confidential data. The platform also boasts a customizable inheritance option, enabling users to manage their data according to their preferences.",Storage,ZZ,,https://twitter.com/SerenityShield_,,,,,,
Session,xm8o5o,https://getsession.org/,BLOCKCHAIN_INFRA,,,,"Session is an end-to-end encrypted messenger that minimises sensitive metadata, designed and built for people who want absolute privacy and freedom from any form of surveillance.",,,,https://twitter.com/session_app,,,https://getsession.org/blog,https://github.com/oxen-io,http://www.linkedin.com/company/sessionmessenger,
Set,zftfbg,,NOT_DEPIN,,,,Set is an onchain indexing protocol,,,,,,,,,,
Setoros,ulo2gi,https://setoros.com/,NOT_DEPIN,,,,Setoros is a decentralized crypto sportsbook for global betting.,,,,https://twitter.com/setoros,1077512035899809823,,https://medium.com/@baduungg/update-setoros-testnet-now-launching-on-base-network-dbc2a77f232b,https://github.com/setoros-group,,
Setter,9emkwg,https://www.setter.co/,NOT_DEPIN,,,,Setter is the go-to app for drops and community. Be the first to RSVP for upcoming releases and limited editions.,,EV3 Sal,,,,,,,,
Sfero,k02lxn,https://sfero.io/,SENSORS,,,,"Sfero is a decentralized POS terminal integrating conventional payment methods alongside modern options like Apple Pay, Google Pay, and cryptocurrency transactions using cutting-edge biometric solutions.",Hardware,EV3 Sal,,https://twitter.com/sfero_io,,,,,,
SFT Protocol,hb0kuf,https://sft.network/,COMPUTE,,SFT,,"SFT Chain, a 'Chain of Chains', bridges physical infra with Web3, focusing on a DePIN platform that integrates storage, computing, edge CDN , and beyond.",,ZZ,,https://twitter.com/SFTProtocol,,,,,,
Shadeform,d4dfm9,https://www.shadeform.ai/,AI,,,,Shadeform is building a one stop shop for cloud GPUs. Here‚Äôs a look at our upcoming roadmap and upcoming features!,,,,,1085330034614616134,,,,http://www.linkedin.com/company/shadeformai,
Shadow Node,qlbqnf,https://shadownode.org/,WIRELESS,ETHEREUM,SVPN,shadow-node,"Explore Shadow Node is a decentralized VPN framework that empowers users with secure, private, and uncensored internet access.",VPN,ZZ,,https://twitter.com/shadownodeVPN,,,,,,
Shaga,t5y2jk,https://linktr.ee/web3shaga,COMPUTE,,,,Shaga offers a unique gaming ecosystem that empowers gamers to lend access to their gaming PCs and monetize their hardware.,,,,https://twitter.com/Web3Shaga,,,,https://github.com/ShagaDAO/Shaga-Monorepo,,
Shamba,zfwfw0,https://shamba.link/,BLOCKCHAIN_INFRA,,,,"Shamba is a Web3 ecological data oracle and Decentralized Monitoring, Reporting & Verification Network.",Oracle,ZZ,,,,,,,,
Shardeum,g65u6w,https://shardeum.org/,BLOCKCHAIN_INFRA,ETHEREUM,SHM,shardeum,Shardeum: EVM-based platform ensuring decentralization and security.,,,,https://twitter.com/shardeum,933959587462254612,https://telegram.me/shardeum,https://medium.com/@Shardeum,https://github.com/shardeum/,http://www.linkedin.com/company/shardeum,
Shentu Chain,vp6r7p,https://www.shentu.technology/,BLOCKCHAIN_INFRA,POLYGON,CTK,shentu,"Shentu Chain enables a system of decentralized Security Oracles that provide runtime analysis of the security of live smart contracts. ",,ZZ,,,,,,,,
SherLOCKED,rm0wa6,,NOT_DEPIN,,,,,,,,,,,,,,
Shibuya,rgobsb,https://www.shibuya.xyz/,BLOCKCHAIN_INFRA,,,,"Shibuya is a web3 platform for film financing & production. Users engage, fund, vote, & become owners of content.",,,,https://twitter.com/shibuyaxyz,946167913021333635,,https://medium.com/@shibuya.xyz,,http://www.linkedin.com/company/shibuyaxyz,
Shimmer,11u1dj,https://shimmer.network/,NOT_DEPIN,NATIVE,SMR,shimmer,"Shimmer is a high-performance, feeless, and parallelized Directed Acyclic Graph (DAG) ledger offering a chain-agnostic solution for fully customizable smart contract chains to be built on top.",,ZZ,,,,,,,,
Shinkai,vm959p,https://www.shinkai.com/,AI,,,,"Shinkai combines LLM-based AI, private data, and task scheduling together with file support, deep crypto integration, and a decentralized p2p network.",,ZZ,,https://twitter.com/ShinkaiProtocol,,,,,,
Shipped,v05a0g,https://shipped.com/,BLOCKCHAIN_INFRA,,,,Shipped is a logistics industry plugin that enables payment for shipping by scanning the barcode on the parcel.,,,,https://www.twitter.com/shippedcom,,,https://shipped.com/blog/,,https://linkedin.com/company/shipped-com,
SHOGGOTH,w72dm1,https://shoggoth.systems/,AI,,,,"Shoggoth is a peer-to-peer, anonymous network for publishing and distributing open-source code, Machine Learning models, datasets and research papers.",,,,,,,,,,
ShopConnect,butvw4,https://www.shopconnect.live/,NOT_DEPIN,,,,Our disruptive innovation reduces the dependence on travel and paper. To optimize costs and control the carbon footprint with a virtual shopping platform.,ZK,,,https://twitter.com/ETHGlobal,,,https://ethglobal.medium.com/,https://github.com/ethglobal,https://www.linkedin.com/company/ethglobal/,
Shuttle Labs,aoo9gh,https://shuttlelabs.co/,AI,,,,Shuttle Labs: AI-powered platform that transforms blockchains into accessible sources for analytics and automation.,,,,https://twitter.com/shuttlelab,,,,,https://www.linkedin.com/company/shuttleinc/,
Sia,esjdj0,https://sia.tech/,COMPUTE,NATIVE,SC,siacoin,Sia is a decentralized cloud storage network combining Proof of Work with a contract-based storage model.,Storage,,,https://twitter.com/sia__foundation,809849352516141067,,,https://github.com/SiaFoundation,http://www.linkedin.com/company/the-sia-foundation,
Side,62pug3,https://www.side.one/,NOT_DEPIN,,SIDE,,"The Side Protocol is a modular infrastructure designed to scale Bitcoin. At its core is SIDE, a Bitcoin sidechain secured by BTC and serving as the settlement layer for zk-rollups within the modular stack.",,,,,1031431934204706856,,,,,
Siglo,7gjqft,https://siglo.com/,WIRELESS,,,,Siglo is a wireless internet service provider.,,,,https://twitter.com/hashtag/siglobar,,,,,http://www.linkedin.com/company/siglointernet,
Sigmoid,v0hgwm,https://www.sigmoid.wtf/,AI,,SIGMA,,"Sigmoid is a coordination protocol between decentralized AI networks, node operators, and users.",,EV3 Sal,,https://twitter.com/sigmoidwtf,,,,,,
Silence,j2py3v,https://www.silencelaboratories.com/,NOT_DEPIN,,,,Silence Labs is a cybersecurity company specializing in decentralized MFA and MPC-based authentication.,,,,https://twitter.com/silentauth,,,https://medium.com/silence-laboratories,,https://www.linkedin.com/company/silencelaboratories/,
Silencio,5m6dp8,https://www.silencio.network/,SENSORS,,,,Silencio rewards users for providing hyper-local noise pollution data from smartphones.,,ZZ,,https://twitter.com/silencioNetwork,1034207908210147489,https://telegram.me/silencio17,https://medium.com/@eversept/about?source,https://github.com/topics/silencio,https://www.linkedin.com/company/silencio,
Silent Link,q5prya,https://silent.link/,WIRELESS,,,,Silent Link provides global mobile 4G/5G Internet access and burner phone numbers on any eSIM-compatible smartphone.,,,,https://twitter.com/silentlink1,,,,,,
SingularityDAO,g7dhjc,https://www.singularitydao.ai/,AI,ETHEREUM,SDAO,singularitydao,SingularityDAO: Decentralized Portfolio Management Protocol for safe and easy crypto asset management.,,,,https://twitter.com/SingularityDao,918044007521714239,https://t.me/SingDAO,https://medium.com/singularitydao,,http://www.linkedin.com/company/singularitydao,
SingularityNET,48m8lh,https://singularitynet.io/,AI,ETHEREUM,AGIX,singularitynet,"SingularityNET enables easy creation, sharing, and monetization of AI services through its global marketplace.",,,,https://twitter.com/singularitynet,909843832491896832,https://telegram.me/singularitynet,https://medium.com/tag/singularitynet,https://github.com/singnet,http://www.linkedin.com/company/singularitynet,
Sinso,tde0ef,https://www.sinso.io/,COMPUTE,,SINSO,,Sinso is a Web3.0 Infrastructure Simplifying Decentralized HotData Cache and Data Governance.,,,,,,,,,,
Sirius,tqnguc,https://www.siriuschain.io/,BLOCKCHAIN_INFRA,NATIVE,XPX,proximax,"Sirius Chain is an advanced Proof-of-Stake and Proof-of-Greed blockchain with built-in features such as multi-level multisig, validator rewards, fast finality, easy digital asset creation, and transaction management.",,ZZ,,,,,,,,
Sitenna,xeu3zu,https://sitenna.com/,WIRELESS,,,,"Sitenna streamlines the process of site acquisition, portfolio management and collocation sales for telecom companies.",Software,,,,,,,,http://www.linkedin.com/company/sitenna,
Skey,v9jtu7,https://skey.network/,NOT_DEPIN,ETHEREUM,SKEY,skey-network,"Skey is a blockchain-based company connecting decentralized finance and IoT, enabling a new economy of physical assets.","DeFi, IoT",,,https://twitter.com/skeynetwork,,https://t.me/SkeyNetworkNews,https://skeynetwork.medium.com/,https://github.com/skey-network,http://www.linkedin.com/company/skeynetwork,
Skeye,lmzn0p,https://skeye.ai/,SENSORS,NATIVE,SKEYE,,"Skeye is a provider of a platform that democratizes access to celestial data, fostering collaboration among sky observers and researchers.  Skeye Recon is a monitoring device to capture and analyze sky-related activities and phenomena.",,ZZ,,https://twitter.com/skeyeai,,,,,,
Skiff,bts0sr,http://www.skiff.com/,NOT_DEPIN,,,,"Skiff is an end-to-end encrypted, privacy-first workspace built for communicating and collaborating freely. They offer Mail, Calendar, Pages (notes), and Drive products.",,ZZ,,https://twitter.com/skiffprivacy,,,https://skiff.com/blog,https://github.com/skiff-org,https://www.linkedin.com/company/skiffprivacy/,
Skillful,8lb0be,https://skillfulai.io/,AI,,SKAI,,"Skillful AI is a personalized AI ecosystem, offering domain-specific virtual assistants, tailored interactions, developer tools, and blockchain integration for staying ahead in a dynamic digital landscape.",,EV3 Sal,,,,,,,,
Sky Trades,mfvv88,https://skytradelinks.com/,BLOCKCHAIN_INFRA,,,,Sky Trades is a marketplace for air rights for drone traffic.,,,,,,,http://www.linkedin.com/company/skytrades,,,
Skypier,5dkcg6,https://skypier.io/,WIRELESS,,,,Skypier decentralized network is a subscription-based peer-to-peer VPN that enables anyone to create their own hybrid cloud.,VPN,ZZ,,https://twitter.com/SkypierIO,,,,,,
Skywire,uzm5fs,https://www.skycoin.com/,NOT_DEPIN,,,,"Skycoin (SKY) is an open-source, community-owned, hardware-based peer-to-peer internet that leverages the incentive structure of the blockchain.",,,,https://twitter.com/SkycoinProject,,https://t.me/Skycoin,https://www.skycoin.com/blog/,https://github.com/skycoin,https://www.linkedin.com/company/skycoin/,
Sleepagotchi,j3sv74,https://www.sleepagotchi.com/,SENSORS,,,,"Sleepagotchi is a sleep health mobile app that rewards users with digital collectibles and tokens for a consistent sleep schedule. Sleepagotchi leverages scientific research and gamification to incentivize users to sleep better. ",,EV3 Sal,,https://twitter.com/sleepagotchi,,,,,,
Sleepless,u5x0h7,https://www.sleeplessai.net/home,AI,BINANCE,AI,sleepless-ai,Sleepless AI is a Web3+AI companion gaming platform.,,ZZ,,https://twitter.com/SleeplessAI_Lab,,,,,,
Sliceledger,eu6iys,https://sliceledger.io/,NOT_DEPIN,,,,Sliceledger is a decentralised Ethereum scaling platform empowering developers to build secure and low-fee dapps.,L1/L2,ZZ,,https://mobile.twitter.com/ledgerslice,,,,,https://www.linkedin.com/company/slice-ledger,
Smart Island,z60kpx,http://smartislandibiza.com/,BLOCKCHAIN_INFRA,,,,"Smart Island is an Internet of Things (loT) Living Lab and Service Provider for related applications in Ibiza, connecting people, things & territory through cutting-edge technology.",,,,https://twitter.com/smartislandibz,,,,,https://www.linkedin.com/company/smartislandibiza/,
SmartCredit,eiq46d,https://smartcredit.io/,AI,ETHEREUM,SMARTCREDIT,smartcredit-token,"SmartCredit connects lenders and borrowers globally, offering decentralized peer-to-peer lending.",,,,https://twitter.com/Smartcredit_io,,https://t.me/SmartCredit_Community,https://medium.com/smartcredit-io,https://github.com/SmartCredit-io,https://www.linkedin.com/company/smartcredit-io/,
SmartPoint,7su9n8,https://smartpoint.io/,SENSORS,IOTEX,,,SmartPoint is a decentralized edge computing network.,,,,https://twitter.com/SmartPointIO,,,https://github.com/topics/smartpoint-cloud-platform,,https://www.linkedin.com/company/smartpoint,
Smlxl,x6phis,https://smlxl.io/,COMPUTE,,,,"At smlXL, we spend much time diving into solc - our latest blog series (3 parts) will cover areas of solc that lack documentation yet are essential (and interesting).",,,,https://twitter.com/smlxldotio,,,https://blog.smlxl.io/,https://github.com/smlxl,https://www.linkedin.com/company/smlxl-tech,
Snickerdoodle,l4f7iq,https://www.snickerdoodle.com/,NOT_DEPIN,,,,"Snickerdoodle Labs is building a next-generation, web3-focused data management platform, and consumer data protocol that replaces cookies with specialized zkSNARK circuits and datalakes with client-side data custody.",,ZZ,,,,,,,,
Soarchain,75ez8s,https://www.soarchain.com/,BLOCKCHAIN_INFRA,,,,"Soarchain is a Layer 1 Network that aims to establish a decentralized ecosystem where participants, including vehicles, data providers, and developers, can interact and exchange value securely.",,ZZ,,https://twitter.com/soar_chain,,,,,,
Social Bicycles,eszhrl,https://www.socialbicycles.com/,WIRELESS,,,,SoBi is a smart Bikeshare system that uses wireless technology to enhance personal mobility.,,EV3 Sal,,https://twitter.com/socialbicycles,,,,,,
Social Layer,ij0xno,https://www.sociallayer.im/,BLOCKCHAIN_INFRA,,,,"Social Layer is a turnkey framework and infrastructure for the design, scale, and sustainability of Pop-up Communities and Cities.",,EV3 Sal,,https://twitter.com/SocialLayer_im,,,,,,
Solak,6om468,https://solak.app/,AI,,SGPT,,"Solak is an AI-powered browser and a DeFi platform, allowing users to earn SGPT tokens through activities like internet browsing, engaging in DeFi, participating in the NFT platform, and potentially through a referral program.",,ZZ,,https://twitter.com/solakgpt,,,,,,
Solana,1rk8w5,https://solana.com/,NOT_DEPIN,,,,"Solana supports experiences for power users, new consumers, and everyone in between.",,EV3 Sal,,,,,,,,
SolanaStock,kdsx3u,,AI,,,,SolanaStock: Decentralized stock photo marketplace monetizes photos with AI.,,,,https://solana.com/twitter,428295358100013066,https://solana.com/telegram,https://solana.com/news,https://solana.com/github,http://www.linkedin.com/company/solanalabs,
Solareum,l0260h,https://www.solareuml1.com/,ENERGY,ETHEREUM,SRM,solareum-d260e488-50a0-4048-ace4-1b82f9822903,Solareum is a renewable energy generation-based blockchain where producers and consumers can trade renewable energy peer-to-peer on a decentralized renewable energy marketplace.,,,,,,,,,,
SolChat,qetxlj,https://www.solchat.io/,NOT_DEPIN,SOLANA,CHAT,solchat,"Solchat is a communication protocol on the Solana blockchain, offering text, voice, and video calls similar to Web2, but in a Web3 environment.",,EV3 Sal,,https://twitter.com/SolChatCoin,,,,,,
Solcial,x3xjx4,https://solcial.io/,NOT_DEPIN,SOLANA,SLCL,solcial,Solcial is a decentralised social network on the Solana blockchain.,,,,,,,,,,
SolCycle,jypbh1,,SENSORS,,,,"SolCycle Rewards incentivizes recycling, promoting sustainability and environmental conservation.",Environmental,,,https://twitter.com/soulcycle,,,,,https://linkedin.com/company/soulcycle,
Soledge,up2lee,https://soledge.org/,COMPUTE,SOLANA,EDGE,,"Edge is a platform for individuals to rent out edge computing power to businesses, earning tokens.",,ZZ,,,,,,,,
Solidus AI,hb9ly2,https://www.aitech.io/,COMPUTE,BINANCE,AITECH,solidus-ai-tech,Solidus Ai Tech is building an eco-friendly High Performance Computing (HPC) Data Centre and IaaS platform and are launching the $AITECH token.,,,,https://twitter.com/AITECHio,938725761865625600,https://t.me/solidusaichat,,,https://www.linkedin.com/company/solidus-ai-tech-ltd/,
Solity,jkk0cp,,BLOCKCHAIN_INFRA,,,,"Solity pioneers a data-driven approach to risk management in the decentralized finance space, recognizing the distinct challenges of DeFi's composability and offering a tailored solution set for intelligent risk tracking and management.",,ZZ,,,,,,,,
SolLinked,mdhiew,https://sollinked.com/,NOT_DEPIN,,,,,FHE,,,https://twitter.com/Sollinked_com,,,,,,
SolRazr,0fi9q0,https://razrfi.ai/,NOT_DEPIN,SOLANA,SOLR,solrazr,SolRazr is a decentralized developer ecosystem for Solana.,,ZZ,,https://mobile.twitter.com/CSolrazr,886683619958079538,https://t.me/s/solrazr_app,https://medium.com/@RazrFi/solrazr-2021-in-review-5ba669ed2efc,https://github.com/solrazr-app,https://sg.linkedin.com/company/omnistart-network,
SolSplits,nyewp0,https://solsplits.xyz/,NOT_DEPIN,,,,The SolSplits Protocol is a composable standard for splitting on-chain income on the Solana Network.,,,,https://twitter.com/solsplits,934693914399633418,,https://medium.com/@solsplits,https://github.com/solsplits,https://www.linkedin.com/company/solsplits/,
SolveCare,hdih1r,https://solve.care/,NOT_DEPIN,ETHEREUM,SOLVE,solve-care,Solve.Care is a decentralized and distributed platform for the administration of healthcare and benefits programs.,,ZZ,,,,,,,,
Somos,ads6qy,https://www.somosinternet.co/,WIRELESS,,,,Somos Internet provides prepaid high-speed internet services in Latin America.,,,,,,,,,,
Sona,xbya3q,https://sona.stream/,NOT_DEPIN,,,,"Co-founded by DJ and producer TOKiMONSTA, Sona is a whole new way to enjoy music and support your favorite artists.",,EV3 Sal,,,,,,,,
SONM,qjzgqy,https://sonm.com/,COMPUTE,ETHEREUM,SNM,sonm,SONM is a decentralized worldwide fog supercomputer for general purpose computing from site hosting to scientific calculations.,,,,https://twitter.com/sonmdevelopment,1140549119258140722,https://t.me/sonm_eng,https://sonm.medium.com/,https://github.com/sonm-io,https://www.linkedin.com/company/sonm/about/,
Sonr,admvie,https://sonr.io/home,NOT_DEPIN,,,,Sonr is an L1 blockchain for self-custody decentralized identity.,L1/L2,ZZ,,https://sonr.io/twitter,843061375160156170,,,https://sonr.io/github,http://www.linkedin.com/company/sonr-io,
SophiaVerse,7bo0uv,https://www.sophiaverse.ai/,AI,ETHEREUM,SOPH,sophiaverse,"SophiaVerse is a gamified infrastructure built in the pursuit of Sophia's development via gameplay, through AI programming and the use of the SOPH utility token.",,,,https://twitter.com/sophiaverse_ai,,https://t.me/sophia_verse,,,https://www.linkedin.com/company/sophiaverse/,
Sora,6fu2a0,https://coinsora-ai.com/,AI,ETHEREUM,SORA,sora-ai,Sora is the developer and supporter of the OpenAI text-to-video tech with a pioneering token project at the intersection of blockchain technology and AI.,,ZZ,,https://twitter.com/SoraAIToken,,,,,,
SoulPrime,sfo58s,https://www.soulprime.io/,NOT_DEPIN,ETHEREUM,PRT,,"SoulPrime is a decentralized Web3 social network focused on privacy, user control, blockchain security, integration of a Web2 audience, NFT marketplace, AI personalization, and multiple user monetization options.",,,,https://twitter.com/SoulPrime_io,,,,,https://www.linkedin.com/company/soulprimeio/,
Souq,hprfe1,https://www.souq.finance/,NOT_DEPIN,,,,Souq is a blockchain company developing an NFT AMM aiming to revolutionize the trading dynamics of NFTs.,,,,,,,,,,
Space & Time,heeyow,https://www.spaceandtime.io/,BLOCKCHAIN_INFRA,,,,"Space & Time is a decentralized replacement for blockchain indexing, database, data warehouse, and API servers.",,,,https://twitter.com/SpaceTimeMedia/,953025874154893342,https://t.me/spaceandtimedb,https://medium.com/@SpaceandTimeDB,https://github.com/spaceandtimelabs,https://www.linkedin.com/company/space-and-time-media/,
Space ID,vb3z9t,http://www.space.id/,NOT_DEPIN,ETHEREUM,ID,space-id,SPACE ID (SID) is a decentralized universal name service network that runs on the blockchain and is a Web3 domain and identity management platform.,,ZZ,,https://twitter.com/SpaceIDProtocol,,,https://medium.com/@SpaceID,,https://www.linkedin.com/company/spaceidprotocol/about/,
Spacemesh,ojaphf,https://spacemesh.io/,NOT_DEPIN,,,,"Decentralized, energy-efficient blockmesh with unique consensus.",,,,https://twitter.com/teamspacemesh,623195163510046732,,https://medium.com/spacemesh,https://github.com/spacemeshos,http://www.linkedin.com/company/spacemesh,
Spectra Cities,3i14ar,https://www.spectracities.com/,NOT_DEPIN,,,,"Spectra is a cross-platform, open-source community where physical placemakers and virtual worldbuilders come together to create sustainable, human-centered, and technologically progressive urbanization.",,EV3 Sal,,https://twitter.com/spectracities,,,,,,
SpectralFi,rnxact,https://www.spectral.finance/,AI,,,,Machine Intelligence Network to consume zkML-verified inferences directly through smart contracts,,EV3 Sal,,,742257645989265432,,,,,
Spexi,xjyor4,https://www.spexi.com//,SENSORS,,,,Spexi is a decentralized network of drone operators using the first fly-to-earn drone imagery platform.,Drones,,,https://twitter.com/spexinetwork,,,,,https://www.linkedin.com/company/spexigon,
Sphere,76qa11,https://spherepay.co/,BLOCKCHAIN_INFRA,,,,"Sphere is building a permissionless payment infrastructure for web3 on Solana. ",,ZZ,,,,,,,,
Spheron,bpnvkv,https://spheron.network/,COMPUTE,,,,"Spheron Protocol is a decentralized platform for web app deployment with storage, hosting, and compute capabilities.",,ZZ,,https://twitter.com/SpheronFDN,,,https://spheron.medium.com/,https://github.com/spheronFdn,https://www.linkedin.com/company/spheron/,
Splits,4p461t,http://www.0xsplits.xyz/,NOT_DEPIN,,,,"0xSplits is a set of composable, open-source, and audited smart contracts that make it easy to split onchain payments.",DeFi,,,https://twitter.com/0xsplits,,,https://splits.org/blog/,https://github.com/0xSplits,https://www.linkedin.com/company/0xsplits/about/,
Spreads,s74bpn,https://spreadnetworks.io/,WIRELESS,,,,Spreads: Empowering communities for digital transformation.,,,,https://twitter.com/Mint_HNT,,,,,https://www.linkedin.com/company/minthnt,
SQE.io,ipaf0n,https://www.sqe.io/,BLOCKCHAIN_INFRA,,,,"SQE.io is a quantum secure, decentralized blockchain-based platform that uses Simulated Quantum Entanglement technology.","L1/L2, Quantum",ZZ,,https://twitter.com/TheSQE,,,,,http://www.linkedin.com/company/sqe-io,
Srcful,k7ie81,https://srcful.io/,ENERGY,,,,Srcful is a blockchain-enabled Virtual Power Plant maximizing the potential of Distributed Energy Resources.,VPP,ZZ,,,1050323986271182849,,,,https://linkedin.com/company/srcful,
StackOS,kd6pyc,https://www.stackos.io/,COMPUTE,ETHEREUM,SFX,stackos,StackOS is a cross-chain open infrastructure protocol enabling decentralized cloud services.,,ZZ,,https://twitter.com/DeployOnStackOS,816238453519417346,https://t.me/DeployOnStackOS,https://medium.com/stackos,https://github.com/stackosofficial,https://linkedin.com/company/stackos,
Stackr,l3144f,http://www.stackrlabs.xyz/,NOT_DEPIN,,,,Stackr SDK is a framework to build app-specific micro-rollups in web2 programming languages.,Software,,,https://twitter.com/0xStackr,1018902999982161990,,,,https://www.linkedin.com/company/stackr-labs/about/,
Stacks,3ey5ys,https://stacks.org/,NOT_DEPIN,NATIVE,STX,stacks,Stacks is a Bitcoin L2 enabling smart contracts and apps with Bitcoin as a secure base layer.,,,,https://twitter.com/StacksOrg,621759717756370964,https://t.me/StacksChat,https://www.stacks.co/blog,https://github.com/stacks-network,https://www.linkedin.com/company/stacks-stx/,
Staex,w8ux4q,https://staex.io/,BLOCKCHAIN_INFRA,,,,"Staex provides a first-of-its-kind fully decentralized IoT-DevOps platform as a service, capable of effortlessly handling complex networking and deployments using a proprietary P2P protocol inspired by modern blockchains.",,EV3 Sal,,https://twitter.com/Staex_io,,,,,,
Stamp,cc337l,https://www.stamp.network/,AI,,,,Stamp Network is an L2 blockchain focusing on supporting digital entities.,Agents,,,https://twitter.com/stampDOTnetwork,,,,,,
Starknet,hki5n0,https://www.starknet.io/en/,NOT_DEPIN,,STRK,,"Starknet is a Validity-Rollup (ZK-Rollup) Layer 2 network that operates on top of Ethereum, enabling dApps to massively scale without compromising on security.",,,,,,,,,,
Starpower,3gatyy,http://starpower.group/,ENERGY,,,,Starpower is an infrastructure company connecting distributed energy resources to decarbonize the energy sector.,,,,https://twitter.com/StarpowerTalent,,,,,https://www.linkedin.com/company/starpowerksa/about/,
Station,msq3dm,https://www.filstation.app/,NOT_DEPIN,,,,Station is an easy-to-use desktop app that connects users' computer’s idle resources to the Filecoin network and rewards them with FIL.,,ZZ,,,,,,,,
StationX,osv0he,https://www.stationx.network/,NOT_DEPIN,,,,StationX is a protocol for swiftly creating and overseeing DAOs in under a minute.,,,,https://twitter.com/stationxnetwork,945568396911738982,https://t.me/StationXnetwork,,,http://www.linkedin.com/company/stationxnetwork,
SteerFinance,nfdwqm,https://steer.finance/,COMPUTE,,,,SteerFinance is a developer of decentralized compute protocols.,,ZZ,,https://twitter.com/steerprotocol?lang=en,826272379327741992,,,https://github.com/steerprotocol,https://www.linkedin.com/company/steer-protocol/,
Step,ho83ef,https://step.app/,SENSORS,BINANCE,FITFI,step-app,Step is a move-to-earn mobile app that lets users earn crypto for their fitness efforts.,,,,https://twitter.com/StepApp?utm_source=site&utm_medium=organic_social&utm_campaign=always_on&utm_content=small_icons,959223427749801994,https://t.me/stepappchat?utm_source=site&utm_medium=organic_social&utm_campaign=always_on&utm_content=small_icons,https://step.app/blog,https://github.com/step-app-fi,https://www.linkedin.com/company/step-app-fi/,
StepN,9ptjw7,https://www.stepn.com/,SENSORS,ETHEREUM,GMT,stepn,"STEPN is a Web3 lifestyle app with inbuilt Game-Fi and Social-Fi elements. Players can make handsome tokens earnt though walking, jogging or running.",,,,https://twitter.com/Stepnofficial,890163015561932840,https://t.me/STEPNofficial,https://stepnofficial.medium.com/,,https://www.linkedin.com/company/stepn-by-find-satoshi-lab/,
Store,nb0mpn,https://storecloud.org/,COMPUTE,,,,STORE is a new layer zero staking protocol at the intersection of cloud computing and WEB3.,Storage,,,,,,,,,
Storj,arwynb,https://www.storj.io/,COMPUTE,ETHEREUM,STORJ,storj,Storj is a decentralized cloud storage platform using nodes to host user data in an open-source environment.,Storage,,,https://twitter.com/storj,,https://telegram.me/StorjProject,https://medium.com/@storjproject,https://github.com/Storj/,https://www.linkedin.com/company/storj/about/,
StorX,t69457,https://storx.tech/,COMPUTE,XDC,SRX,storx,StorX is a decentralized cloud storage network enabling permissionless selling/leasing of storage capacity.,Storage,ZZ,,https://twitter.com/StorXNetwork,1041587307419017246,https://t.me/StorXNetwork,https://medium.com/storx-network,https://github.com/StorXNetwork,https://www.linkedin.com/company/storxnetwork,
Stratos,4jq13p,https://www.thestratos.org/,BLOCKCHAIN_INFRA,ETHEREUM,STOS,stratos,"Stratos is a decentralized infrastructure that provides scalable, reliable, self-balanced storage, AI computation, and database networks and offers a solid foundation for data processing.",Data,ZZ,,https://twitter.com/Stratos_Network,799573145019219968,https://t.me/Stratos_announcement,https://stratos-network.medium.com/,https://github.com/stratosnet,https://www.linkedin.com/company/stratos-network,
Streamr,o1pv7k,https://streamr.network/,BLOCKCHAIN_INFRA,ETHEREUM,DATA,streamr,"Streamr is a decentralised protocol providing data pipelines, network analytics, and instant messaging.",Data,,,https://twitter.com/streamr,801574432350928907,https://t.me/streamrdata,https://medium.com/streamrblog,https://github.com/streamr-dev,https://www.linkedin.com/company/streamr-network/,
Suanbot,a4zdzs,t.me/Suanbot,WIRELESS,,,,Telegram bot for permissionless communications,,,,,,,,,,
Subconscious,5xypv6,https://subconscious.network/,COMPUTE,,,,Noosphere is a worldwide networked notes graph on IPFS.,,,,,1003419732516552724,,,https://github.com/subconsciousnetwork,https://www.linkedin.com/company/subconscious-network/,
SubQuery,kzaj07,https://www.subquery.network/,NOT_DEPIN,NATIVE,SQL,subquery-network,SubQuery is a decentralized data aggregation and querying layer for Layer-1 blockchains and dApps.,L1/L2,,,https://twitter.com/SubQueryNetwork,796198414798028831,https://t.me/subquerynetwork,https://medium.com/@subquery,https://github.com/OnFinality-io/subql,http://www.linkedin.com/company/subquery,
Subsquid,cp4cw6,https://www.subsquid.io/,BLOCKCHAIN_INFRA,,,,Subsquid: Open-source framework to extract & present blockchain data as GraphQL APIs for Web3 builders.,,,,https://twitter.com/subsquid,857105545135390731,https://t.me/subsquid,https://subsquid.medium.com/,https://github.com/subsquid,https://ch.linkedin.com/company/subsquid,
Substratum,nlustu,https://substratum.net/,WIRELESS,ETHEREUM,SUB,substratum,Substratum is an open-source network that leverages the power of the individuals to build a decentralized web.,,ZZ,,https://twitter.com/substratumnet,,,,,,
Succinct,moum0g,https://succinct.xyz/,NOT_DEPIN,,,,"Succinct builds a zero-knowledge infrastructure where developers can discover, develop, and deploy ZKs.",ZK,ZZ,,https://twitter.com/succinctlabs,,,,,,
Sudoswap,ea506r,https://sudoswap.xyz/#/,NOT_DEPIN,ETHEREUM,SUDO,sudoswap,sudoSwap: A gas-efficient AMM protocol for NFT-to-token swaps with customizable bonding curves. Supports various tokens.,,,,https://twitter.com/sudoswap,958946969106133023,,https://blog.sudoswap.xyz/,https://github.com/sudoswap,,
Sui,jhet5u,https://sui.io/,BLOCKCHAIN_INFRA,NATIVE,SUI,sui,"Sui is a layer 1 blockchain that allows simple transactions to be finalized in real-time without sacrificing security. ",,ZZ,,,,,,,,
Sunscreen,uao82z,https://sunscreen.tech/,NOT_DEPIN,,,,Sunscreen is a compiler for fully homomorphic encryption and zero-knowledge proofs.,FHE,EV3 Sal,,,,,,,,
Super Protocol,1lodgy,https://superprotocol.com/,COMPUTE,,,,Super Protocol is a Web3 confidential computing protocol that combines blockchain with advanced confidential computing technologies to create a universal decentralized cloud computing platform.,Storage,ZZ,,,,,,,,
Superalgos,3sy850,https://superalgos.org/,NOT_DEPIN,NATIVE,,,"Superalgos: crypto trading platform for open competition, allows traders to earn through signal broadcasting.",,,,https://twitter.com/superalgos,778730632812691488,,https://medium.com/superalgos,https://github.com/Superalgos/Superalgos,https://mt.linkedin.com/company/superalgos,
Superchain,0k93rc,https://www.superchain.network/,NOT_DEPIN,,,,"Developer of Open Index Protocol, an efficient decentralized indexer for on-chain data.",,,,https://twitter.com/OpenSuperchain,,,,https://github.com/SuperChainNetwork,http://www.linkedin.com/company/superchain-network,
Superchargd,3zlpbh,https://www.superchargd.com/,ENERGY,,,,"Superchargd is a pioneering app that connects EV drivers with a network of both public and private charging stations, enabling them to find, review, and book chargers easily. Superchargd allows charger owners to list their private chargers and earn.",,EV3 Sal,,https://twitter.com/Mapzlive,,,,,,
Superlocal,3czn02,https://www.superlocal.com/,WIRELESS,,,,Superlocal is a social network and game that rewards you with points for checking in at various places.,,,,https://twitter.com/joinsuperlocal,820756104169652254,,https://medium.com/@superlocalapp,,https://www.linkedin.com/company/superlocalapp/,
Supermeta,41xvbt,https://www.supermetaplus.com/,BLOCKCHAIN_INFRA,,,,We create phenomenal NFT experiences with exceptional creators and brands.,Gaming,,,https://twitter.com/supermetafi,,https://t.me/supermetafi,,,,
Superstake,1dp03n,https://superstake.club/,AI,BINANCE,SUPERSTAKE,superstake,Superstake is a staking platform and NFT marketplace for crypto enthusiasts in the SUPERPANCAKE ecosystem.,,,,,,,,,,
Supra,2d4mvd,https://supraoracles.com/,BLOCKCHAIN_INFRA,,,,SupraOracles is a decentralized oracle network that allows smart contracts to access off-chain data in a secure and reliable way.,Oracle,,,https://twitter.com/SupraOracles,857105545135390731,https://t.me/SupraOracles,https://medium.com/@SupraOracles,,https://www.linkedin.com/company/supraoracles/,
Suptho,rku44v,https://www.suptho.xyz/,WIRELESS,,,,Suptho: Geo-based social app merging digital experiences with in-person events.,,,,https://twitter.com/SupthoApp,837626991737307176,,https://medium.com/introducing-suptho,,https://www.linkedin.com/company/suptho/,
Surge,wmr4sm,https://getsurge.io/,COMPUTE,,,,Surge is a decentralized p2p filesharing app that ensures 100% anonymous file transfers through blockchain technology.,,,,https://twitter.com/SeattleSurge,443413382737952778,,,https://github.com/surge-sh,https://www.linkedin.com/company/surge/,
Swarm Markets,yb7eio,https://swarm.com/,NOT_DEPIN,ETHEREUM,SMT,swarm-markets,"Swarm provides a compliant, permissioned decentralized financial infrastructure where both institutions and retail investors can invest, stake and trade digitized traditional financial products alongside crypto assets in one unified environment.",RWA,ZZ,,https://twitter.com/SwarmMarkets,,,,,,
Swarm,8s783v,https://www.ethswarm.org/,COMPUTE,ETHEREUM,BZZ,swarm-bzz,Swarm is a decentralised data storage and distribution technology.,Storage,ZZ,,https://twitter.com/ethswarm,799027393297514537,,,https://github.com/ethersphere,http://www.linkedin.com/company/ethereum-swarm,
Swash,8mycy6,https://swashapp.io/,NOT_DEPIN,ETHEREUM,SWASH,swash,"Swash enables internet users, developers, and businesses to cultivate new realities of data ownership and value creation through new incentivisation streams.",,,,https://twitter.com/swashapp,977736974733557791,,https://medium.com/swashapp,,https://www.linkedin.com/company/swashapp/,
Sweat Economy,c0amvh,https://sweateconomy.com/,SENSORS,ETHEREUM,SWEAT,sweat-economy,"Sweat Economy is a blockchain-based movement-to-earn system that offers a novel solution by incentivizing physical activity with its cryptocurrency, $SWEAT,",,,,https://twitter.com/sweatcoin,945374789026070618,,,,,
SweetyAI,hqx94b,https://sweety.ai/,AI,,,,SweetyAI: Decentralized dating game dApp with AI-driven virtual girlfriends (NFTs) on Solana.,,,,https://twitter.com/SweetHentaiAI,,,,,,
Switch Electric,nm1uyh,https://www.whynotswitch.com/,SENSORS,IOTEX,,,Switch Electric Switch is a stealth project built on IoTeX.,Hardware,,,https://twitter.com/whyNotSwitch,,,,https://github.com/WhyNotSwitch,https://www.linkedin.com/company/switchelectric#,
Switchboard,iik6nb,https://switchboard.xyz/,BLOCKCHAIN_INFRA,,,,"Switchboard is a generalized, community-curated oracle network designed to incentivize bringing the long tail of data on-chain.",,,,https://twitter.com/switchboardxyz,841525135311634443,https://t.me/switchboardxyz,https://switchboardxyz.medium.com/,https://github.com/switchboard-xyz,https://www.linkedin.com/company/switchboardxyz/,
SWOT,pvl1bk,https://swotai.org/,AI,ETHEREUM,SWOT,,"SWOT AI is a strategic analysis platform that leverages advanced AI to provide customized, data-driven insights and guidance for Web3 projects.",,ZZ,,,,,,,,
SX,6l05cw,https://www.sx.technology/,NOT_DEPIN,ETHEREUM,SX,sx-network,SX Bet is a peer-to-peer web3 betting exchange that allows users to both offer and take bets. This peer-to-peer model of betting leads to better odds and removes the ability of owners to exploit the users for profit.,,ZZ,,,,,,,,
Sylo,8saiar,https://www.sylo.io/,COMPUTE,ETHEREUM,SYLO,sylo,"Sylo is a decentralized node network, protocol, and communications platform that offers a fully decentralized and secure messaging app, a confidential file-sharing and decentralized storage solution, and a Connected Applications Network.",,,,https://twitter.com/sylo,,https://t.me/sylo_io,https://medium.com/sylo-io,,,
SYNAPSEC,ua2pzu,https://www.synapsec.ai/,AI,BITTENSOR,,,"SYNAPSEC is a next-generation AI security platform that helps developers detect malicious intent within LLM-based applications such as prompt injections, sensitive information disclosures, and model denial of service. Built on Bittensor.",,EV3 Sal,,https://twitter.com/SYNAPSEC_AI,,,,,,
Synesis One,mhf5jn,https://www.synesis.one/,AI,SOLANA,SNS,synesis-one,Synesis One is a data crowdsourcing platform where anyone can earn $SNS by completing micro-tasks that train AI.,,,,https://twitter.com/synesis_one,914802829904982047,https://t.me/Synesis_One,https://medium.com/@synesisone,,http://www.linkedin.com/company/synesisone,
SynonAI,s6qqbx,https://www.synonai.net/,AI,,,,"SynonAI is a blockchain Layer 1 for AI that leverages GPU power to enable decentralized computing and advanced AI model training, ML, and LLM.",,ZZ,,https://twitter.com/SynonAI,,,,,,
Syntropy,m9yv19,https://www.syntropynet.com/,COMPUTE,ETHEREUM,NOIA,syntropy,"Syntropy is a decentralized, multi-purpose on-chain data streaming oracle for applications and blockchains.",Bridges,ZZ,,https://twitter.com/Syntropynet,503896258881126401,https://t.me/SyntropyNet,,https://github.com/SyntropyNet,https://www.linkedin.com/company/syntropynet/,
SYNX,iyyp59,https://alpha.synx.xyz/,COMPUTE,,,,SYNX is a safe personal storage platform that enables users to turn data into cash.,Storage,ZZ,,https://twitter.com/synx_xyz,,,,,,
Ta-Da,5mgqgs,https://ta-da.io/,AI,,TADA,ta-da,Ta-da is an AI data marketplace that uses blockchain technology to gamify the process of verifying AI data.,,,,https://twitter.com/Ta_da_io,,,,,,
TabbyPOS,x5fqva,https://www.tabbylab.io/,SENSORS,,EPOS,tabbypos,TabbyPOS is the First Community-Driven Blockchain Point of Sale. The blockchain payment solution integrates a hardware terminal with POS software that seamlessly merges the blockchain with real-world business operations.,,ZZ,,https://twitter.com/tabbypos,,,,,,
Tachyon,3gevoq,https://tachyon.eco/,WIRELESS,,IPX,tachyon-protocol,"Tachyon is a decentralized internet protocol that aims to create a libre, secure, and private internet. ",VPN,ZZ,,,,,,,,
Taiko,olo8b9,https://taiko.xyz/,NOT_DEPIN,,,,"Taiko is a fully open-source, permissionless, Ethereum-equivalent ZK-Rollup that will enable dApp developers and users to leverage the power of Ethereum Layer 1 (L1) without making any changes to their existing dApp.",ZK,ZZ,,,,,,,,
TAL,7et9go,https://buildontal.com/,AI,,,,TAL: Decentralized AI verification on Solana.,,,,https://twitter.com/talwilkenfeld?lang=en,,,https://medium.com/@thevaizman,https://github.com/topics/tal,https://www.linkedin.com/company/tal_2/,
Taliot,a239fd,,AI,,,,"Taliot is a job search platform, providing AI-powered tools for efficient and streamlined job hunting.",,,,,,,,,http://www.linkedin.com/company/copilot-ai-disaster-management,
Talus,l56q27,,AI,,,,"Talus is building a next-gen blockchain network for AI that utilizes Move’s smart contract security, performance, and object-oriented programming to create an environment for AI to thrive on-chain.",,ZZ,,https://twitter.com/TalusNetwork,,,,,,
Tanssi,zc045a,https://www.tanssi.network/,BLOCKCHAIN_INFRA,,,,Tanssi is a blockchain protocol simplifying app chain deployment for appchain infrastructure.,L1/L2,ZZ,,https://twitter.com/Medium,1072940134040883251,,,,http://www.linkedin.com/company/medium-com,
Tao Black,auplyk,,NOT_DEPIN,,,,Tao Black is a phone designed specifically for the Bittensor Environment on the Blockchain.,Hardware,EV3 Sal,,https://twitter.com/TaoBlackPhone,,,,,,
Tao Studio,h4cnmu,https://tao.studio/,AI,,,,Tao Studio is a developer of a text-based image generator that produces high-quality images.,,,,,,,,,https://www.linkedin.com/company/tao-studio/about/,
TAObets.ai,1wyd0b,N/A,NOT_DEPIN,,,,TAObets.ai is a sports prediction site powered by the cutting-edge Bittensor network with a focus on sports betting and fantasy sports.,,EV3 Sal,,,,,,,,
Taoshi,8p6wp2,https://www.taoshi.io/,AI,,,,"Taoshi harnesses the full potential of Bittensor to create dynamic and rewarding subnetworks that incentivize intelligence, revolutionizing how individuals and businesses interact with Bittensor.",,,,https://twitter.com/taoshiio?s=11,1163496128499683389,,,,,
Tape,081jvp,https://tape.xyz/,NOT_DEPIN,,,,"Discover a new era of content sharing on Lens with Tape. A decentralized, user-centric approach to online media.",Social,,,,980882088783913010,,,,,
Taroverse,ft0bj6,https://www.taroverse.com/,NOT_DEPIN,NATIVE,TARO,taroverse,Taroverse is a cross-platform metaverse platform enabling real-time interaction between players through digital avatars.,,,,,785165370927218708,,,,,
TARS,ra3011,https://tars.pro/,BLOCKCHAIN_INFRA,SOLANA,TAI,tars-protocol,"TARS Protocol is an AI-driven, scalable web3 modular infrastructure platform designed to empower projects with cutting-edge AI solutions, a decentralized GPU marketplace, and a one-stop Blockchain-As-A-Service.",,ZZ,,https://twitter.com/tarsprotocol,,,,,,
Tatami,56zb0b,https://www.tatami.games/,NOT_DEPIN,,,,"Tatami is the first-ever decentralized video game publisher, powered by a shared ecosystem.",,,,,,,,,,
Tau,ms4h4c,https://tau.net/,AI,ETHEREUM,AGRS,agoras-currency-of-tau,Tau is an AI software generation tool with AI safety features.,,,,https://twitter.com/TauLogicAI,695210246557138965,https://t.me/tauchain,https://tau.net/blog/,,https://www.linkedin.com/company/tau-network/,
Taubyte,zgv8uf,https://taubyte.com/,COMPUTE,,,,"Taubyte is a framework to build Cloud Computing Platforms/Networks. Taubyte enables organizations to build and manage their own cloud infrastructure in a flexible, interoperable, and transparent way, specifically designed to support the unique requirements of web3 and optimized for edge computing. ",,,,https://twitter.com/dtaubyte,,,https://medium.com/@taubyte,https://github.com/taubyte,https://www.linkedin.com/company/taubyte-page/,
Taxa,5zk1x8,https://taxa.network/,NOT_DEPIN,,,,"Taxa is a blockchain-agnostic layer-2 infrastructure ensuring privacy, power, and easy development.",L1/L2,ZZ,,https://twitter.com/taxanetwork,610854636785762369,https://t.me/taxanetwork,,,https://linkedin.com/company/taxanetwork,
TAZZ,lndlo6,https://tazz.finance/,NOT_DEPIN,,,,"Tazz creates capital-efficient debt markets, where borrowers issue debt against long-tail and hard-to-price collateral.",,,,,1117874500168589394,,,,,
tDrive,63c0w9,https://tdrive.io/,COMPUTE,,,,tDrive is a decentralized storage platform built on the Telos Blockchain.,Storage,ZZ,,https://twitter.com/mytdrive_id?lang=en,,,https://medium.com/@VeganLover/how-does-google-drive-work-2cda31c58ce8,https://github.com/linagora/TDrive,https://ca.linkedin.com/company/t-drive,
TEA Project,xmaehz,https://teaproject.org/,COMPUTE,,,,TEA Project: decentralized cloud computing for serverless apps.,,,,https://twitter.com/teaprojectorg,1042161438732603513,https://t.me/teaprojectorg,https://teaproject.medium.com/,,https://www.linkedin.com/company/tea-project/about/,
Techtics Engineering,1wmf1w,https://techticsengineering.com/,SENSORS,,,,Techtics Engineering is a specialized hardware manufacturer for decentralized physical infrastructure networks.,,,,,,,,,,
Tectum,72ks01,https://tectum.io/,NOT_DEPIN,ETHEREUM,TET,tectum,Tectum™ is a distributed ledger protocol managing platform that employs the proprietary record change signature management algorithm – HashDrive™.,,ZZ,,,,,,,,
TEKKON,sel0t5,https://tekkon.com/,BLOCKCHAIN_INFRA,,,,TEKKON: Web3 app for citizen-driven infrastructure solutions.,,,,https://twitter.com/TEKKON_official,1196209072551235626,https://t.me/TEKKONOfficial,https://medium.com/@Tekkon,,,
Teleport,aehc1q,https://www.teleport.xyz/,SERVICES,,,,"Teleport connects companies, drivers, and riders, promoting local economies and reducing costs.",Ridesharing,,,https://twitter.com/teleportxyz,,,,,http://www.linkedin.com/company/teleportxyz,
Telnyx,9a244u,https://telnyx.com/,NOT_DEPIN,,,,Telnyx helps enterprise manages connectivity need from a single platform.,,,,https://twitter.com/telnyx,,,,,https://www.linkedin.com/company/telnyx,
Telos,g8n4d7,https://www.telos.net/,NOT_DEPIN,NATIVE,TLOS,telos,Telos is a Layer-1 EVM blockchain with a DPoS consensus mechanism. It is EMV-compatible and powered by AntelopeIO.,L1/L2,,,https://twitter.com/HelloTelos,466757729508261889,https://t.me/HelloTelos,https://hellotelos.medium.com/,https://github.com/telosnetwork,http://www.linkedin.com/company/telos-blockchain-network,
Tempo,l84cmm,https://hellotempo.com/,SENSORS,,,,TEMPO allows anyone to have their own electric vehicle.,,,,,,,,,,
Ten,qa4qwx,https://obscu.ro/,NOT_DEPIN,,,,"Ten(formerly Obscuro) is developing a decentralized encryption Layer 2 built on top of Ethereum. Ten is designed to enable any Ethereum contract to operate at a larger scale, lower gas, without risk of MEV and crucially, with full encryption. It leverages a technology called Secure Enclaves.",,,,,,,,,,
Tensor Space,cs2nu7,https://tensorspace.cloud/,COMPUTE,BITTENSOR,TPU,,Tensor Space is a Decentralized Platform for AI and ML Computing that allows users to run and fine-tune AI models without code and utilize GPU/TPU/LPU computational power in a decentralized marketplace. Built on Bittensor.,,EV3 Sal,,https://twitter.com/tensorspace_ai,,,,,,
Tensorplex,fuqiiy,https://www.tensorplex.ai/,AI,BITTENSOR,STTAO,tensorplex-staked-tao,"Tensorplex Labs is building applications, infrastructure, and tools to supercharge AI development, leveraging decentralized AI networks such as Bittensor, and developing novel mechanisms to boost decentralized AI adoption and capabilities.",,ZZ,,https://twitter.com/TensorplexLabs,,,,,,
Tepax,pz0ffy,,BLOCKCHAIN_INFRA,,,,Tepax AI is a travel assistant company that utilizes artificial intelligence to enhance travel experiences.,,,,https://twitter.com/tepax_,,,,,http://www.linkedin.com/company/tepax,
Teq,fyfgb5,https://www.teq.network/,COMPUTE,ETHEREUM,TEQ,teq-network,"TEQ Network is a decentralized hosting platform offering AI-enhanced cloud computing, VPS Hosting, and a Virtual Private Network (VPN).",,ZZ,,https://twitter.com/TeqNetworkAI,,,,,,
Terminal Brain,61giyj,,AI,,,,Developer of AIGC distributed computing power network platform created to provide customers with powerful computing power support.,,,,,,,,,https://www.crunchbase.com/organization/terminal-brain-technology,
Terminal3,gf055c,https://www.terminal3.io/,COMPUTE,,,,"Terminal 3: Web3 startup for decentralized data storage, providing privacy and security.",Storage,,,https://twitter.com/terminal3gaming?lang=en,,,,,https://www.linkedin.com/company/terminal3,
Ternoa,qg0thq,https://www.ternoa.network/,BLOCKCHAIN_INFRA,,,,"Ternoa is a multi-network and cross-layer protocol leveraging confidential computing technologies to make blockchain more secure, private, and scalable.",,ZZ,,https://twitter.com/ternoa_,,,,,,
TestMachine,tfvxda,https://testmachine.ai/,AI,,,,TestMachine is an AI-powered blockchain security platform that aids smart contract developers in finding and fixing vulnerabilities in blockchain code at lightning speed.,,EV3 Sal,,,,,,,,
Thala,rrvozj,https://www.thala.fi/,NOT_DEPIN,APTOS,THL,thala,Thala is a DeFi protocol native to the Aptos blockchain.,,,,,1031262886863048834,,,,,
The Graph,x3ay3v,https://thegraph.com/,BLOCKCHAIN_INFRA,ETHEREUM,GRT,the-graph,"The Graph: a blockchain indexing protocol, providing efficient GraphQL-based access to blockchain data.",,,,https://twitter.com/graphprotocol,438038660412342282,https://t.me/graphprotocol,https://medium.com/graphprotocol,https://github.com/graphprotocol,https://www.linkedin.com/company/thegraph/,
The Posemesh Foundtion,p2unbp,https://www.posemesh.org/,BLOCKCHAIN_INFRA,,AUKI,,"The Posemesh protocol enables spatial computing for people, devices, and AI. It lets users create, share, and access spatial data in a private and permissionless way.",,,,https://twitter.com/Posemesh,,,https://www.posemesh.org/news,https://github.com/aukilabs,,
The Recharge,ba2ef9,https://www.therecharge.io/,ENERGY,ETHEREUM,RCG,recharge,The Recharge is a decentralized incentive solution that connects electric-charging platforms.,,,,,808417775978676265,,,,,
The Root Network,zlch56,https://www.therootnetwork.com/,NOT_DEPIN,ETHEREUM,ROOT,the-root-network,"The Root Network is a public decentralized blockchain network optimized for metaverse apps, games and experiences.",,,,,864685888830963742,,,,,
Theopetra,gaipt2,https://www.theopetralabs.com/,NOT_DEPIN,ETHEREUM,THEO,theopetra,Theopetra is a pioneering Network State where citizens collectively own land and influence real estate investments through a decentralized currency and governance tokens.,RWA,ZZ,,https://twitter.com/TheopetraLabs,,,,,,
Theta Fuel,bsun3b,https://thetatoken.org/,COMPUTE,NATIVE,TFUEL,theta-fuel,Theta Fuel is a decentralized video delivery network.,,,,https://twitter.com/Theta_Network,808417775978676265,https://t.me/s/thetanetwork_announcements?before=516,https://medium.com/theta-network,https://github.com/thetatoken,http://www.linkedin.com/company/theta-labs-inc,
TheX,zsr4j2,https://thexprotocol.com/,NOT_DEPIN,,,,"Next-gen Web3 protocol for seamless transition, adoption, scalability, security, and user-friendliness.",,,,https://twitter.com/txprotocol,,https://t.me/thexprotocol,,,https://www.linkedin.com/company/the-x-protocol/,
Thingsix,488l20,https://www.thingsix.com/,WIRELESS,,,,"ThingsIX is a decentralized global Internet of Things network, built to reward gateway operators for providing reliable coverage and for delivering reliable data to end users.",,W. L.,,https://twitter.com/Things_IX,1008035508221378631,,https://blog.thingsix.com,https://github.com/ThingsIXfoundation,,
Thought,0bu4wx,https://www.thought.live/,AI,NATIVE,THT,thought,ThoughtAI is an adaptive AI using Self-Aware Intelligent Software Agents.,Agents,,,,,,,,,
Three Protocol,84iurs,https://www.threeprotocol.ai/,BLOCKCHAIN_INFRA,NATIVE,THREE,,"Three Protocol is a decentralized platform utilizing No-KYC ZKP Pseudoanonymity, Neural Network AI, and Tri-Signature DAOs to establish autonomous marketplaces, enabling financial inclusion, efficient procurement, and crypto transactions.",,ZZ,,https://twitter.com/ThreeProtocol,,,,,,
ThreeFold,7exuma,https://threefold.io/,COMPUTE,ETHEREUM,TFT,threefold-token,"ThreeFold is a globally-distributed grid offering storage, compute, and network capacity.",,ZZ,,https://twitter.com/threefold_io,,https://t.me/threefoldnews,,https://github.com/threefoldfoundation,https://linkedin.com/company/threefold-foundation,
Ties.DB,4p06pz,https://tiesdb.com/,COMPUTE,,,,Ties.DB: Secure decentralized database for projects.,Storage,,,https://twitter.com/tiesnetwork-,,https://t.me/tiesdb,,https://github.com/tiesnetwork,https://www.linkedin.com/company/tiesdb/,
Timpi,7npg1x,https://timpi.io/,BLOCKCHAIN_INFRA,,,,Timpi is the world’s first completely decentralized search engine with its own index. It is designed to integrate blockchain technology within the framework of traditional global commerce while being autonomously governed and globally scalable.,,ZZ,,https://twitter.com/Timpi_TheNewWay,,,,,,
tinygrad,n1ufl0,https://tinygrad.org/,AI,,,,"tinygrad is a simple and powerful neural network framework for deep learning that offers a balance between simplicity and functionality, with support for both training and inference on various hardware accelerators. ",,,,,1068976834382925865,,,,,
Titan,0seuc1,https://www.titannet.io/,COMPUTE,,,,"Titan is a decentralized edge computing intelligent platform built on Filecoin and compatible with IPFS, aimed at providing decentralized shared edge computing services for Web 3.0.",,,,,,,,,,
Together.ai,rr8fxt,https://together.ai/,AI,,,,Together.ai is a decentralised cloud platform that empowers developers to train and deploy generative AI models.,GPUs,ZZ,,http://twitter.com/togethercompute,1082503318624022589,,,,http://www.linkedin.com/company/togethercomputer,
Ton,hdcw1i,https://ton.org/,BLOCKCHAIN_INFRA,NATIVE,TON,toncoin,TON is a fully decentralized layer-1 blockchain designed by Telegram to onboard billions of users.,L1/L2,ZZ,,https://twitter.com/ton_blockchain,,,,,,
Tontine,34j0w3,https://playtontine.com/,NOT_DEPIN,,,,"Tontine: retention-focused platform for web3 dApps, using onchain streaks to gamify user engagement.",,,,https://twitter.com/TontineTrust,,,https://tontine.com/blog/,,https://www.linkedin.com/company/tontinetrust/,
Totem,6y1kh5,https://www.totem.gdn/bin/view/Main/,NOT_DEPIN,POLYGON,TOTEM,dragonmaster-totem,"Decentralized ecosystem for game developers, enabling collaboration and revenue earning.",Gaming,,,https://twitter.com/TotemGDN,,,,https://github.com/Totem-gdn,http://www.linkedin.com/company/totem-gdn,
Toucan,wyx859,https://toucan.earth/,ENERGY,POLYGON,BCT,toucan-protocol-base-carbon-tonne,Toucan Protocol provides a blockchain-based platform for tokenized trading of carbon credits from the Voluntary Carbon Market (VCM).,,,,https://twitter.com/ToucanProtocol,706114892666765375,,https://blog.toucan.earth/,https://github.com/ToucanProtocol,https://www.linkedin.com/company/toucan-protocol/,
TouchBrick,ocwr48,https://www.touchbrick.com/,NOT_DEPIN,,,,"TouchBrick is a revolutionary blockchain tokenization and cybersecurity solution built around decentralized privacy vaults, safeguarding sensitive data in healthcare, fintech, and AI applications, supported by an AI agent.",,EV3 Sal,,https://twitter.com/Touchbrick/,,,,,,
Trace,bjvhmg,https://trace.network/,AI,ETHEREUM,TRACE,trace-network-labs,Trace is a decentralized protocol enabling luxury lifestyle for multichain metaverses with NFTs & digital fashion.,,,,https://twitter.com/trace_network,889566942678102016,,https://medium.com/@tracenetwork,,http://www.linkedin.com/company/trace-network-labs,
TRACEFLO,up2s95,https://www.traceflo.com/,NOT_DEPIN,,,,"TRACEFLO offers a DePIN Aggregator API, offering corporate customers streamlined access to the rapidly expanding decentralized world.",,ZZ,,https://twitter.com/traceflolabs,,,,,,
TravelSwap,lsn7mu,https://travelswap.xyz/,NOT_DEPIN,,,,TravelSwap is a travel website that allows users to book hotel rooms & vacations directly with popular cryptocurrencies.,,EV3 Sal,,https://twitter.com/TravelSwap_xyz,,,,,,
Tree News,zrsqma,https://twitter.com/treetokeneth,NOT_DEPIN,ETHEREUM,TREE,,Tree News is a Decentralized Community-Run News Aggregator.,,EV3 Sal,,,,,,,,
Trekn,xxpflh,https://trekn.xyz/,SENSORS,SOLANA,TRK,,"Trekn is a decentralized social mapping platform that lets users earn rewards by sharing and contributing valuable data, including photos, reviews, and ratings, of places in their local area.",,ZZ,,https://twitter.com/Trekn_xyz,,,,,,
Tresorio,l7nsll,https://www.tresorio.com/,COMPUTE,,,,Tresorio Operator is a fog computing platform providing carbon-friendly micro data centers and cloud computing services.,,,,https://twitter.com/TresorioCloud,,,,,https://www.linkedin.com/company/tresoriocloud/,
Triall,ppw0qm,https://www.triall.io/,NOT_DEPIN,ETHEREUM,TRL,triall,Triall is an end-to-end digital ecosystem of blockchain-enabled software solutions for clinical trials.,,ZZ,,,,,,,,
Trias,gcp7d3,https://www.trias.one/,NOT_DEPIN,ETHEREUM,TRIAS,trias-token,Trias is a cloud infrastructure solution with a native-application-compatible platform and token ecosystem.,,,,https://twitter.com/triaslab,871671996046512148,https://t.me/triaslab,https://triaslab.medium.com/,https://github.com/trias-lab/Documentation,http://www.linkedin.com/company/trias-lab,
TripsIP,vsfg1l,https://tripsip.io/,NOT_DEPIN,,,,Creator monetization platform,,EV3 Sal,,,,,,,,
Triton One,fw5onx,https://www.triton.one/,BLOCKCHAIN_INFRA,,,,"Demonstrably Superior RPC for Solana, Sui, PythNet, and other blockchains. Build, iterate, and ship faster with Triton. ",,EV3 Sal,,,,,,,,
Trixta,3ztu6q,https://trixta.ai/,AI,,,,"Trixta is a decentralized business operating system that allows users to model, build and orchestrate distributed software with the use of Autonomous AI agents and Visual tools.",Agents,,,https://twitter.com/TrixtaTeam,,,https://medium.com/trixta,,https://www.linkedin.com/company/trixta/about/,
Tromero,hi03tk,https://www.tromero.org/,AI,,not yet,,"Tromero is a peer-to-peer blockchain that merges traditional proof of work consensus with ML to empower secure, democratic and decentralized ML applications.",,,,https://twitter.com/TromeroAI,,,,,https://www.linkedin.com/company/tromero/about/,
Tropiguna,q2xu7j,https://www.tropiguna.com/,NOT_DEPIN,,,,"Tropiguna is a Community Platform + Launchpad, ushering in the era of 'Community Acceptance Testing' in the Web3, DePIN, and RWA realms to revolutionize how projects validate, test, and evolve.",,EV3 Sal,,https://twitter.com/tropiguna,,,,,,
Trudenty,hz3nza,https://trudenty.com/,NOT_DEPIN,,,,Trudenty is a consumer data network providing fraud risk scores for customers and autonomously executes personalised customer experiences based on risk in real time.,,,,https://twitter.com/trudenty,,,,,https://www.linkedin.com/company/trudenty/,
Truebit,s2zdlj,https://truebit.io/,COMPUTE,ETHEREUM,TRU,truebit-protocol,Truebit is an outsourced computation protocol that aims to take off-chain large computation tasks such as complex smart contracts.,,,,https://twitter.com/Truebitprotocol,,,https://medium.com/truebit,https://github.com/TruebitProtocol,https://www.linkedin.com/company/truebit/,
Trueblocks,sfby9z,https://trueblocks.io/,BLOCKCHAIN_INFRA,,,,"High-quality, per smart contract, decentralized data delivered 100s of times faster than the RPC.",,EV3 Sal,,,570963863428661248,,,,,
Truffles,tcai80,https://trufflesuite.com/,NOT_DEPIN,,,,The most comprehensive suite of tools for smart contract development,,,,https://twitter.com/trufflesuite,,,,,,
Truflation,dl6pqe,https://truflation.com/,NOT_DEPIN,ETHEREUM,TRUF,truflation,"Truflation is an economic data aggregator and a Data Oracle for RWA, Indexes, and Inflation. ",Data,EV3 Sal,,https://twitter.com/truflation,,,,,,
Trustpad,rj7rcg,https://trustpad.io/,NOT_DEPIN,BINANCE,TPAD,trustpad,TrustPad is a decentralized multi-chain fundraising platform enabling projects to raise capital and promise safety to early stage participants.,,,,https://twitter.com/TrustPad,967789840072585318,https://t.me/TrustPad,https://trustpad.medium.com/,,https://www.linkedin.com/company/trustpad/,
Tunnl,rpehc3,https://www.tunnl.io/,BLOCKCHAIN_INFRA,,,,Tunnl is an end-to-end on-chain marketing platform designed to streamline the deal flow between brands and creators.,,ZZ,,https://twitter.com/Tunnl_io,,,,,,
TurboGlobal,uke8jp,http://turboglobal.io/,WIRELESS,ETHEREUM,TGB,,"TurboGlobal is building a Web3 dVPN service platform that offers free connections to users, rewards miners and promotes advertisers.",,ZZ,,,,,,,,
TwentySix Cloud,6624lr,https://www.twentysix.cloud/,COMPUTE,,,,"Twentysix Cloud is a decentralized cloud marketplace offering a full range of blockchain-based storage, compute engine, indexing, and AI solutions for businesses and applications, powered by Aleph.im.",,ZZ,,,,,,,,
U2 DPN,o5s8lu,https://u2dpn.xyz/,WIRELESS,,,,U2 DPN is a Decentralized Private Network that allows users to share their unused network bandwidth to earn passive income and provides a pay-as-you-go service for others to use this bandwidth for Internet privacy and security.,,ZZ,,,,,,,,
U2U,hz8qel,https://u2u.xyz/,BLOCKCHAIN_INFRA,,U2U,unicorn-ultra,U2U Network is a DAG (Directed Acyclic Graph) based and EVM-compatible chain that leverages Subnet technology to provide infinite scalability for DePIN projects.,,ZZ,,https://twitter.com/uniultra_xyz,,,,,,
UBIQnet,7lu677,https://ubiqnet.io/,COMPUTE,,,,"UBIQnetis a web3-based infrastructure for ubiquitous computing, with innovative dynamic fractional NFT smart contracts for efficient scheduling.",,ZZ,,https://twitter.com/UBIQ_net,1079671303801425942,,,https://github.com/ubiqnet,http://www.linkedin.com/company/ubiqnet,
UDAO,u3j1zw,https://udao.org/,NOT_DEPIN,ETHEREUM,UDAO,,"UDAO is an AI-driven Skills Platform on Web3 that enables members to control their skills development, connect, and collaborate in a transparent and fair environment, benefiting from personal development plans, skill models, and hands-on applications.",,ZZ,,https://twitter.com/udao_official,,,,,,
Ukaton,g65bda,https://ukaton.com/,SENSORS,,,,"Ukaton is a footwear company developing programmable insoles for health, VR/AR, and human interaction.",Health & Fitness,ZZ,,https://twitter.com/ConcreteSciFi,,,,https://github.com/Ukaton-Inc,https://www.linkedin.com/company/ukaton/,
UKISS,4uhpxf,https://www.ukiss.io/,BLOCKCHAIN_INFRA,,KISS,,UKISS Technology is dedicated in building the next-gen digital security Ecosystem.,,,,,1143746313738010685,,,,,
Ultra,8yqcpk,https://ultra.io/,NOT_DEPIN,,,,"Ultra is a next-gen entertainment platform providing new possibilities for gamers, developers, and creators.",,,,,431591787321098270,,,,,
UltronGlow,4glwdr,https://www.ultronglow.io/,COMPUTE,NATIVE,,,UltronGlow is a decentralized storage network that allows anyone to store their data securely and privately on a network of distributed nodes.,Storage,ZZ,,https://twitter.com/ultronglow,,https://t.me/UltronGlowOfficial,https://ultronglow.medium.com/,https://github.com/UltronGlow,https://www.linkedin.com/company/ultronglow,
Ulvetenna,liwr2s,https://www.ulvetanna.io/,NOT_DEPIN,,,,Ulvetanna is an Enterprise Grade Zero-Knowledge Proof Acceleration Platform supporting web3 technologies.,ZK,ZZ,,,,,,,,
UMA,u27ctr,https://uma.xyz/,BLOCKCHAIN_INFRA,ETHEREUM,UMA,uma,"UMA is an optimistic oracle and dispute arbitration system that securely allows for arbitrary types of data to be brought on-chain. UMA’s oracle system provides data for projects including a cross-chain bridge, insurance protocols, custom derivatives, and prediction markets.",Oracle,ZZ,,,,,,,,
Umma,6rwsbm,https://umma.finance/,NOT_DEPIN,POLYGON,UMMA,umma-token,"At Umma, we believe that the traditional debt-based financial system is perverse, unjust, and socially destructive.",RWA,,,https://twitter.com/UmmaFinance,,https://t.me/ummafinancechat,https://medium.com/ummah-finance,https://ummafinance.substack.com/,https://www.linkedin.com/company/umma-finance,
Unifique,dto1yc,https://unifique.com.br/,NOT_DEPIN,,,,Home internet provider in Brazil.,,EV3 Sal,,,,,,,,
Unimoon,48jwhp,https://unimoon.ai/,AI,ETHEREUM,UMOON,unimoon-umoon,Unimoon maximizes token rewards using AI on Ethereum.,,,,https://twitter.com/Unimoonofficial,,https://t.me/unimoonportal,,,,
Union,bojh48,https://union.build/,NOT_DEPIN,,,,"Union is a hyper-efficient zero-knowledge infrastructure layer for general message passing, asset transfers, NFTs, and DeFi.",ZK,ZZ,,https://twitter.com/union_build,,,,,,
Unit,9e953q,https://www.unit.network/,BLOCKCHAIN_INFRA,NATIVE,UNIT,,"Unit Network is a protocol and application that enables a new token-based economy, an open financial network for communities, projects, businesses, real-world assets, and network states.",RWA,,,,766259203278241823,,,,,
Units.Network,cullib,https://www.units.network/,BLOCKCHAIN_INFRA,,UNIT0,,"UNITS is an ecosystem of interconnected blockchain networks unified by common economic incentives and consensus. ",,ZZ,,,,,,,,
Unlock,i7nidt,https://unlock-protocol.com/,NOT_DEPIN,,,,"Unlock is a protocol for creators to monetize content, using just a few lines of decentralized code.",,,,,,,,https://github.com/unlock-protocol,https://www.linkedin.com/company/joinunlock/,
Unofficial,ieoypf,https://unofficial.run/,NOT_DEPIN,,,,Unofficial is a composable social platform and subscription-based service that aims to revolutionize traditional social media.,Social,EV3 Sal,,,,,,,,
Untangled,xexd0a,https://www.untangled.finance/,NOT_DEPIN,,,,"Untangled.Finance bridges traditional and DeFi, bringing institutional-grade, real-world assets on chain.",RWA,,,https://twitter.com/untangledfin,863752120053006366,,https://www.linkedin.com/company/untangled-finance/,,https://github.com/untangledfinance,
Upfire,0e9eh3,https://upfire.com/,COMPUTE,ETHEREUM,UPR,upfire,"Upfire is a decentralized protocol for secure P2P file-sharing, enabling users to earn crypto.",,,,https://twitter.com/UpfireHQ,898179589531131904,https://t.me/UpfireOfficial,https://medium.com/upfire/,https://github.com/UpfireHQ/upfire,https://linkedin.com/company/upfireofficial,
uPlexa,856ev1,https://uplexa.com/,NOT_DEPIN,NATIVE,UPX,uplexa,uPlexa is a peer-to-peer electronic payment system utilizing IoT and privacy.,L1/L2,,,https://twitter.com/uPlexaCoin,417982588498477060,https://t.me/uplexaOfficial,https://medium.com/@uplexa,https://github.com/uPlexa,http://www.linkedin.com/company/uplexa,
Uplink,hq5oeh,https://www.uplink.xyz/,WIRELESS,,ULX,,Uplink is a decentralized Wifi network empowering human connectivity through internet access.,,ZZ,,https://twitter.com/uplink_xyz,,,,,,
UpOnly,kiskk2,https://www.uponly.com/,NOT_DEPIN,POLYGON,UPO,uponly,UpOnly is a Play to Earn Gaming Analytics and Prediction Platform.,Gaming,ZZ,,https://twitter.com/UpOnlyOfficial,,,,,,
UpRock,1rtzqi,https://uprock.com/,AI,,,,"UpRock AI revolutionizes decision-making with personalized, real-time insights.",,,,https://twitter.com/uprockcom,,https://t.me/uprockcom,,https://github.com/uprockcom,https://www.linkedin.com/company/uprock/,
Upshot,2ne1u8,https://upshot.xyz/,AI,,,,Upshot is a decentralized AI platform enabling efficient financial markets for anything.,,,,,644591703507861515,,,,,
UpSocial,9dm67q,https://upsocial.com/,NOT_DEPIN,,,,UpSocial: a blockchain-backed decentralized social network with user rewards and token features.,,,,https://twitter.com/UpSocialBCN,,,https://medium.com/@upsocials,https://github.com/0l6/up,https://www.linkedin.com/company/upsocial,
Upstreet,ke5ypn,https://upstreet.ai/,AI,,,,Upstreet is creating immersive experiences in browser-based products with multimodal AI agents built on top of a custom 3js game engine.,,EV3 Sal,,,,,,,,
US3R,hqj4vb,https://us3r.co/,BLOCKCHAIN_INFRA,,,,US3R: Dev platform and dApps with composable data using Ceramic for decentralized storage.,,,,https://twitter.com/getus3r,961112286733434950,,,https://github.com/us3r-network,,
Useful Sensors,25vqyc,https://usefulsensors.com/,SENSORS,,,,"Low-cost ML hardware modules for gesture and voice recognition on TVs, laptops, and appliances, ensuring user privacy.",Hardware,,,,,,,https://github.com/usefulsensors,http://www.linkedin.com/company/useful-sensors-inc,
UtilityNet,kms5fc,https://utnet.org/,COMPUTE,BINANCE,UNC,utility-net,UtilityNet is a global Decentralized Digital Chip Network that provides chip resources for next-generation edge computing and AI infrastructure.,,ZZ,,https://twitter.com/UtilityNet_,,,,,,
Vaiot,sa6vqu,https://vaiot.ai/,AI,ETHEREUM,VAI,vaiot,Vaiot is a provider of blockchain-based AI Assistants and on-chain Intelligent Contracts for businesses and consumers.,,,,https://twitter.com/VAIOT_LTD,1062035044618743819,https://t.me/VAIOT_Community,https://vaiotltd.medium.com/,https://github.com/VAIoT,http://www.linkedin.com/company/vaiot-ltd,
Validation Cloud,rzmrjq,https://www.validationcloud.io/,COMPUTE,,,,"Validation Cloud is a Web3 infrastructure platform that delivers elite, high-performance node and staking infrastructure.",Mining,,,https://twitter.com/ValidationCloud,,,https://validationcloud.medium.com/,,https://www.linkedin.com/company/validationcloud,
Valist,g2jtmx,https://www.valist.io/,NOT_DEPIN,,,,Valist: Decentralized platform for game deployment on Web2 and Web3.,Gaming,,,https://twitter.com/valist_io,785535462311591976,,,https://github.com/valist-io,http://www.linkedin.com/company/valist-inc,
ValleyDAO,rrbnx6,https://www.valleydao.bio/,NOT_DEPIN,ETHEREUM,GROW,valleydao,"ValleyDAO is an open, global community offering funding and translational support for synthetic biology research.",,ZZ,,,,,,,,
Vana,zt2nzn,https://www.vana.com/,AI,,,,"Create a mini “you” that lives in your pocket. Discover a new way to connect and experience the world. ",,EV3 Sal,,,1035319704224542832,,,,,
Vanar,6ls7z4,https://vanarchain.com/?lang=en,NOT_DEPIN,ETHEREUM,VANRY,vanar-chain,"Vanar offers a carbon-neutral, high-speed & low-cost layer 1 blockchain designed for entertainment and mainstream purposes.",,,,,,,,,,
Vanna,adlfda,https://www.vannalabs.ai/,AI,,,,"The Vanna Network is an EVM-compatible rollup focused on AI and ML. It supports native, zkML-secured inference directly computed, secured, and verified on-chain; designed in a way that leveraging AI/ML in dApps is as easy as a simple function call.",,ZZ,,https://twitter.com/0xVannaLabs,,,,,,
Vara,9314iq,https://vara-network.io/,NOT_DEPIN,NATIVE,VARA,vara-network,"Vara Network is a Substrate-based, Proof-of-Stake, Layer-1 decentralized network powered by the Gear Protocol.",,,,,891063355526217738,,,,,
Vast.ai,2o9o23,https://vast.ai/,COMPUTE,,,,Vast.ai is a GPU rental marketplace enabling users to rent their own GPU or rent GPUs from others.,GPUs,ZZ,,https://twitter.com/vast_ai,466338952710979595,,,https://github.com/vast-ai,https://linkedin.com/company/vast-ai,
VaultTech,0tthma,https://vault.tech/,AI,ETHEREUM,VAULT,vaulttech,"Vault.tech offers a blockchain ecosystem with AI-enhanced escrow, OTC trading, and private swaps via VaultChain. Token holders gain exclusive benefits, while VaultAI's Escrow Bot ensures secure, impartial transactions.",,ZZ,,,,,,,,
Vaxchain,adc9fo,https://devpost.com/software/vaxchain,SENSORS,,,,Devpost inspires the world's developers to build great software.,Health & Fitness,,,https://twitter.com/devpost,861966823054639134,,https://info.devpost.com/blog,https://github.com/kie478/vaxchain,https://www.linkedin.com/company/devpost/,
Vayu,c6954r,https://www.vayurobotics.com/,NOT_DEPIN,,,,"Vayu is building a scalable mobile robotics platform using cutting edge bio-inspired sensing, ML, and robotics.",Robotics,,,https://twitter.com/VayuRobotics/status/1709162252866355627,,,http://www.linkedin.com/company/vayu-robotics,,,
VC Spectra,qbgfxz,https://vcspectra.io/,NOT_DEPIN,,,,Decentralized asset management and trading platform with secure investments.,DeFi,,,https://twitter.com/spectravcfund?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,,,,
VeChain,ed5hwr,https://www.vechain.org/,NOT_DEPIN,VECHAIN,VET,vechain,VeChain enables businesses to build decentralized apps for data transfer and supply-chain management.,,,,https://twitter.com/vechainofficial?lang=en,875335100399771670,https://t.me/s/vechainannouncement,https://vechainofficial.medium.com/,https://github.com/vechain,http://www.linkedin.com/company/vechain-foundation,
Vectorspace,lzys3d,https://vectorspacebio.science/,AI,ETHEREUM,VXV,vectorspace,"Vectorspace AI provides correlation matrix datasets for data-driven innovation, with a focus on NLP/NLU.",,,,https://twitter.com/VectorSpaceBio,925153007266562168,https://t.me/joinchat/GrCYjA8rPgD8coAiEhRuBA,https://spacebiosciences.medium.com/,https://github.com/vectorspace-ai,http://www.linkedin.com/company/vector-space-biosciences,
Veera,luxgal,https://www.veera.com/,NOT_DEPIN,,,,Veera is a mobile-focused browser that brings everything desktop browsers have but is optimized for a mobile experience.,,EV3 Sal,,,,,,,,
Vega,ie91s7,https://vega.xyz/,NOT_DEPIN,ETHEREUM,VEGA,vega-protocol,Vega Protocol is a blockchain-backed network enabling automated trading and execution of financial products.,DeFi,ZZ,,https://twitter.com/vegaprotocol,720571334798737489,https://t.me/vegacommunity/,https://medium.com/@Vega_Protocol,https://github.com/vegaprotocol,https://linkedin.com/company/vega-protocol,
Verasity,20y2yy,https://verasity.io/,BLOCKCHAIN_INFRA,ETHEREUM,VRA,verasity,Verasity is a decentralized ecosystem of digital advertisers and merchants.,,,,https://twitter.com/verasitytech?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,850659368953577492,https://t.me/verasity,https://medium.com/verasity,https://github.com/veracity,https://vg.linkedin.com/company/verasity,
Verida,hjruy9,https://verida.io/,NOT_DEPIN,,,,"Verida is a decentralized data storage, messaging, and single sign-on solution.",,,,https://twitter.com/verida_io,664594912460668960,https://t.me/verida_community,https://news.verida.io/,,https://www.linkedin.com/company/verida-technology/,
VERIFY,fzvw4b,https://www.verifymedia.com/,NOT_DEPIN,,,,"VERIFY is a protocol for media companies to register content and grant usage rights to AI platforms, while also allowing end consumers to verify the origin of content.",,EV3 Sal,,,,,,,,
Verisoul,2gzcyz,https://www.verisoul.ai/,BLOCKCHAIN_INFRA,,,,"Verisoul: A decentralized platform for trusted Web3 businesses, ensuring privacy and trust.",,,,https://twitter.com/verisoulxyz,,https://t.me/Verisoul,,https://github.com/verisoul,http://www.linkedin.com/company/verisoul-stops-fake-users,
Veritree,hhtpfc,https://www.veritree.com/,ENERGY,,,,Veritree is a blockchain company specializing in transparent and durable systems for verifying tree planting & growth.,Environmental,,,https://twitter.com/veritree_,,,https://medium.veritree.com/,,https://ca.linkedin.com/company/veritree,
Vicharak,sbclxl,https://vicharak.in/,COMPUTE,,,,Reconfigurable edge computing,,EV3 Sal,,,,,,,,
VIDT,u9uyrj,https://www.vidt-dao.com/,BLOCKCHAIN_INFRA,ETHEREUM,VIDT,vidt-dao,"VIDT DAO develops a blockchain technology that securely timestamps and authenticates users' digital documents. With VIDT developers and users can create timestamps, NFTs, and register digital assets such as certificates, sensor data, and firmware.",,ZZ,,,,,,,,
Vinci,pd96s1,https://staging.vinciworld.io/,AI,,,,"Vinci World provides AI models for blockchain games, enhancing gaming experiences with cutting-edge technology.",Gaming,,,https://twitter.com/VinciWorld,,,,,,
VIP3,517uvj,https://www.vip3.io/,BLOCKCHAIN_INFRA,,,,"VIP3 is a Web3 membership platform providing bonuses, discounts, and privileges via on-chain SBT membership cards.",,,,,1043916110694719579,,,,https://uk.linkedin.com/company/metafour,
Viper,1sbdg8,https://vipernet.xyz/,BLOCKCHAIN_INFRA,,,,Viper is a decentralized RPC for Solana.,RPC/Indexing,,,https://twitter.com/Nilfiskofficial,1035116329193189396,,,,https://www.linkedin.com/company/viper/,
Viridis,5kd57s,https://viridis.network/,ENERGY,ETHEREUM,VRD,viridis-network,"Viridis is building a novel protocol to deliver publicly auditable, on-chain and easily transactable carbon offsets for DeFi.",,ZZ,,,,,,,,
Virtu Cloud,98hqgn,https://www.virtuclouds.com/,COMPUTE,,VIRTU,,"Virtu Cloud is an innovative cloud computing platform dedicated to humanizing advanced technologies. It focuses on accessibility, offering an intuitive interface and simplified tools for tasks like mining, virtual machine setups, and more.",,ZZ,,https://twitter.com/VirtuCloud,,,,,,
Visionary,zwpehj,https://visionary.energy/,ENERGY,,,,"Decentralized energy storage solution for clean power supply, managed by cloud service.",VPP,,,https://twitter.com/visionary_uk?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,,,https://medium.com/@almehawas,,https://www.linkedin.com/company/visionaryis/,
VitaDAO,g0o72l,https://www.vitadao.com/,BLOCKCHAIN_INFRA,ETHEREUM,VITA,vitadao,"VitaDAO is a globally distributed, community-owned collective that funds and incubates translational aging research with a view to commercialise the resulting IP. VITA is their governance token, which is used to vote on and govern longevity research funding proposals.",,EV3 Sal,,https://twitter.com/vita_dao,810893413880561704,https://t.me/vitadao,https://www.vitadao.com/blog,https://github.com/VitaDAO,https://www.linkedin.com/company/vitadao/,
Vitreus,m41s9y,https://vitreus.io/,NOT_DEPIN,,,,"VITREUS is a decentralized infrastructure designed as a blockchain-as-aservice specifically for the BFSI (Banking, Financial Services, and Insurance) industry.",,,,https://twitter.com/VitreusChain,1050540395559403590,https://t.me/VitreusChainTG,,,https://www.linkedin.com/company/vitreus-chain/,
Vivid Labs,pmtbrw,https://www.vividlabs.com/,AI,ETHEREUM,VID,,"VIVID is a next-generation NFT publishing platform that allows anyone to create, manage, and sell multimedia NFTs. Powered by the VID token, VIVID enables new use cases and business models evolving NFTs into complete media experiences.",,,,https://twitter.com/VividLabsHQ,,https://t.me/vividlabs,https://medium.com/vivid-labs,https://github.com/videocoin,https://www.linkedin.com/company/vividlabshq/,
VO2,6q3z9k,https://www.vo2.fans/,NOT_DEPIN,,,,VO2 is a platform for fans to become stakeholders in their favourite athletes.,,,,,,,,,,
Vocdoni,ms6sq8,https://www.vocdoni.io/,NOT_DEPIN,,,,"Vocdoni is an open-source blockchain voting protocol that is scalable, auditable, censorship-resistant, and anonymous.",,EV3 Sal,,https://twitter.com/vocdoni,,,,,,
Volatilis,iqc8zd,https://www.volatilis.io/,NOT_DEPIN,,,,"Volatilis is a secure and efficient derivatives protocol for digital currency options, ensuring fund integrity.",DeFi,,,https://twitter.com/volatilistech,,,,,,
Volmex,7055ri,https://volmex.finance/,NOT_DEPIN,,,,Volmex Finance is a protocol for volatility indices and non-custodial trading built on Ethereum.,,,,,747599778421932196,,,,,
VPN3,tficxt,https://www.hotspotvpn.io/,WIRELESS,,,,VPN3 is a provider of a decentralized VPN protocol,VPN,,,,,,,,,
VulaCoin,4xae6i,https://about.vulacoin.com/,WIRELESS,,,,VulaCoin digitizes prepaid cash with stable coin for mobile wallets.,Wallet,,,,,,https://medium.com/@vulacoin,,http://www.linkedin.com/company/vulacoin,
Vulcan,y6ydao,https://vulcanforged.com/,NOT_DEPIN,ETHEREUM,PYR,vulcan-forged,"Vulcan Studios - web3 gaming, Elysium - carbon-neutral blockchain, MetaScapes - upcoming Metaverse-as-a-Service","Gaming, L1/L2",,,https://twitter.com/VulcanForged,,https://t.me/s/VulcanAnnouncements?before=1565,https://vulcanforgedco.medium.com/,,http://www.linkedin.com/company/vulcan-forged,
Vuzec,oogh3l,https://www.vuzec.com/work,NOT_DEPIN,,,,Vuzec: Empowering artists with decentralized crowdfunding and royalties distribution.,,,,https://twitter.com/vuzecmx,,,https://vuzecmx.medium.com/,,http://www.linkedin.com/company/vuzec,
W3bstream,g62mpn,https://w3bstream.com/,COMPUTE,,,,W3bstream is a decentralized infrastructure for connecting smart devices to smart contracts,,,,,534888542648664074,,,,,
Waev,mwkpfa,https://www.waev.com/,BLOCKCHAIN_INFRA,,,,Waev is a developer of a trustless data exchange protocol.,Data,ZZ,,https://twitter.com/WAElections,,https://t.me/s/wasscedito10?before=38,,https://github.com/thedevdojo/wave,https://www.linkedin.com/company/waevco,
Walken,kt77as,https://walken.io/,SENSORS,SOLANA,WLKN,walken,Walken is a play and exercise-to-earn mobile app that aims to connect real-life sports activities with online gaming and earning crypto.,,ZZ,,,,,,,,
Warp,q30kuh,https://warp.cc/,COMPUTE,,,,Warp Contracts is a data processing Smart Contract layer on top of the Arweave data storage chain.,,,,https://twitter.com/warp_contracts,1103577987007397919,,https://medium.com/@warp_contracts,https://github.com/warp-contracts,https://www.linkedin.com/company/joinwarp,
WatchX,pa7uyl,https://www.watchx.io/,NOT_DEPIN,,,,watchX is a Do it Yourself easy to program Smartwatch Kit for STEM Education.,Hardware,EV3 Sal,,https://twitter.com/officialwatchx,,,,,,
WaterLAB,5e8mxc,https://www.rh2o.app/,ENERGY,,RH2O,,WaterLAB is a decentralized organization producing regenerative water (RH2O) through the advancement of distributed desalination.,,EV3 Sal,,https://twitter.com/_WaterDAO,,,,,,
Wayfinder,p5jx6h,https://www.wayfinder.ai/,AI,NATIVE,,,"Wayfinder is a new AI-focused omni-chain tool enabling user-owned, autonomous AI agents to securely and efficiently navigate within and across blockchain ecosystems and applications while independently transacting assets they control via dedicated Web3 wallets.",,EV3 Sal,,https://twitter.com/aiwayfinder,,,,,,
Wayru,e9hjh5,https://www.wayru.io/,WIRELESS,,,,"Wayru Network is a Decentralized Wireless Network that provides affordable and reliable Internet access to everyone, everywhere.",,EV3 Sal,,,835242215973978152,,,,,
Weatherflow,4xa4u6,https://weatherflow.com/,SENSORS,IOTEX,,,Weatherflow is a decentralized weather monitoring network.,,,,https://twitter.com/weatherflow,,,,https://github.com/WeatherFlow,https://www.linkedin.com/company/weatherflow,
WeatherXM,ff9s3p,https://weatherxm.com/,SENSORS,POLYGON,WXM,weatherxm,WeatherXM is a decentralized weather data collection network.,Environmental,ZZ,,https://twitter.com/weatherxm?lang=en,813503633278631946,,https://blog.weatherxm.com/,,https://gr.linkedin.com/company/weatherxm,
Weavechain,s1imi6,https://www.weavechain.com/,BLOCKCHAIN_INFRA,,,,Weavechain is a secure data exchange layer that unlocks Web3 immutability and data lineage.,Data,ZZ,,https://twitter.com/weavechainweb3?lang=en,943094754802036767,,https://medium.com/weavechain,https://github.com/weavechain,https://www.linkedin.com/company/weavechain,
WeaveDB,fasbh5,https://weavedb.dev/,COMPUTE,,,,"WeaveDB is a decentralized, NoSQL database system that uses the Arweave network as its underlying storage layer. It is designed to offer a scalable, secure, and fast solution for data storage.",Storage,ZZ,,https://twitter.com/weave_db,,,,,,
Weaver Labs,nyvs73,https://www.weaverlabs.io/,WIRELESS,,,,"Weaver Labs is developing an open and shared marketplace of connectivity assets, Cell-Stack.",,,,,,,,,,
Web3Go,eiyl95,https://web3go.xyz/home,AI,,,,"Web3Go is a data intelligence network that connects humans, data, and AI, offering a suite of AI-native digital asset tools and real-time data infrastructure.",,EV3 Sal,,,,,,,,
WebAI,n03geb,https://webai.live/,AI,,WEBAI,,"Web AI is an innovative project that uses AI technology to create customized websites from scratch. It utilizes deep learning algorithms and NLP to analyze user requests and generate attractive, user-friendly websites according to their preferences.",,,,https://twitter.com/WebAIofficial,,,,,,
WeChipN,8i9tvk,https://wechipn.com/,NOT_DEPIN,,,,WeChipN is a provider of a Rewards Community that mobilizes culture with web3 technology.,,,,,,,,,,
WeDataNation,ah17kx,https://wedatanation.io/,BLOCKCHAIN_INFRA,,,,WeDataNation: Secure platform for user data aggregation.,"Advertising, Data",,,https://twitter.com/wedatanation,947527916403699772,,,,,
WeFi,wfvjio,https://wefi.xyz/,NOT_DEPIN,ETHEREUM,WEFI,wefi-finance,WeFi is a decentralized protocol that opens up under collateralized borrowing and lending options in the DeFi space.,DeFi,ZZ,,https://twitter.com/wefi?lang=en,915517391520276510,,,https://github.com/wefi,https://www.linkedin.com/company/wefi,
WeHealth,80us6v,https://www.wehealth.org/,BLOCKCHAIN_INFRA,,,,WeHealth: Innovative digital solutions for remote patient monitoring and personalized healthcare.,Health & Fitness,,,https://twitter.com/WeHealthOrg,,,,,https://www.linkedin.com/company/wehealthorg/,
WeSendit,tx9874,https://wesendit.io/,COMPUTE,BINANCE,WSI,wesendit,WeSendit is a file transfer service specializing in anonymous data transfer and decentralized storage solutions.,,ZZ,,https://twitter.com/WeSendit,,https://t.me/wesenditcom,,,https://www.linkedin.com/company/wesendit/,
Weve,yb56ub,https://www.weve.co/,WIRELESS,,,,Weveweve is a decentralized mail system on Arweave network. It ensures permanent availability of messages and web app.,,,,,,,,,https://www.linkedin.com/company/weve/,
WiCrypt,ynsj12,https://wicrypt.com/,WIRELESS,POLYGON,WNT,wicrypt,WiCrypt is a decentralized WiFi sharing network.,,ZZ,,https://twitter.com/wicrypt?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor,892017585711886366,https://t.me/s/wicryptann?before=486,https://medium.com/wicrypt,https://github.com/AmyXandra/wicrypt-new,https://ng.linkedin.com/company/wicrypt,
WiFi Map,xz6ffz,https://www.wifimap.io/,WIRELESS,POLYGON,WIFI,wifi,WiFi Map is a decentralized connectivity ecosystem mapping 10m+ WiFi hotspots globally.,,,,https://twitter.com/wifimapapp,,https://t.me/+GhVechqawKk5OTk0,https://medium.com/@wifimap,,http://www.linkedin.com/company/wifi-map-llc,
WifiDabba,sc8bst,https://www.wifidabba.com/,WIRELESS,,,,"WifiDabba builds low-cost, scalable, distributed Wi-Fi infrastructure using lasers.",,ZZ,,https://twitter.com/WifiDabba,1120323012240085014,,,,https://in.linkedin.com/company/wifidabba,
WiHi,yg5k1j,https://www.wihi.link/,SENSORS,,,,WiHi is a decentralized protocol incentivizing weather and climate data collection and predictions through cyrptoeconomics.,,W. L.,,https://twitter.com/WiHiWeather,1051081018150498404,,https://medium.com/wihi-weather,https://github.com/wihi-labs,,
Wiman,ypklkh,https://www.wiman.me/,WIRELESS,,,,Wiman offers global mobile WiFi for the sharing economy.,,,,https://twitter.com/UN_Women,,,https://medium.com/modern-women,https://github.com/wimanwifi,https://www.linkedin.com/company/wiman-the-social-wifi-network/,
Wingbits,dxk2mc,https://wingbits.com/,SENSORS,,,,Wingbits is a decentralized flight tracking network.,,ZZ,,https://twitter.com/wingbits,1082294632689455154,,https://medium.com/@wingbits,https://github.com/wingbit,https://www.linkedin.com/company/wingits,
WINR,jhyqcs,https://winr.games/,NOT_DEPIN,ARBITRUM,WINR,winr-protocol,WINR Protocol is a blockchain-based platform enabling developers to build secure on-chain games with the WINR SDK.,Gaming,,,https://twitter.com/WINRProtocol,1044586317742358529,https://t.me/WINRProtocol,,https://github.com/winrprotocol/WINR_Protocol,,
Wire,yih1xv,https://wire.network/,NOT_DEPIN,,,,Wire: blockchain with APOS consensus for user growth.,L1/L2,,,https://twitter.com/wire,378315541083062282,,,https://github.com/wireapp,https://www.linkedin.com/company/wire-secure-communication/,
Wirtual,6k69oz,https://wirtual.co/,SENSORS,BINANCE,WIRTUAL,wirtual,WIRTUAL is a Web3 Exercise to Earn platform that allows users to earn WIRTUAL coins through exercise and exchange coins for store purchases or discounts.,,ZZ,,,,,,,,
Witness Chain,ooq2m5,https://www.witnesschain.com/,BLOCKCHAIN_INFRA,,,,Witness Chain offers a DePIN Coordination Layer that translates physical network attributes into verifiable digital proofs enabling the creation of new applications and services across decentralized networks.,,ZZ,,https://twitter.com/witnesschain,,,,,,
Witnet,09nrgb,https://witnet.io/,BLOCKCHAIN_INFRA,ETHEREUM,WIT,witnet,Witnet is a decentralized oracle network that connects smart contracts to the outer world. It aims to allow any piece of software to retrieve the contents published at any web address with complete and verifiable proof of its integrity and without blindly trusting any third party.,,,,https://twitter.com/witnet_io,,https://t.me/witnetio,https://medium.com/witnet,https://github.com/witnet,https://www.linkedin.com/company/witnet/,
Woolly Farms,xh846b,https://woolly.io/,BLOCKCHAIN_INFRA,,,,Woolly Farms - connecting consumers and growers to build sustainable cities and ready our food systems.,,,,https://twitter.com/woollyfarms,,,,,https://www.linkedin.com/company/woollyfarms/,
WootzApp,1hxjaa,,AI,,,,WootzApp is an open-source Chromium fork that allows users to earn while browsing by contributing data to AI.,,ZZ,,https://twitter.com/wootzapp,,,,https://github.com/wootzapp/wootz-browser,,
World Mobile,fo1iua,https://worldmobile.io/,WIRELESS,CARDANO,WMT,world-mobile-token,World Mobile is a decentralized mobile network operating globally.,Mobile,,,https://twitter.com/WorldMobileTeam/,739450842108919828,https://t.me/WorldMobileTeam,,https://github.com/worldmobilegroup,https://www.linkedin.com/company/worldmobilegroup/,
Worldcoin,y4tubw,https://worldcoin.org/,NOT_DEPIN,ETHEREUM,WLD,worldcoin,"Worldcoin is building the world's largest identity and financial network to serve as a public utility, giving ownership to everyone.",,,,,956750052771127337,,,,,
WSB Shills,knsxty,https://www.wsb.sh/,NOT_DEPIN,,,,"WSB Shills is a decentralised prediction market platform, allowing users to predict outcomes and earn rewards.",,,,https://twitter.com/wsb_sh,725851172266573915,https://t.me/wsbsh,,,,
Wysdom,trnymt,https://wysdom.xyz/,NOT_DEPIN,,,,Wysdom is a collaboration platform for web3 development and publishing.,,,,https://twitter.com/WysdomXyz,,,,,https://www.linkedin.com/company/wysdomxyz/about/,
Xai,at80xk,https://www.xai.games/,NOT_DEPIN,ETHEREUM,XAI,,Xai is developed to enable real economies and open trade in the next generation of video games.\,,,,,870683519230308372,,,,,
XCAD,xpvsgg,https://xcadnetwork.com/,NOT_DEPIN,ETHEREUM,XCAD,xcad-network,"XCAD Network is a platform harnessing the value of Content Creator audiences via Creator tokenization, viewers earn rewards used for fan governance.",,,,,848847833133481994,,,,,
Xero AI,89qdnb,https://www.xeroai.io/,AI,ETHEREUM,XEROAI,xero-ai,"XERO AI is a free decentralized platform specializing in Text-to-Video conversion, empowering users to transform text into captivating video content effortlessly.",,ZZ,,https://twitter.com/xeroai_erc,,,,,,
XGPT,2aryqe,https://xgpt-ai.com/,AI,ETHEREUM,XGPT,x-gpt,"XGPT is an AI-powered Conversational Interface for Blockchain that integrates all existing dApps and services into a single platform, offering convenience and simplicity for users.",,ZZ,,,,,,,,
XLANDER,e6vqyh,https://xlander.io/,BLOCKCHAIN_INFRA,,,,"XLANDER is a Layer1 blockchain designed to revolutionize existing blockchain architectures and applications through innovative hybrid POS + Green POW autonomous consensus, bandwidth sharding, and native implementation of evolutionary protocols, developed by Meson Network.",L1/L2,EV3 Sal,,https://twitter.com/xlanderio,,,,,,
XMTP,rvdlk1,https://xmtp.org/,BLOCKCHAIN_INFRA,,,,The Extensible Message Transport Protocol (XMTP) is a secure messaging protocol that enables communication between blockchain accounts.,,,,https://twitter.com/xmtp_,831836269558235136,,https://xmtp.org/blog,https://github.com/xmtp,https://www.linkedin.com/company/xmtp-labs/,
XNET,pyz7yz,https://xnet.company/,WIRELESS,POLYGON,XNET,xnet-mobile,XNET is a blockchain-powered mobile carrier building neutral-host telecommunications infrastructure.,Mobile,,,https://twitter.com/XNET_Mobile,984268252815446107,,https://medium.com/@XNET_Mobile,,http://www.linkedin.com/company/xnet-mobile,
XX,61nayi,https://xx.network/,NOT_DEPIN,NATIVE,XX,xxcoin,XX: Blockchain for quantum-resistant and private smartphone communication and value exchange.,"L1/L2, Quantum",,,https://twitter.com/xx_network,491648371556220954,,https://medium.com/@todear4ever,https://github.com/xx-labs,https://www.linkedin.com/company/xxteam,
XYO,2icwvy,https://xyo.network/,BLOCKCHAIN_INFRA,ETHEREUM,XYO,xyo,"XYO is a tech network and protocol designed to improve the validity, certainty, and value of data. ",Positioning,ZZ,,https://twitter.com/OfficialXYO,935586624392298547,https://t.me/xyonetwork,,,https://www.linkedin.com/company/officialxyo/,
Y8U,lhirwt,https://y8u.ai/,AI,BINANCE,Y8U,y8u,"Y8U.AI is a native decentralized protocol that combines content-addressable storage with smart contract-based consent management, allowing users to control how their traits, encoded as protected data NFTs are processed by AI Miners.",,ZZ,,https://twitter.com/y8udotai,,,,,,
YAI,ukv6pn,https://www.yoracle.ai/,BLOCKCHAIN_INFRA,ETHEREUM,YAI,y,"YAI is an AP-powered Market Data Oracle that connects to all market data, and predicts the impact of events, price moves and narratives, and chain rotations and airdrop events.",Oracle,ZZ,,https://twitter.com/yai_erc,,,,,,
Ylide,zug89a,http://www.ylide.io/,BLOCKCHAIN_INFRA,,,,Ylide Protocol: secure cross-chain wallet communication for Web3 projects.,,,,https://twitter.com/ylide_,,https://t.me/ylide_chat,https://medium.com/@ylide,https://github.com/ylide-io,http://www.linkedin.com/company/ylide,
YogaPetz,1gh368,https://yogapetz.com/,NOT_DEPIN,,WELL,,"Yogapetz is a decentralised wellness ecosystem that prioritizes mindfulness, community and rewards.",,,,https://twitter.com/yogapetz,,,,,,
Yokai,jbyfc1,http://www.yokai.network/,BLOCKCHAIN_INFRA,,,,Yokai Developer: Security network with crowdsourced audit and bug bounty platform.,,,,https://twitter.com/yokai_network,874678777748279316,,https://yokainetwork.medium.com/,,http://www.linkedin.com/company/yokainetwork,
YOM,y1aj1g,https://www.yom.ooo/,COMPUTE,SOLANA,YOM,yom,YOM is the 1st decentralized pixel-streaming infrastructure (DePIN) powering cloud gaming at low-latency and near-zero prices across all devices and channels.,,ZZ,,https://twitter.com/YOMetaverse,,,,,,
Yoosend,89c3bx,https://yoosend.com/,COMPUTE,,,,Yoosend is an advanced decentralized cloud storage and file transfer solution for personal and business use.,Storage,EV3 Sal,,https://twitter.com/yoosend,,,,,,
Zama,3cujtx,https://www.zama.ai/,NOT_DEPIN,,,,"Zama provides a range of open-source FHE tooling for both crypto and non-crypto use cases. Its fhEVM library enables private smart contracts, guaranteeing both on-chain confidentiality and composability.",FHE,EV3 Sal,,,,,,,,
Zano,jog9r3,https://zano.org/,BLOCKCHAIN_INFRA,ETHEREUM,ZANO,zano,"Zano is an enterprise-grade privacy platform, scalable and private, built for privacy-protected tokens and decentralized applications.",,ZZ,,,,,,,,
zCloak,h8aibd,https://zcloak.network/,BLOCKCHAIN_INFRA,,,,"zCloak Network is a Web3 real-world identity infrastructure that prioritizes data privacy, utilizing ZK proofs for user data sovereignty and shifting data handling from centralized servers to user devices for more secure digital interaction.",,EV3 Sal,,https://twitter.com/zcloaknetwork,,,,,,
Zeal,l2t357,https://www.zeal.app/,NOT_DEPIN,,,,DeFi Wallet with Free Bank Transfers,,EV3 Sal,,,961390365708009524,,,,,
Zebec,6krmhm,https://zebec.io/,NOT_DEPIN,SOLANA,ZBCN,zebec-protocol,"Zebec Network is a DePIN and RWA Payments Network that enables real-time and secure transactions for assets, services, or contracts.",,ZZ,,https://twitter.com/Zebec_HQ,,,,,,
Zeetta,6gz71b,https://zeetta.com/,WIRELESS,,,,Zeetta is a network virtualization company specializing in SDN solutions for enterprise and carrier networks.,Software,ZZ,,https://twitter.com/zeettas?lang=en,,https://t.me/s/ZeetaaProjects?before=209,,https://github.com/zeeta,https://uk.linkedin.com/company/zeetta,
Zeitgeist,yfqm09,https://zeitgeist.pm/,NOT_DEPIN,POLKADOT,ZTG,zeitgeist,Zeitgeist is a provider of decentralized prediction markets software built on Polkadot.,Prediction Market,,,https://twitter.com/zeitgeist_xyz?lang=en,737780518313000960,,https://medium.com/@zeitgeist.pro,,https://uk.linkedin.com/company/the-zeitgeist-agency-ltd,
Zenithereum,yi3cpi,https://zenithereum.ai/,AI,,,,Zenithereum: Decentralized AI for agent growth in crypto and real-world environments.,,,,https://twitter.com/zenithereum,,https://t.me/ZenithereumAIofficial,,,,
Zentachain,n33nuc,https://zentachain.io/,WIRELESS,,CHAIN,,Zentachain is a decentralized high-throughput blockchain ecosystem designed for secure offline IoT communication.,,ZZ,,https://twitter.com/zentachain,,,,,,
Zephyr,7d8n5l,https://www.zephyrprotocol.com/,NOT_DEPIN,NATIVE,ZEPH,zephyr-protocol,Zephyr Protocol is a cryptocurrency protocol aiming to combine and refine the best proven privacy and stablecoin protocols.,,,,,,,,,,
Zeppelin,cvzsdf,https://www.zeppelinwireless.com/,WIRELESS,,,,Zeppelin aims to be the global leader in decentralized wireless infrastructure.,Mining,,,,,,,,,
Zero Computing,4hi0gh,https://zerocomputing.xyz/,NOT_DEPIN,,,,Zero Computing is a dedicated cloud platform supplying unmatched efficiency and savings for zero-knowledge-proof generation.,ZK,ZZ,,https://twitter.com/zero_computing,,,,,,
Zero1 Labs,bate7g,https://z1labs.ai/,AI,ETHEREUM,DEAI,zero1-labs,"Zero1 is a decentralized AI ecosystem focused on Data Governance with a mission to simplify the development process and enhance the discoverability, growth, and monetization of DeAI products while protecting user's data.",,ZZ,,https://twitter.com/zero1_labs,,,,,,
ZeroSync,qe85lx,https://zerosync.org/,NOT_DEPIN,,,,"ZeroSync has designed and is currently implementing a Layer 2 protocol that has remarkable privacy and scalability properties, enabling Bitcoin to process more than 100 token transactions per second.",,,,https://twitter.com/zerosync_,,https://t.me/zerosync_chat,,https://github.com/ZeroSync/ZeroSync,,
Ziesha,fc7rgx,https://ziesha.network/,NOT_DEPIN,,,,Ziesha is a new layer-1 cryptocurrency that uses Zero-Knowledge proof technology for transaction compression.,ZK,ZZ,,,,,,,,
ZIGDAO,safef0,https://zigdao.com/,NOT_DEPIN,ETHEREUM,ZIG,zignaly,"Zignaly is a Cryptocurrency Social Investment Platform that lets regular people invest via the expertise and leverage of the world’s top, vetted crypto traders — while only paying a fee on profits.",,,,https://twitter.com/zignaly,486954374845956097,https://t.me/ZignalyHQ,https://content.zignaly.com/blog,https://github.com/zignaly-open,https://www.linkedin.com/company/zignaly/,
Zion,4wmnm0,http://www.zion.fyi/,NOT_DEPIN,NATIVE,ZION,zion,"Zion: decentralized platform for content flow, payments, and ownership (80)",,,,https://twitter.com/get_zion,,,,https://github.com/getzion/,https://twitter.com/get_zion,
Zircuit,jjl0jw,https://www.zircuit.com/,NOT_DEPIN,,,,Zircuit is a modular zk rollup with AI-enabled security at the sequencer level.,ZK,EV3 Sal,,https://twitter.com/ZircuitL2,,,,,,
zkCloud,01khbv,https://www.zkcloud.io/,NOT_DEPIN,,,,zkcloud is a cloud-based service that allows users to create zero-knowledge proofs on the cloud.,ZK,EV3 Sal,,,,,,,,
zkHUB,5ylhgz,https://zkhub.dev/,NOT_DEPIN,,,,zkHub is a decentralized marketplace for generating zero-knowledge proofs. The platform enables proof-gen in an efficient and privacy-preserving manner using MPC & parallelization techniques.,ZK,EV3 Sal,,,,,,,,
zkMe,o9x3hn,https://zk.me/,NOT_DEPIN,,,,"zkMe builds Identity Oracles that leverage the power of zero-knowledge-proofs to enable secure, self-sovereign, and private credential verifications.",Oracle,EV3 Sal,,https://twitter.com/zkme_,,,,,,
zKML,z7dthf,https://www.zkml.systems/,NOT_DEPIN,,,,ZKML harnesses machine learning to create zero-knowledge proofs and secure multiparty computation for data privacy.,ZK,ZZ,,https://twitter.com/ZKMLsystems,,,,,,
ZKPass,uhupn6,https://zkpass.org/home,NOT_DEPIN,,,,ZKPass is a privacy-preserving protocol for private data verification.,,,,https://twitter.com/zkPass,950858460122206228,,https://medium.com/zkpass,https://github.com/zkPassOfficial,http://www.linkedin.com/company/zkpass,
ZkTsunami,7n7stw,https://www.zktsunami.io/,NOT_DEPIN,BINANCE,:ZKT:,tenset,"ZKTsunami pioneers privacy-centric solutions with its ZK-AnonSNARK technology, offering an interoperable ecosystem for anonymous digital assets.",ZK,ZZ,,,,,,,,
Zonal,gsucx5,,,,,,Zonal is building a proof of micro-location protocol that uses a decentralized mesh network powered by wireless communication technologies to provide proximity validation and enable highly reliable global and indoor positioning.,,,,,,,,,,
Zoth,4l25dn,https://zoth.io/,NOT_DEPIN,,,,Zoth is an on-chain marketplace for Real World Assets (RWAs).,RWA,,,https://twitter.com/i/flow/login?redirect_after_login=%2Fzothdotio,,https://telegram.me/+nFUrC_I1hA1iNWU9,http://www.linkedin.com/company/zoth-io,,https://github.com/0xZothio,
ZTM,tl6ivi,https://flomesh.io/,BLOCKCHAIN_INFRA,,,,ZTM - Zero Trust Mesh by Flomesh is an open-source network infrastructure software for running a decentralized network.,,EV3 Sal,,,,,,https://github.com/flomesh-io/ztm,,
Zus,q97oiz,https://zus.network/,COMPUTE,ETHEREUM,ZCN,0chain,Zus is a decentralized storage network with built-in privacy and security compliance.,Storage,,,https://twitter.com/zus_network,992566329632641056,https://t.me/zus_network,https://medium.com/0chain,https://github.com/0chain,http://www.linkedin.com/company/zusnetwork,
ZwapX,t4czq1,https://zwapx.com/,NOT_DEPIN,,,,"ZwapX is a Real World Assets On-Chain online marketplace, allowing users to buy, sell, bid, and trade physical watches in the form of tokens.",RWA,EV3 Sal,,https://twitter.com/zwapxofficial,,,,,,
Zyber 365,sapapu,http://www.zyber365.com/,NOT_DEPIN,,,,"Zyber 365 are providing a robust, decentralized, and cyber-secured operating system which adheres to the fundamental principles of environmental sustainability.",,,,,1118081430346530927,,,,,
testNewProjectDeleteThis,1y5sby,https://www.wifimap.io/,COMPUTE,CRONOS,asdasd,asdasdasd,test,,,,asd,,test,https://www.wifimap.io/blog,asdasd,,